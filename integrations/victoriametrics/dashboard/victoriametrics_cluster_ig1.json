{
  "name": "Victoria Metrics Cluster",
  "tags": "VictoriaMetrics Prometheus",
  "ident": "",
  "configs": {
    "version": "2.0.0",
    "links": [
      {
        "title": "Victoria Metrics cluster - Readme",
        "url": "https://github.com/VictoriaMetrics/VictoriaMetrics/blob/cluster/README.md",
        "targetBlank": true
      },
      {
        "title": "Example of alerting rules",
        "url": "https://hackmd.io/@rEkXzjc5RemiMmrWpefJsg/SyUcvcq7I",
        "targetBlank": true
      },
      {
        "title": "Grafana Labs",
        "url": "https://grafana.com/grafana/dashboards/11831",
        "targetBlank": true
      },
      {
        "title": "Found a bug ?",
        "url": "https://github.com/iguanesolutions/vmcluster-ig1dashboard/issues",
        "targetBlank": true
      }
    ],
    "var": [
      {
        "name": "service",
        "type": "query",
        "datasource": {
          "cate": "prometheus"
        },
        "definition": "label_values(vm_app_version{version=~\"^vm.*\"}, service)",
        "reg": "",
        "multi": true,
        "allOption": true,
        "allValue": null
      },
      {
        "name": "instance_insert",
        "type": "query",
        "datasource": {
          "cate": "prometheus"
        },
        "definition": "label_values(vm_app_version{version=~\"^vminsert.*\", service=~\"$service\"}, instance)",
        "reg": "",
        "multi": true,
        "allOption": true,
        "allValue": null
      },
      {
        "name": "instance_storage",
        "type": "query",
        "datasource": {
          "cate": "prometheus"
        },
        "definition": "label_values(vm_app_version{version=~\"^vmstorage.*\", service=~\"$service\"}, instance)",
        "reg": "",
        "multi": true,
        "allOption": true,
        "allValue": null
      },
      {
        "name": "instance_select",
        "type": "query",
        "datasource": {
          "cate": "prometheus"
        },
        "definition": "label_values(vm_app_version{version=~\"^vmselect.*\", service=~\"$service\"}, instance)",
        "reg": "",
        "multi": true,
        "allOption": true,
        "allValue": null
      },
      {
        "type": "custom",
        "name": "retention",
        "definition": "1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120",
        "allValue": null,
        "allOption": false,
        "multi": false
      }
    ],
    "panels": [
      {
        "version": "2.0.0",
        "id": "ef132263-d144-4a00-bcff-17d10bae0f62",
        "type": "row",
        "name": "Overview",
        "collapsed": true,
        "layout": {
          "h": 1,
          "w": 24,
          "x": 0,
          "y": 0,
          "i": "ef132263-d144-4a00-bcff-17d10bae0f62",
          "isResizable": false
        },
        "panels": []
      },
      {
        "type": "stat",
        "id": "bc5da81c-9a42-4ef6-be69-59740b130fa0",
        "layout": {
          "h": 3,
          "w": 4,
          "x": 0,
          "y": 1,
          "i": "bc5da81c-9a42-4ef6-be69-59740b130fa0",
          "isResizable": true
        },
        "version": "2.0.0",
        "datasourceCate": "prometheus",
        "datasourceName": "flashcat_prometheus",
        "targets": [
          {
            "refId": "A",
            "expr": "sum(vm_cache_entries{service=~\"$service\", instance=~\"$instance_storage\", type=\"storage/hour_metric_ids\"})"
          }
        ],
        "name": "Active time series",
        "links": [],
        "description": "Shows the number of active time series with new data points inserted during the last hour. High value may result in ingestion slowdown. ",
        "maxPerRow": 4,
        "custom": {
          "textMode": "value",
          "graphMode": "none",
          "colorMode": "value",
          "calc": "lastNotNull",
          "valueField": "Value",
          "colSpan": 1,
          "textSize": {}
        },
        "options": {
          "standardOptions": {},
          "thresholds": {
            "steps": [
              {
                "color": "#634CD9",
                "value": null,
                "type": "base"
              }
            ]
          }
        }
      },
      {
        "type": "stat",
        "id": "14a0a1a3-e6cc-4a8f-9617-a9720358971d",
        "layout": {
          "h": 3,
          "w": 4,
          "x": 4,
          "y": 1,
          "i": "14a0a1a3-e6cc-4a8f-9617-a9720358971d",
          "isResizable": true
        },
        "version": "2.0.0",
        "datasourceCate": "prometheus",
        "targets": [
          {
            "refId": "A",
            "expr": "sum(vm_rows{service=~\"$service\", instance=~\"$instance_storage\", type=~\"indexdb.*\"})"
          }
        ],
        "name": "Index Size",
        "links": [],
        "description": "How many entries inverted index contains. This value is proportional to the number of unique timeseries in storage(cardinality).",
        "maxPerRow": 4,
        "custom": {
          "textMode": "value",
          "graphMode": "none",
          "colorMode": "value",
          "calc": "lastNotNull",
          "valueField": "Value",
          "colSpan": 1,
          "textSize": {}
        },
        "options": {
          "standardOptions": {},
          "thresholds": {
            "steps": [
              {
                "color": "#634CD9",
                "value": null,
                "type": "base"
              }
            ]
          }
        }
      },
      {
        "type": "stat",
        "id": "67eb7e61-cf7b-45c6-9f3d-e7e5fabf5e8a",
        "layout": {
          "h": 3,
          "w": 8,
          "x": 8,
          "y": 1,
          "i": "67eb7e61-cf7b-45c6-9f3d-e7e5fabf5e8a",
          "isResizable": true
        },
        "version": "2.0.0",
        "datasourceCate": "prometheus",
        "targets": [
          {
            "refId": "A",
            "expr": "sum(vm_rows{service=~\"$service\", instance=~\"$instance_storage\", type!=\"indexdb\"})"
          }
        ],
        "name": "Total Datapoints",
        "links": [],
        "description": "How many datapoints are in storage",
        "maxPerRow": 4,
        "custom": {
          "textMode": "value",
          "graphMode": "none",
          "colorMode": "value",
          "calc": "lastNotNull",
          "valueField": "Value",
          "colSpan": 1,
          "textSize": {}
        },
        "options": {
          "standardOptions": {},
          "thresholds": {
            "steps": [
              {
                "color": "#634CD9",
                "value": null,
                "type": "base"
              }
            ]
          }
        }
      },
      {
        "type": "stat",
        "id": "c7f84145-7c84-4d9d-aaaf-867fd2a7cf63",
        "layout": {
          "h": 3,
          "w": 4,
          "x": 16,
          "y": 1,
          "i": "c7f84145-7c84-4d9d-aaaf-867fd2a7cf63",
          "isResizable": true
        },
        "version": "2.0.0",
        "datasourceCate": "prometheus",
        "targets": [
          {
            "refId": "A",
            "expr": "sum(vm_data_size_bytes{service=~\"$service\", instance=~\"$instance_storage\", type!=\"indexdb\"})"
          }
        ],
        "name": "Disk Space Usage",
        "links": [],
        "description": "Total amount of used disk space",
        "maxPerRow": 4,
        "custom": {
          "textMode": "value",
          "graphMode": "none",
          "colorMode": "value",
          "calc": "lastNotNull",
          "valueField": "Value",
          "colSpan": 1,
          "textSize": {}
        },
        "options": {
          "standardOptions": {},
          "thresholds": {
            "steps": [
              {
                "color": "#634CD9",
                "value": null,
                "type": "base"
              }
            ]
          }
        }
      },
      {
        "type": "stat",
        "id": "6a7655c2-740a-4b19-878e-9a618a227bfb",
        "layout": {
          "h": 3,
          "w": 4,
          "x": 20,
          "y": 1,
          "i": "6a7655c2-740a-4b19-878e-9a618a227bfb",
          "isResizable": true
        },
        "version": "2.0.0",
        "datasourceCate": "prometheus",
        "targets": [
          {
            "refId": "A",
            "expr": "with(\n  storageNodes = {service=~\"$service\", instance=~\"$instance_storage\", type!=\"indexdb\"}\n)\nsum(vm_data_size_bytes{storageNodes}) / sum(vm_rows{storageNodes})"
          }
        ],
        "name": "Datapoint Average Size",
        "links": [],
        "description": "Disk space usage / Total datapoints",
        "maxPerRow": 4,
        "custom": {
          "textMode": "value",
          "graphMode": "none",
          "colorMode": "value",
          "calc": "lastNotNull",
          "valueField": "Value",
          "colSpan": 1,
          "textSize": {}
        },
        "options": {
          "standardOptions": {},
          "thresholds": {
            "steps": [
              {
                "color": "#634CD9",
                "value": null,
                "type": "base"
              }
            ]
          }
        }
      },
      {
        "type": "stat",
        "id": "052d7a90-c44f-4525-a830-708e8cbff3a1",
        "layout": {
          "h": 3,
          "w": 4,
          "x": 0,
          "y": 4,
          "i": "052d7a90-c44f-4525-a830-708e8cbff3a1",
          "isResizable": true
        },
        "version": "2.0.0",
        "datasourceCate": "prometheus",
        "targets": [
          {
            "refId": "A",
            "expr": "sum(rate(vm_http_requests_total{service=~\"$service\", instance=~\"$instance_insert|$instance_storage|$instance_select\", path!=\"/favicon.ico\"}))",
            "legend": ""
          }
        ],
        "name": "Requests Rate",
        "links": [],
        "description": "Global HTTP requests rate for selected nodes",
        "maxPerRow": 4,
        "custom": {
          "textMode": "value",
          "graphMode": "none",
          "colorMode": "value",
          "calc": "lastNotNull",
          "valueField": "Value",
          "colSpan": 1,
          "textSize": {}
        },
        "options": {
          "standardOptions": {},
          "thresholds": {
            "steps": [
              {
                "color": "#634CD9",
                "value": null,
                "type": "base"
              }
            ]
          }
        }
      },
      {
        "type": "stat",
        "id": "97370d08-991c-451a-8988-2672ed556184",
        "layout": {
          "h": 3,
          "w": 4,
          "x": 4,
          "y": 4,
          "i": "97370d08-991c-451a-8988-2672ed556184",
          "isResizable": true
        },
        "version": "2.0.0",
        "datasourceCate": "prometheus",
        "targets": [
          {
            "refId": "A",
            "expr": "sum(rate(vm_rows_inserted_total{service=~\"$service\", instance=~\"$instance_insert\"}))"
          }
        ],
        "name": "Ingestion Rate",
        "links": [],
        "description": "How many datapoints are inserted into storage per second (points per second)",
        "maxPerRow": 4,
        "custom": {
          "textMode": "value",
          "graphMode": "none",
          "colorMode": "value",
          "calc": "lastNotNull",
          "valueField": "Value",
          "colSpan": 1,
          "textSize": {}
        },
        "options": {
          "standardOptions": {},
          "thresholds": {
            "steps": [
              {
                "color": "#634CD9",
                "value": null,
                "type": "base"
              }
            ]
          }
        }
      },
      {
        "type": "stat",
        "id": "6a073816-efdf-4f40-a2ad-477b47dab9f5",
        "layout": {
          "h": 3,
          "w": 4,
          "x": 8,
          "y": 4,
          "i": "6a073816-efdf-4f40-a2ad-477b47dab9f5",
          "isResizable": true
        },
        "version": "2.0.0",
        "datasourceCate": "prometheus",
        "targets": [
          {
            "refId": "A",
            "expr": "sum(rate(vm_new_timeseries_created_total{service=~\"$service\", instance=~\"$instance_storage\"}))"
          }
        ],
        "name": "Churn Rate",
        "links": [],
        "description": "Shows how many of new time-series are created every second.  High churn rate tightly connected with database performance and may result in unexpected OOM's or slow queries. It is recommended to always keep an eye on this metric to avoid unexpected cardinality \"explosions\".\n\nGood references to read:\n* https://www.robustperception.io/cardinality-is-key\n* https://www.robustperception.io/using-tsdb-analyze-to-investigate-churn-and-cardinality",
        "maxPerRow": 4,
        "custom": {
          "textMode": "value",
          "graphMode": "none",
          "colorMode": "value",
          "calc": "lastNotNull",
          "valueField": "Value",
          "colSpan": 1,
          "textSize": {}
        },
        "options": {
          "standardOptions": {},
          "thresholds": {
            "steps": [
              {
                "color": "#634CD9",
                "value": null,
                "type": "base"
              }
            ]
          }
        }
      },
      {
        "type": "stat",
        "id": "6f2b6d61-463f-40d2-8466-f0c6f66587c0",
        "layout": {
          "h": 3,
          "w": 4,
          "x": 12,
          "y": 4,
          "i": "6f2b6d61-463f-40d2-8466-f0c6f66587c0",
          "isResizable": true
        },
        "version": "2.0.0",
        "datasourceCate": "prometheus",
        "targets": [
          {
            "refId": "A",
            "expr": "sum(rate(vm_http_request_errors_total{service=~\"$service\", instance=~\"$instance_insert|$instance_nodes|$instance_select\"}))"
          }
        ],
        "name": "Requests errors rate",
        "links": [],
        "description": "HTTP error rate for all selected nodes",
        "maxPerRow": 4,
        "custom": {
          "textMode": "value",
          "graphMode": "none",
          "colorMode": "value",
          "calc": "lastNotNull",
          "valueField": "Value",
          "colSpan": 1,
          "textSize": {}
        },
        "options": {
          "standardOptions": {},
          "thresholds": {
            "steps": [
              {
                "color": "#634CD9",
                "value": null,
                "type": "base"
              }
            ]
          }
        }
      },
      {
        "type": "stat",
        "id": "35ac336a-84df-42a7-a39c-c7d5cfe22d20",
        "layout": {
          "h": 3,
          "w": 4,
          "x": 16,
          "y": 4,
          "i": "35ac336a-84df-42a7-a39c-c7d5cfe22d20",
          "isResizable": true
        },
        "version": "2.0.0",
        "datasourceCate": "prometheus",
        "datasourceName": "flashcat_prometheus",
        "targets": [
          {
            "refId": "A",
            "expr": "sum(rate(vm_rpc_connection_errors_total{addr=~\".+\",service=~\"$service\", instance=~\"$instance_insert\"}[5m])) + sum(rate(vm_rpc_dial_errors_total{addr=~\".+\",service=~\"$service\", instance=~\"$instance_insert\"}[5m])) + sum(rate(vm_rpc_handshake_errors_total{addr=~\".+\",service=~\"$service\", instance=~\"$instance_insert\"}[5m]))"
          }
        ],
        "name": "RPC errors rate",
        "description": "RPC errors are interconnection errors between cluster components. Errors rate should be 0 if network connection is stable and all components are up and operational.",
        "maxPerRow": 4,
        "custom": {
          "textMode": "value",
          "graphMode": "none",
          "colorMode": "value",
          "calc": "lastNotNull",
          "valueField": "Value",
          "colSpan": 1,
          "textSize": {}
        },
        "options": {
          "standardOptions": {},
          "thresholds": {
            "steps": [
              {
                "color": "#634CD9",
                "value": null,
                "type": "base"
              }
            ]
          }
        }
      },
      {
        "version": "2.0.0",
        "id": "25227bb5-c31d-45f1-bef1-30e4bfb4f041",
        "type": "row",
        "name": "Capacity Planning / Fine Tuning",
        "collapsed": true,
        "layout": {
          "h": 1,
          "w": 24,
          "x": 0,
          "y": 7,
          "i": "25227bb5-c31d-45f1-bef1-30e4bfb4f041",
          "isResizable": false
        },
        "panels": []
      },
      {
        "type": "stat",
        "id": "fd9a1a8f-318c-49ee-ab2e-3e4c381075d0",
        "layout": {
          "h": 3,
          "w": 4,
          "x": 0,
          "y": 8,
          "i": "fd9a1a8f-318c-49ee-ab2e-3e4c381075d0",
          "isResizable": true
        },
        "version": "2.0.0",
        "datasourceCate": "prometheus",
        "targets": [
          {
            "refId": "A",
            "expr": "sum(count(vm_app_version{service=~\"$service\", instance=~\"$instance_storage\"}))",
            "legend": "Number of storage nodes"
          }
        ],
        "name": "vminsert - Needed Nb CPU Cores per node",
        "links": [],
        "description": "The recommended number of vCPU cores per each vminsert instance should equal to the number of vmstorage instances in the cluster.",
        "maxPerRow": 4,
        "custom": {
          "textMode": "value",
          "graphMode": "none",
          "colorMode": "value",
          "calc": "lastNotNull",
          "valueField": "Value",
          "colSpan": 1,
          "textSize": {}
        },
        "options": {
          "standardOptions": {},
          "thresholds": {
            "steps": [
              {
                "color": "#634CD9",
                "value": null,
                "type": "base"
              }
            ]
          }
        }
      },
      {
        "type": "stat",
        "id": "30214700-017e-4157-8cfc-18462ee7c6e8",
        "layout": {
          "h": 3,
          "w": 4,
          "x": 4,
          "y": 8,
          "i": "30214700-017e-4157-8cfc-18462ee7c6e8",
          "isResizable": true
        },
        "version": "2.0.0",
        "datasourceCate": "prometheus",
        "targets": [
          {
            "refId": "A",
            "expr": "avg(go_cpu_count{service=~\"$service\", instance=~\"$instance_insert\"})",
            "legend": "Number of storage nodes"
          }
        ],
        "name": "vminsert - Current Avg CPU Cores per node",
        "links": [],
        "description": "The recommended number of vCPU cores per each vminsert instance should equal to the number of vmstorage instances in the cluster.",
        "maxPerRow": 4,
        "custom": {
          "textMode": "value",
          "graphMode": "none",
          "colorMode": "value",
          "calc": "lastNotNull",
          "valueField": "Value",
          "colSpan": 1,
          "textSize": {}
        },
        "options": {
          "standardOptions": {},
          "thresholds": {
            "steps": [
              {
                "color": "#634CD9",
                "value": null,
                "type": "base"
              }
            ]
          }
        }
      },
      {
        "type": "stat",
        "id": "a97520f0-5def-40f1-9c22-4c08a38ce2f8",
        "layout": {
          "h": 3,
          "w": 8,
          "x": 8,
          "y": 8,
          "i": "a97520f0-5def-40f1-9c22-4c08a38ce2f8",
          "isResizable": true
        },
        "version": "2.0.0",
        "datasourceCate": "prometheus",
        "targets": [
          {
            "refId": "A",
            "expr": "sum(rate(vm_rows_inserted_total{service=~\"$service\", instance=~\"$instance_insert\"})) / 150000",
            "legend": "Needed Total vCPU"
          }
        ],
        "name": "vminsert || vmstorage - Needed Total vCPU Capacity",
        "links": [],
        "description": "The recommended total number of vCPU cores for all the vminsert and all the the vmstorages instances can be calculated from the ingestion rate:\n\nvCPUs = ingestion_rate / 150K",
        "maxPerRow": 4,
        "custom": {
          "textMode": "value",
          "graphMode": "none",
          "colorMode": "value",
          "calc": "lastNotNull",
          "valueField": "Value",
          "colSpan": 1,
          "textSize": {}
        },
        "options": {
          "standardOptions": {},
          "thresholds": {
            "steps": [
              {
                "color": "#634CD9",
                "value": null,
                "type": "base"
              }
            ]
          }
        }
      },
      {
        "type": "stat",
        "id": "05bb9313-7e32-4efd-8050-f3160e5252e3",
        "layout": {
          "h": 3,
          "w": 4,
          "x": 16,
          "y": 8,
          "i": "05bb9313-7e32-4efd-8050-f3160e5252e3",
          "isResizable": true
        },
        "version": "2.0.0",
        "datasourceCate": "prometheus",
        "targets": [
          {
            "refId": "A",
            "expr": "sum(go_cpu_count{service=~\"$service\", instance=~\"$instance_insert\"})",
            "legend": "Needed Total vCPU"
          }
        ],
        "name": "vminsert - Current vCPU Capacity",
        "links": [],
        "description": "The recommended total number of vCPU cores for all the vminsert instances can be calculated from the ingestion rate: vCPUs = ingestion_rate / 150K.",
        "maxPerRow": 4,
        "custom": {
          "textMode": "value",
          "graphMode": "none",
          "colorMode": "value",
          "calc": "lastNotNull",
          "valueField": "Value",
          "colSpan": 1,
          "textSize": {}
        },
        "options": {
          "standardOptions": {},
          "thresholds": {
            "steps": [
              {
                "color": "#634CD9",
                "value": null,
                "type": "base"
              }
            ]
          }
        }
      },
      {
        "type": "stat",
        "id": "95ccbc03-2bd5-4d87-ac13-7f1669801a0f",
        "layout": {
          "h": 3,
          "w": 4,
          "x": 20,
          "y": 8,
          "i": "95ccbc03-2bd5-4d87-ac13-7f1669801a0f",
          "isResizable": true
        },
        "version": "2.0.0",
        "datasourceCate": "prometheus",
        "targets": [
          {
            "refId": "A",
            "expr": "sum(go_cpu_count{service=~\"$service\", instance=~\"$instance_storage\"})",
            "legend": "Needed Total vCPU"
          }
        ],
        "name": "vmstorage - Current vCPU Capacity",
        "links": [],
        "description": "The recommended total number of vCPU cores for all the vmstorage instances can be calculated from the ingestion rate: vCPUs = ingestion_rate / 150K.",
        "maxPerRow": 4,
        "custom": {
          "textMode": "value",
          "graphMode": "none",
          "colorMode": "value",
          "calc": "lastNotNull",
          "valueField": "Value",
          "colSpan": 1,
          "textSize": {}
        },
        "options": {
          "standardOptions": {},
          "thresholds": {
            "steps": [
              {
                "color": "#634CD9",
                "value": null,
                "type": "base"
              }
            ]
          }
        }
      },
      {
        "type": "stat",
        "id": "4b8a71a2-fa57-4682-9570-96264af1652b",
        "layout": {
          "h": 3,
          "w": 6,
          "x": 0,
          "y": 11,
          "i": "4b8a71a2-fa57-4682-9570-96264af1652b",
          "isResizable": true
        },
        "version": "2.0.0",
        "datasourceCate": "prometheus",
        "targets": [
          {
            "refId": "A",
            "expr": " ( sum(rate(vm_rows_inserted_total{service=~\"$service\", instance=~\"$instance_insert\"}[5m])) - sum(avg_over_time(rate(vm_deduplicated_samples_total{service=~\"$service\", instance=~\"$instance_storage\", type=\"merge\"})[5m])) ) * ( sum(vm_data_size_bytes{service=~\"$service\", instance=~\"$instance_storage\", type!=\"indexdb\"}) / sum(vm_rows{service=~\"$service\", instance=~\"$instance_storage\", type!=\"indexdb\"}) ) * ( 3600 * 24 * 30.4167 * $retention)",
            "legend": ""
          }
        ],
        "name": "vmstorage - Projected Total Disk Usage",
        "links": [],
        "description": "The total space needed to store all the datapoints during the selected retention given the current ingestion rate, the average of dedup points on the selected period and the average size of one datapoint.\n\nprojected size = (ingestion rate - avg rate of dedup for $__range) * avg size one of datapoint * selected retention\n\n",
        "maxPerRow": 4,
        "custom": {
          "textMode": "value",
          "graphMode": "none",
          "colorMode": "value",
          "calc": "lastNotNull",
          "valueField": "Value",
          "colSpan": 1,
          "textSize": {}
        },
        "options": {
          "standardOptions": {},
          "thresholds": {
            "steps": [
              {
                "color": "#634CD9",
                "value": null,
                "type": "base"
              }
            ]
          }
        }
      },
      {
        "type": "stat",
        "id": "46faa74b-d369-41d5-bbf8-8dea9e3253bc",
        "layout": {
          "h": 3,
          "w": 6,
          "x": 6,
          "y": 11,
          "i": "46faa74b-d369-41d5-bbf8-8dea9e3253bc",
          "isResizable": true
        },
        "version": "2.0.0",
        "datasourceCate": "prometheus",
        "targets": [
          {
            "expr": " ( sum(rate(vm_rows_inserted_total{service=~\"$service\", instance=~\"$instance_insert\"}[5m])) - sum(avg_over_time(rate(vm_deduplicated_samples_total{service=~\"$service\", instance=~\"$instance_storage\", type=\"merge\"})[5m])) ) * ( sum(vm_data_size_bytes{service=~\"$service\", instance=~\"$instance_storage\", type!=\"indexdb\"}) / sum(vm_rows{service=~\"$service\", instance=~\"$instance_storage\", type!=\"indexdb\"}) ) * ( 3600 * 24 * 30.4167 * $retention) / sum(count(vm_app_version{service=~\"$service\", instance=~\"$instance_storage\"}))",
            "refId": "B"
          }
        ],
        "name": "vmstorage - Disk Space needed per vmstorage",
        "links": [],
        "description": "The total space needed to store all the datapoints during the selected retention given the current ingestion rate, the average of dedup points on the selected period and the average size of one datapoint.\n\nprojected size per vmstorage = ( (ingestion rate - avg rate of dedup for $__range) * avg size one of datapoint * selected retention ) / nb of vmstorage",
        "maxPerRow": 4,
        "custom": {
          "textMode": "value",
          "graphMode": "none",
          "colorMode": "value",
          "calc": "lastNotNull",
          "valueField": "Value",
          "colSpan": 1,
          "textSize": {}
        },
        "options": {
          "standardOptions": {},
          "thresholds": {
            "steps": [
              {
                "color": "#634CD9",
                "value": null,
                "type": "base"
              }
            ]
          }
        }
      },
      {
        "type": "stat",
        "id": "b5501fd5-3e57-450d-8372-8002d1a3af99",
        "layout": {
          "h": 3,
          "w": 6,
          "x": 12,
          "y": 11,
          "i": "b5501fd5-3e57-450d-8372-8002d1a3af99",
          "isResizable": true
        },
        "version": "2.0.0",
        "datasourceCate": "prometheus",
        "targets": [
          {
            "refId": "A",
            "expr": "sum(vm_cache_entries{service=~\"$service\", instance=~\"$instance_storage\", type=\"storage/hour_metric_ids\"}) * 1000",
            "legend": ""
          }
        ],
        "name": "vmstorage - Total RAM required for optimal performance",
        "links": [],
        "description": "The recommended total amount of RAM for all the vmstorage instances can be calculated from the number of active time series:\nRAM = active_time_series * 1KB.\n\nTime series is active if it received at least a single data point during the last hour or if it has been queried during the last hour.",
        "maxPerRow": 4,
        "custom": {
          "textMode": "value",
          "graphMode": "none",
          "colorMode": "value",
          "calc": "lastNotNull",
          "valueField": "Value",
          "colSpan": 1,
          "textSize": {}
        },
        "options": {
          "standardOptions": {},
          "thresholds": {
            "steps": [
              {
                "color": "#634CD9",
                "value": null,
                "type": "base"
              }
            ]
          }
        }
      },
      {
        "type": "stat",
        "id": "a63c82c9-37d3-4026-9f9d-00f383f94335",
        "layout": {
          "h": 3,
          "w": 6,
          "x": 18,
          "y": 11,
          "i": "a63c82c9-37d3-4026-9f9d-00f383f94335",
          "isResizable": true
        },
        "version": "2.0.0",
        "datasourceCate": "prometheus",
        "targets": [
          {
            "refId": "A",
            "expr": "with (\n  storageNodes = {service=~\"$service\", instance=~\"$instance_storage\"}\n)\nsum(vm_allowed_memory_bytes{storageNodes}) - sum(vm_cache_size_bytes{storageNodes}) - (sum(vm_cache_entries{storageNodes, type=\"storage/hour_metric_ids\"}) * 1024)",
            "legend": ""
          }
        ],
        "name": "vmstorage - Total Unused RAM",
        "links": [],
        "description": "The recommended total amount of RAM for all the vmstorage instances can be calculated from the number of active time series: RAM = active_time_series * 1KB.\n\nTime series is active if it received at least a single data point during the last hour or if it has been queried during the last hour.\n\nUnused RAM = allowed RAM - cache - needed RAM for active TS",
        "maxPerRow": 4,
        "custom": {
          "textMode": "value",
          "graphMode": "none",
          "colorMode": "value",
          "calc": "lastNotNull",
          "valueField": "Value",
          "colSpan": 1,
          "textSize": {}
        },
        "options": {
          "standardOptions": {},
          "thresholds": {
            "steps": [
              {
                "color": "#634CD9",
                "value": null,
                "type": "base"
              }
            ]
          }
        }
      },
      {
        "type": "stat",
        "id": "232029c7-1d1a-40b4-852f-1ce6efb2f8fc",
        "layout": {
          "h": 3,
          "w": 4,
          "x": 0,
          "y": 14,
          "i": "232029c7-1d1a-40b4-852f-1ce6efb2f8fc",
          "isResizable": true
        },
        "version": "2.0.0",
        "datasourceCate": "prometheus",
        "targets": [
          {
            "refId": "A",
            "expr": "sum(rate(vm_concurrent_insert_limit_timeout_total{service=~\"$service\", instance=~\"$instance_insert\"}))"
          }
        ],
        "name": "vminsert - Concurrent Insert Limit Timeout Rate",
        "links": [],
        "description": "If > 0, too much concurrent inserts occured. `-maxConcurrentInserts` might be too low.",
        "maxPerRow": 4,
        "custom": {
          "textMode": "value",
          "graphMode": "none",
          "colorMode": "value",
          "calc": "lastNotNull",
          "valueField": "Value",
          "colSpan": 1,
          "textSize": {}
        },
        "options": {
          "standardOptions": {},
          "thresholds": {
            "steps": [
              {
                "color": "#634CD9",
                "value": null,
                "type": "base"
              }
            ]
          }
        }
      },
      {
        "type": "stat",
        "id": "2dfd5a33-d961-490e-b3e7-9275ca7adc26",
        "layout": {
          "h": 3,
          "w": 4,
          "x": 4,
          "y": 14,
          "i": "2dfd5a33-d961-490e-b3e7-9275ca7adc26",
          "isResizable": true
        },
        "version": "2.0.0",
        "datasourceCate": "prometheus",
        "targets": [
          {
            "refId": "A",
            "expr": "sum(rate(vm_rpc_rows_dropped_on_overload_total{service=~\"$service\", instance=~\"$instance_insert\"}[5m]))"
          }
        ],
        "name": "vminsert - RPC Rows Dropped Rate",
        "links": [],
        "description": "Some row are losts, check the VM logs.",
        "maxPerRow": 4,
        "custom": {
          "textMode": "value",
          "graphMode": "none",
          "colorMode": "value",
          "calc": "lastNotNull",
          "valueField": "Value",
          "colSpan": 1,
          "textSize": {}
        },
        "options": {
          "standardOptions": {},
          "thresholds": {
            "steps": [
              {
                "color": "#634CD9",
                "value": null,
                "type": "base"
              }
            ]
          }
        }
      },
      {
        "type": "stat",
        "id": "33f18d4c-cbfe-49a3-97e9-d89cba8652fc",
        "layout": {
          "h": 3,
          "w": 8,
          "x": 8,
          "y": 14,
          "i": "33f18d4c-cbfe-49a3-97e9-d89cba8652fc",
          "isResizable": true
        },
        "version": "2.0.0",
        "datasourceCate": "prometheus",
        "targets": [
          {
            "refId": "A",
            "expr": "with (\n  nodesWithCache = {service=~\"$service\", instance=~\"$instance_select|$instance_storage\"}\n)\n1 - (sum(vm_cache_misses_total{nodesWithCache}) / sum(vm_cache_requests_total{nodesWithCache}))"
          }
        ],
        "name": "vmselect && vmstorage  - Cache hit ratio",
        "links": [],
        "description": "VictoriaMetrics stores various caches in RAM. Memory size for these caches may be limited with `-memory.allowedPercent` flag.",
        "maxPerRow": 4,
        "custom": {
          "textMode": "value",
          "graphMode": "none",
          "colorMode": "value",
          "calc": "lastNotNull",
          "valueField": "Value",
          "colSpan": 1,
          "textSize": {}
        },
        "options": {
          "standardOptions": {},
          "thresholds": {
            "steps": [
              {
                "color": "#634CD9",
                "value": null,
                "type": "base"
              }
            ]
          }
        }
      },
      {
        "type": "stat",
        "id": "b97a21f7-46c3-43ab-9517-eecdcf4977dc",
        "layout": {
          "h": 3,
          "w": 4,
          "x": 16,
          "y": 14,
          "i": "b97a21f7-46c3-43ab-9517-eecdcf4977dc",
          "isResizable": true
        },
        "version": "2.0.0",
        "datasourceCate": "prometheus",
        "targets": [
          {
            "refId": "A",
            "expr": "sum(rate(vm_concurrent_select_limit_timeout_total{service=~\"$service\", instance=~\"$instance_select\"}))"
          }
        ],
        "name": "vmselect - Concurrent Select Limit Timeout Rate",
        "links": [],
        "description": "If > 0, too many requests. `-search.maxQueueDuration` might be too low.",
        "maxPerRow": 4,
        "custom": {
          "textMode": "value",
          "graphMode": "none",
          "colorMode": "value",
          "calc": "lastNotNull",
          "valueField": "Value",
          "colSpan": 1,
          "textSize": {}
        },
        "options": {
          "standardOptions": {},
          "thresholds": {
            "steps": [
              {
                "color": "#634CD9",
                "value": null,
                "type": "base"
              }
            ]
          }
        }
      },
      {
        "type": "stat",
        "id": "709675f8-6e8c-4938-9007-6af0422787d6",
        "layout": {
          "h": 3,
          "w": 4,
          "x": 20,
          "y": 14,
          "i": "709675f8-6e8c-4938-9007-6af0422787d6",
          "isResizable": true
        },
        "version": "2.0.0",
        "datasourceCate": "prometheus",
        "targets": [
          {
            "refId": "A",
            "expr": "sum(rate(vm_slow_queries_total{service=~\"$service\", instance=~\"$instance_select\"}))"
          }
        ],
        "name": "vmselect - Slow Queries Rate",
        "links": [],
        "description": "Rate of queries that have exceeded the `-search.logSlowQueryDuration` value of vmselect nodes",
        "maxPerRow": 4,
        "custom": {
          "textMode": "value",
          "graphMode": "none",
          "colorMode": "value",
          "calc": "lastNotNull",
          "valueField": "Value",
          "colSpan": 1,
          "textSize": {}
        },
        "options": {
          "standardOptions": {},
          "thresholds": {
            "steps": [
              {
                "color": "#634CD9",
                "value": null,
                "type": "base"
              }
            ]
          }
        }
      },
      {
        "version": "2.0.0",
        "id": "cc276c14-9652-48cd-a4e2-7990632b3b1d",
        "type": "row",
        "name": "vminsert",
        "collapsed": false,
        "layout": {
          "h": 1,
          "w": 24,
          "x": 0,
          "y": 17,
          "i": "cc276c14-9652-48cd-a4e2-7990632b3b1d",
          "isResizable": false
        },
        "panels": [
          {
            "type": "timeseries",
            "id": "d1ca1d99-ea1c-43dc-8d0d-71aad778a535",
            "layout": {
              "h": 9,
              "w": 12,
              "x": 0,
              "y": 18,
              "i": "d1ca1d99-ea1c-43dc-8d0d-71aad778a535",
              "isResizable": true
            },
            "version": "2.0.0",
            "datasourceCate": "prometheus",
            "targets": [
              {
                "refId": "A",
                "expr": "sum(rate(vm_rows_inserted_total{service=~\"$service\", instance=~\"$instance_insert\"})) by (type)",
                "legend": "{{type}}"
              }
            ],
            "name": "vminsert - Ingestion Rate",
            "links": [],
            "description": "Number of datapoints per second sent to vminserts per job and type ",
            "maxPerRow": 4,
            "options": {
              "tooltip": {
                "mode": "all",
                "sort": "none"
              },
              "legend": {
                "displayMode": "hidden"
              },
              "standardOptions": {},
              "thresholds": {
                "steps": [
                  {
                    "color": "#634CD9",
                    "value": null,
                    "type": "base"
                  }
                ]
              }
            },
            "custom": {
              "drawStyle": "lines",
              "lineInterpolation": "linear",
              "spanNulls": false,
              "lineWidth": 1,
              "fillOpacity": 0.5,
              "gradientMode": "none",
              "stack": "off",
              "scaleDistribution": {
                "type": "linear"
              }
            }
          },
          {
            "version": "2.0.0",
            "id": "a0b359f7-5b1c-40b6-9bc0-a39802f1f27b",
            "type": "timeseries",
            "name": "vminsert - Requests Rate",
            "description": "* `*` - unsupported query path\n* `/write` - insert into VM\n* `/metrics` - query VM system metrics\n* `/query` - query instant values\n* `/query_range` - query over a range of time\n* `/series` - match a certain label set\n* `/label/{}/values` - query a list of label values (variables mostly)",
            "links": [],
            "layout": {
              "h": 9,
              "w": 12,
              "x": 12,
              "y": 18,
              "i": "a0b359f7-5b1c-40b6-9bc0-a39802f1f27b",
              "isResizable": true
            },
            "targets": [
              {
                "refId": "A",
                "expr": "sum(rate(vm_http_requests_total{service=~\"$service\", instance=~\"$instance_insert\", path!~\"/favicon.ico\"})) by (path)",
                "legend": "{{path}}"
              }
            ],
            "options": {
              "tooltip": {
                "mode": "all",
                "sort": "none"
              },
              "legend": {
                "displayMode": "hidden"
              },
              "thresholds": {
                "steps": [
                  {
                    "color": "#634CD9",
                    "value": null,
                    "type": "base"
                  }
                ]
              }
            },
            "custom": {
              "version": "2.0.0",
              "drawStyle": "lines",
              "lineInterpolation": "linear",
              "fillOpacity": 0.5,
              "stack": "off"
            },
            "maxPerRow": 4
          },
          {
            "version": "2.0.0",
            "id": "c435693e-fe35-4e6b-a7ea-fb2e46c1753f",
            "type": "timeseries",
            "name": "vminsert - Concurrent Inserts",
            "description": "Shows how many ongoing insertions are taking place.\n* `max` - equal to number of CPU * 4 by default. May be configured with `maxConcurrentInserts` flag\n* `current` - current number of goroutines busy with processing requests\n\nWhen `current` hits `max` constantly, it means vminsert node is overloaded and require more CPU or higher limits.",
            "links": [],
            "layout": {
              "h": 9,
              "w": 12,
              "x": 0,
              "y": 27,
              "i": "c435693e-fe35-4e6b-a7ea-fb2e46c1753f",
              "isResizable": true
            },
            "targets": [
              {
                "refId": "A",
                "expr": "sum(vm_concurrent_insert_current{service=~\"$service\", instance=~\"$instance_insert\"})",
                "legend": "concurrent inserts"
              },
              {
                "refId": "B",
                "expr": "sum(vm_concurrent_insert_capacity{service=~\"$service\", instance=~\"$instance_insert\"})",
                "legend": "max"
              }
            ],
            "options": {
              "tooltip": {
                "mode": "all",
                "sort": "none"
              },
              "legend": {
                "displayMode": "hidden"
              },
              "thresholds": {
                "steps": [
                  {
                    "color": "#634CD9",
                    "value": null,
                    "type": "base"
                  }
                ]
              }
            },
            "custom": {
              "version": "2.0.0",
              "drawStyle": "lines",
              "lineInterpolation": "linear",
              "fillOpacity": 0.5,
              "stack": "off"
            },
            "maxPerRow": 4
          },
          {
            "version": "2.0.0",
            "id": "edd47f12-57b2-49a7-9b0d-4ae132e41f1e",
            "type": "timeseries",
            "name": "vminsert - Network Usage",
            "description": "",
            "links": [],
            "layout": {
              "h": 9,
              "w": 12,
              "x": 12,
              "y": 27,
              "i": "edd47f12-57b2-49a7-9b0d-4ae132e41f1e",
              "isResizable": true
            },
            "targets": [
              {
                "refId": "A",
                "expr": "sum(rate(vm_tcplistener_read_bytes_total{service=~\"$service\", instance=~\"$instance_insert\"})) * 8 > 0",
                "legend": "Rx"
              },
              {
                "refId": "B",
                "expr": "sum(rate(vm_tcplistener_written_bytes_total{service=~\"$service\", instance=~\"$instance_insert\"})) * 8 > 0",
                "legend": "Tx"
              }
            ],
            "options": {
              "tooltip": {
                "mode": "all",
                "sort": "none"
              },
              "legend": {
                "displayMode": "hidden"
              },
              "thresholds": {
                "steps": [
                  {
                    "color": "#634CD9",
                    "value": null,
                    "type": "base"
                  }
                ]
              }
            },
            "custom": {
              "version": "2.0.0",
              "drawStyle": "lines",
              "lineInterpolation": "linear",
              "fillOpacity": 0.5,
              "stack": "off"
            },
            "maxPerRow": 4
          }
        ]
      },
      {
        "version": "2.0.0",
        "id": "eb5e384d-cab6-4d1d-83cd-eee1291d2c04",
        "type": "row",
        "name": "vmstorage",
        "collapsed": true,
        "layout": {
          "h": 1,
          "w": 24,
          "x": 0,
          "y": 36,
          "i": "eb5e384d-cab6-4d1d-83cd-eee1291d2c04",
          "isResizable": false
        },
        "panels": []
      },
      {
        "version": "2.0.0",
        "id": "9273e0cc-f41c-4a24-8b0e-2f72919f11a9",
        "type": "timeseries",
        "name": "vmstorage - Ingestion Rate",
        "description": "Shows how many rows per second every storage node accepts. This metric doesn't show all stored rows since some of them may be dropped because of wrong timestamps or decode errors.",
        "links": [],
        "layout": {
          "h": 9,
          "w": 12,
          "x": 0,
          "y": 37,
          "i": "9273e0cc-f41c-4a24-8b0e-2f72919f11a9",
          "isResizable": true
        },
        "targets": [
          {
            "refId": "A",
            "expr": "sum(rate(vm_vminsert_metrics_read_total{service=~\"$service\", instance=~\"$instance_storage\"}))",
            "legend": "ingestion rate"
          }
        ],
        "options": {
          "tooltip": {
            "mode": "all",
            "sort": "none"
          },
          "legend": {
            "displayMode": "hidden"
          },
          "thresholds": {
            "steps": [
              {
                "color": "#634CD9",
                "value": null,
                "type": "base"
              }
            ]
          }
        },
        "custom": {
          "version": "2.0.0",
          "drawStyle": "lines",
          "lineInterpolation": "linear",
          "fillOpacity": 0.5,
          "stack": "off"
        },
        "maxPerRow": 4
      },
      {
        "version": "2.0.0",
        "id": "bb3efa89-1165-4dc2-9f11-e3ea74d51777",
        "type": "timeseries",
        "name": "vmstorage - Pending Datapoints",
        "description": "How many datapoints are in RAM queue waiting to be written into storage. The number of pending data points should be in the range from 0 to `2*<ingestion_rate>`, since VictoriaMetrics pushes pending data to persistent storage every second. The index datapoints value in general is much lower.",
        "links": [],
        "layout": {
          "h": 9,
          "w": 12,
          "x": 12,
          "y": 37,
          "i": "bb3efa89-1165-4dc2-9f11-e3ea74d51777",
          "isResizable": true
        },
        "targets": [
          {
            "refId": "A",
            "expr": "sum(vm_pending_rows{service=~\"$service\", instance=~\"$instance_storage\", type=\"storage\"})",
            "legend": "pending datapoints"
          },
          {
            "refId": "B",
            "expr": "sum(vm_pending_rows{service=~\"$service\", instance=~\"$instance_storage\", type=\"indexdb\"})",
            "legend": "pending index entries"
          }
        ],
        "options": {
          "tooltip": {
            "mode": "all",
            "sort": "none"
          },
          "legend": {
            "displayMode": "hidden"
          },
          "thresholds": {
            "steps": [
              {
                "color": "#634CD9",
                "value": null,
                "type": "base"
              }
            ]
          }
        },
        "custom": {
          "version": "2.0.0",
          "drawStyle": "lines",
          "lineInterpolation": "linear",
          "fillOpacity": 0.5,
          "stack": "off"
        },
        "maxPerRow": 4
      },
      {
        "version": "2.0.0",
        "id": "d738425a-059a-4451-9f62-4aeec7ce0165",
        "type": "timeseries",
        "name": "vmstorage - Cache Hit Ratio",
        "links": [],
        "layout": {
          "h": 9,
          "w": 12,
          "x": 0,
          "y": 46,
          "i": "d738425a-059a-4451-9f62-4aeec7ce0165",
          "isResizable": true
        },
        "targets": [
          {
            "refId": "A",
            "expr": "with (\n  storageNodes = {service=~\"$service\", instance=~\"$instance_storage\"}\n)\n1 - (sum(rate(vm_cache_misses_total{storageNodes})) by (type) / sum(rate(vm_cache_requests_total{storageNodes})) by (type))",
            "legend": "{{type}}"
          }
        ],
        "options": {
          "tooltip": {
            "mode": "all",
            "sort": "none"
          },
          "legend": {
            "displayMode": "hidden"
          },
          "thresholds": {
            "steps": [
              {
                "color": "#634CD9",
                "value": null,
                "type": "base"
              }
            ]
          }
        },
        "custom": {
          "version": "2.0.0",
          "drawStyle": "lines",
          "lineInterpolation": "linear",
          "fillOpacity": 0.5,
          "stack": "off"
        },
        "maxPerRow": 4
      },
      {
        "version": "2.0.0",
        "id": "35d73293-b6ef-4e22-8fab-30dde079cbd3",
        "type": "timeseries",
        "name": "vmstorage - Cache Size",
        "links": [],
        "layout": {
          "h": 9,
          "w": 12,
          "x": 12,
          "y": 46,
          "i": "35d73293-b6ef-4e22-8fab-30dde079cbd3",
          "isResizable": true
        },
        "targets": [
          {
            "refId": "A",
            "expr": "sum(vm_cache_size_bytes{service=~\"$service\", instance=~\"$instance_storage\"}) by(type)",
            "legend": "{{type}}"
          },
          {
            "refId": "B",
            "expr": "sum(vm_allowed_memory_bytes{service=~\"$service\", instance=~\"$instance_storage\"})",
            "legend": "max"
          }
        ],
        "options": {
          "tooltip": {
            "mode": "all",
            "sort": "none"
          },
          "legend": {
            "displayMode": "hidden"
          },
          "thresholds": {
            "steps": [
              {
                "color": "#634CD9",
                "value": null,
                "type": "base"
              }
            ]
          }
        },
        "custom": {
          "version": "2.0.0",
          "drawStyle": "lines",
          "lineInterpolation": "linear",
          "fillOpacity": 0.5,
          "stack": "off"
        },
        "maxPerRow": 4
      },
      {
        "type": "timeseries",
        "id": "b9f9ce90-78a9-4cc8-8f9b-b0c9a55bb348",
        "layout": {
          "h": 9,
          "w": 12,
          "x": 0,
          "y": 55,
          "i": "b9f9ce90-78a9-4cc8-8f9b-b0c9a55bb348",
          "isResizable": true
        },
        "version": "2.0.0",
        "datasourceCate": "prometheus",
        "targets": [
          {
            "refId": "A",
            "expr": "sum(vm_concurrent_insert_capacity{service=~\"$service\", instance=~\"$instance_storage\"})",
            "legend": "max"
          },
          {
            "refId": "B",
            "expr": "sum(vm_concurrent_insert_current{service=~\"$service\", instance=~\"$instance_storage\"})",
            "legend": "concurrent inserts"
          }
        ],
        "name": "vmstorage - Concurrent Inserts",
        "links": [],
        "description": "Shows how many ongoing insertions are taking place.\n* `max` - equal to number of CPU * 2\n* `current` - current number of goroutines busy with inserting rows into storage\n\nWhen `current` hits `max` constantly, it means storage is overloaded and require more CPU.",
        "maxPerRow": 4,
        "options": {
          "tooltip": {
            "mode": "all",
            "sort": "none"
          },
          "legend": {
            "displayMode": "hidden"
          },
          "standardOptions": {},
          "thresholds": {
            "steps": [
              {
                "color": "#634CD9",
                "value": null,
                "type": "base"
              }
            ]
          }
        },
        "custom": {
          "drawStyle": "lines",
          "lineInterpolation": "linear",
          "spanNulls": false,
          "lineWidth": 1,
          "fillOpacity": 0.5,
          "gradientMode": "none",
          "stack": "off",
          "scaleDistribution": {
            "type": "linear"
          }
        }
      },
      {
        "version": "2.0.0",
        "id": "16cde7a7-2d06-4b67-82a4-2509541b7b34",
        "type": "timeseries",
        "name": "vmstorage - LSM parts",
        "description": "Data parts of LSM tree.\nHigh number of parts could be an evidence of slow merge performance - check the resource utilization.\n* `indexdb` - inverted index\n* `storage/small` - recently added parts of data ingested into storage(hot data)\n* `storage/big` -  small parts gradually merged into big parts (cold data)",
        "links": [],
        "layout": {
          "h": 9,
          "w": 12,
          "x": 12,
          "y": 55,
          "i": "16cde7a7-2d06-4b67-82a4-2509541b7b34",
          "isResizable": true
        },
        "targets": [
          {
            "refId": "A",
            "expr": "sum(vm_parts{service=~\"$service\", instance=~\"$instance_storage\"}) by (type)",
            "legend": "{{type}}"
          }
        ],
        "options": {
          "tooltip": {
            "mode": "all",
            "sort": "none"
          },
          "legend": {
            "displayMode": "hidden"
          },
          "thresholds": {
            "steps": [
              {
                "color": "#634CD9",
                "value": null,
                "type": "base"
              }
            ]
          }
        },
        "custom": {
          "version": "2.0.0",
          "drawStyle": "lines",
          "lineInterpolation": "linear",
          "fillOpacity": 0.5,
          "stack": "off"
        },
        "maxPerRow": 4
      },
      {
        "type": "timeseries",
        "id": "6fc995c0-6e40-4be8-afab-16c6632fc97f",
        "layout": {
          "h": 9,
          "w": 12,
          "x": 0,
          "y": 64,
          "i": "6fc995c0-6e40-4be8-afab-16c6632fc97f",
          "isResizable": true
        },
        "version": "2.0.0",
        "datasourceCate": "prometheus",
        "targets": [
          {
            "refId": "A",
            "expr": "sum(vm_active_merges{service=~\"$service\", instance=~\"$instance_storage\"}) by(type)",
            "legend": "{{type}}"
          }
        ],
        "name": "vmstorage - Active Merges",
        "links": [],
        "description": "The number of on-going merges in storage nodes.  It is expected to have high numbers for `storage/small` metric.",
        "maxPerRow": 4,
        "options": {
          "tooltip": {
            "mode": "all",
            "sort": "none"
          },
          "legend": {
            "displayMode": "hidden"
          },
          "standardOptions": {},
          "thresholds": {
            "steps": [
              {
                "color": "#634CD9",
                "value": null,
                "type": "base"
              }
            ]
          }
        },
        "custom": {
          "drawStyle": "lines",
          "lineInterpolation": "linear",
          "spanNulls": false,
          "lineWidth": 1,
          "fillOpacity": 0.5,
          "gradientMode": "none",
          "stack": "off",
          "scaleDistribution": {
            "type": "linear"
          }
        }
      },
      {
        "version": "2.0.0",
        "id": "9fab9ab4-85d7-4d42-8e43-b36a5de2d6c3",
        "type": "timeseries",
        "name": "vmstorage - Merge Speed",
        "description": "The number of rows merged per second by storage nodes.",
        "links": [],
        "layout": {
          "h": 9,
          "w": 12,
          "x": 12,
          "y": 64,
          "i": "9fab9ab4-85d7-4d42-8e43-b36a5de2d6c3",
          "isResizable": true
        },
        "targets": [
          {
            "refId": "A",
            "expr": "sum(rate(vm_rows_merged_total{service=~\"$service\", instance=~\"$instance_storage\"})) by(type)",
            "legend": "{{type}}"
          }
        ],
        "options": {
          "tooltip": {
            "mode": "all",
            "sort": "none"
          },
          "legend": {
            "displayMode": "hidden"
          },
          "thresholds": {
            "steps": [
              {
                "color": "#634CD9",
                "value": null,
                "type": "base"
              }
            ]
          }
        },
        "custom": {
          "version": "2.0.0",
          "drawStyle": "lines",
          "lineInterpolation": "linear",
          "fillOpacity": 0.5,
          "stack": "off"
        },
        "maxPerRow": 4
      },
      {
        "type": "timeseries",
        "id": "e2f21b08-2b4b-483a-9dfb-dc30fa5cc425",
        "layout": {
          "h": 9,
          "w": 12,
          "x": 0,
          "y": 73,
          "i": "e2f21b08-2b4b-483a-9dfb-dc30fa5cc425",
          "isResizable": true
        },
        "version": "2.0.0",
        "datasourceCate": "prometheus",
        "targets": [
          {
            "refId": "A",
            "expr": "sum(vm_data_size_bytes{service=~\"$service\", instance=~\"$instance_storage\"})",
            "legend": "data"
          },
          {
            "refId": "B",
            "expr": "sum(vm_cache_size_bytes{service=~\"$service\", instance=~\"$instance_storage\"})",
            "legend": "cache"
          }
        ],
        "name": "vmstorage - Disk Space Usage",
        "links": [],
        "description": "Shows amount of on-disk space occupied by data (datapoints & indexes) and caches.",
        "maxPerRow": 4,
        "options": {
          "tooltip": {
            "mode": "all",
            "sort": "none"
          },
          "legend": {
            "displayMode": "hidden"
          },
          "standardOptions": {},
          "thresholds": {
            "steps": [
              {
                "color": "#634CD9",
                "value": null,
                "type": "base"
              }
            ]
          }
        },
        "custom": {
          "drawStyle": "lines",
          "lineInterpolation": "linear",
          "spanNulls": false,
          "lineWidth": 1,
          "fillOpacity": 0.5,
          "gradientMode": "none",
          "stack": "off",
          "scaleDistribution": {
            "type": "linear"
          }
        }
      },
      {
        "type": "timeseries",
        "id": "729911d8-3c42-4e3c-b7f0-d14828a43cb9",
        "layout": {
          "h": 9,
          "w": 12,
          "x": 12,
          "y": 73,
          "i": "729911d8-3c42-4e3c-b7f0-d14828a43cb9",
          "isResizable": true
        },
        "version": "2.0.0",
        "datasourceCate": "prometheus",
        "targets": [
          {
            "refId": "A",
            "expr": "sum(rate(vm_deduplicated_samples_total{service=~\"$service\", instance=~\"$instance_storage\", type=\"merge\"}))",
            "legend": "deduplication rate"
          }
        ],
        "name": "vmstorage - Deduplicated Samples Rate",
        "links": [],
        "description": "Removed superflouos samples from time series if they are located closer to each other than the dedup duration. Keep in mind that dedup on the storage is only performed during merge (aka delayed).\n\nSee the `-dedup.minScrapeInterval` flag.",
        "maxPerRow": 4,
        "options": {
          "tooltip": {
            "mode": "all",
            "sort": "none"
          },
          "legend": {
            "displayMode": "hidden"
          },
          "standardOptions": {},
          "thresholds": {
            "steps": [
              {
                "color": "#634CD9",
                "value": null,
                "type": "base"
              }
            ]
          }
        },
        "custom": {
          "drawStyle": "lines",
          "lineInterpolation": "linear",
          "spanNulls": false,
          "lineWidth": 1,
          "fillOpacity": 0.5,
          "gradientMode": "none",
          "stack": "off",
          "scaleDistribution": {
            "type": "linear"
          }
        }
      },
      {
        "version": "2.0.0",
        "id": "6f8fac9d-29e7-4357-8493-3db3487466c5",
        "type": "timeseries",
        "name": "vmstorage - Compression Ratio",
        "description": "zstd compression ratio",
        "links": [],
        "layout": {
          "h": 9,
          "w": 12,
          "x": 0,
          "y": 82,
          "i": "6f8fac9d-29e7-4357-8493-3db3487466c5",
          "isResizable": true
        },
        "targets": [
          {
            "refId": "A",
            "expr": "with (\n  storageNodes = {service=~\"$service\", instance=~\"$instance_storage\"}\n)\nsum(vm_zstd_block_compressed_bytes_total{storageNodes}) / sum(vm_zstd_block_original_bytes_total{storageNodes})",
            "legend": "compression ratio"
          }
        ],
        "options": {
          "tooltip": {
            "mode": "all",
            "sort": "none"
          },
          "legend": {
            "displayMode": "hidden"
          },
          "thresholds": {
            "steps": [
              {
                "color": "#634CD9",
                "value": null,
                "type": "base"
              }
            ]
          }
        },
        "custom": {
          "version": "2.0.0",
          "drawStyle": "lines",
          "lineInterpolation": "linear",
          "fillOpacity": 0.5,
          "stack": "off"
        },
        "maxPerRow": 4
      },
      {
        "version": "2.0.0",
        "id": "ca2497c2-b853-4e0c-a5bd-cc4b64af34a7",
        "type": "timeseries",
        "name": "vmstorage - Network Usage",
        "description": "",
        "links": [],
        "layout": {
          "h": 9,
          "w": 12,
          "x": 12,
          "y": 82,
          "i": "ca2497c2-b853-4e0c-a5bd-cc4b64af34a7",
          "isResizable": true
        },
        "targets": [
          {
            "refId": "A",
            "expr": "sum(rate(vm_tcplistener_read_bytes_total{service=~\"$service\", instance=~\"$instance_storage\"}))",
            "legend": "Rx"
          },
          {
            "refId": "B",
            "expr": "sum(rate(vm_tcplistener_written_bytes_total{service=~\"$service\", instance=~\"$instance_storage\"}))",
            "legend": "Tx"
          }
        ],
        "options": {
          "tooltip": {
            "mode": "all",
            "sort": "none"
          },
          "legend": {
            "displayMode": "hidden"
          },
          "thresholds": {
            "steps": [
              {
                "color": "#634CD9",
                "value": null,
                "type": "base"
              }
            ]
          }
        },
        "custom": {
          "version": "2.0.0",
          "drawStyle": "lines",
          "lineInterpolation": "linear",
          "fillOpacity": 0.5,
          "stack": "off"
        },
        "maxPerRow": 4
      },
      {
        "version": "2.0.0",
        "id": "9933f537-bd77-48fa-a1cf-0b85f9495426",
        "type": "row",
        "name": "vmselect",
        "collapsed": false,
        "layout": {
          "h": 1,
          "w": 24,
          "x": 0,
          "y": 145,
          "i": "9933f537-bd77-48fa-a1cf-0b85f9495426",
          "isResizable": false
        },
        "panels": [
          {
            "version": "2.0.0",
            "id": "2df7a316-4302-4934-affd-b0bd3e5e2d68",
            "type": "timeseries",
            "name": "vmselect - Requests Rate",
            "description": "Request rate accepted by vmselect nodes",
            "links": [],
            "layout": {
              "h": 9,
              "w": 12,
              "x": 0,
              "y": 92,
              "i": "2df7a316-4302-4934-affd-b0bd3e5e2d68"
            },
            "targets": [
              {
                "refId": "A",
                "expr": "sum(rate(vm_http_requests_total{service=~\"$service\", instance=~\"$instance_select\", path!~\"/favicon.ico\"})) by (path) > 0",
                "legend": "{{path}}"
              }
            ],
            "options": {
              "tooltip": {
                "mode": "all",
                "sort": "none"
              },
              "legend": {
                "displayMode": "hidden"
              },
              "thresholds": {
                "steps": [
                  {
                    "color": "#634CD9",
                    "value": null,
                    "type": "base"
                  }
                ]
              }
            },
            "custom": {
              "version": "2.0.0",
              "drawStyle": "lines",
              "lineInterpolation": "linear",
              "fillOpacity": 0.5,
              "stack": "off"
            },
            "maxPerRow": 4
          },
          {
            "version": "2.0.0",
            "id": "91964f81-3e66-4950-ad73-2a784d768fb6",
            "type": "timeseries",
            "name": "vmselect - Slow Queries",
            "description": "Number of queries that have exceeded the -search.logSlowQueryDuration value of vmselect nodes",
            "links": [],
            "layout": {
              "h": 9,
              "w": 12,
              "x": 12,
              "y": 92,
              "i": "91964f81-3e66-4950-ad73-2a784d768fb6"
            },
            "targets": [
              {
                "refId": "A",
                "expr": "sum(vm_slow_queries_total{service=~\"$service\", instance=~\"$instance_select\"})",
                "legend": "slow queries"
              }
            ],
            "options": {
              "tooltip": {
                "mode": "all",
                "sort": "none"
              },
              "legend": {
                "displayMode": "hidden"
              },
              "thresholds": {
                "steps": [
                  {
                    "color": "#634CD9",
                    "value": null,
                    "type": "base"
                  }
                ]
              }
            },
            "custom": {
              "version": "2.0.0",
              "drawStyle": "lines",
              "lineInterpolation": "linear",
              "fillOpacity": 0.5,
              "stack": "off"
            },
            "maxPerRow": 4
          },
          {
            "version": "2.0.0",
            "id": "2872ec3a-25a0-40ac-a987-bb34a311a7bb",
            "type": "timeseries",
            "name": "vmselect - Cache Hit Ratio",
            "links": [],
            "layout": {
              "h": 9,
              "w": 12,
              "x": 0,
              "y": 101,
              "i": "2872ec3a-25a0-40ac-a987-bb34a311a7bb"
            },
            "targets": [
              {
                "refId": "A",
                "expr": "with (\n  storageNodes = {service=~\"$service\", instance=~\"$instance_select\"}\n)\n1 - (sum(rate(vm_cache_misses_total{storageNodes})) by (type) / sum(rate(vm_cache_requests_total{storageNodes})) by (type))",
                "legend": "{{type}}"
              }
            ],
            "options": {
              "tooltip": {
                "mode": "all",
                "sort": "none"
              },
              "legend": {
                "displayMode": "hidden"
              },
              "thresholds": {
                "steps": [
                  {
                    "color": "#634CD9",
                    "value": null,
                    "type": "base"
                  }
                ]
              }
            },
            "custom": {
              "version": "2.0.0",
              "drawStyle": "lines",
              "lineInterpolation": "linear",
              "fillOpacity": 0.5,
              "stack": "off"
            },
            "maxPerRow": 4
          },
          {
            "version": "2.0.0",
            "id": "eb57447a-1cd9-4d48-9a4f-322e349739a7",
            "type": "timeseries",
            "name": "vmselect - Cache Size",
            "links": [],
            "layout": {
              "h": 9,
              "w": 12,
              "x": 12,
              "y": 101,
              "i": "eb57447a-1cd9-4d48-9a4f-322e349739a7"
            },
            "targets": [
              {
                "refId": "A",
                "expr": "sum(vm_cache_size_bytes{service=~\"$service\", instance=~\"$instance_select\"}) by(type)",
                "legend": "{{type}}"
              },
              {
                "refId": "B",
                "expr": "sum(vm_allowed_memory_bytes{service=~\"$service\", instance=~\"$instance_select\"})",
                "legend": "max"
              }
            ],
            "options": {
              "tooltip": {
                "mode": "all",
                "sort": "none"
              },
              "legend": {
                "displayMode": "hidden"
              },
              "thresholds": {
                "steps": [
                  {
                    "color": "#634CD9",
                    "value": null,
                    "type": "base"
                  }
                ]
              }
            },
            "custom": {
              "version": "2.0.0",
              "drawStyle": "lines",
              "lineInterpolation": "linear",
              "fillOpacity": 0.5,
              "stack": "off"
            },
            "maxPerRow": 4
          },
          {
            "version": "2.0.0",
            "id": "77a9edbd-040c-41c6-a6af-fc501c2abcff",
            "type": "timeseries",
            "name": "vmselect - Concurrent Selects",
            "description": "Shows how many ongoing insertions are taking place.\n* `max` - equal to number of CPU * 2 by default. May be configured with `search.maxConcurrentRequests` flag\n* `current` - current number of goroutines busy with processing requests\n\nWhen `current` hits `max` constantly, it means vmselect node is overloaded and require more CPU or higher limits.",
            "links": [],
            "layout": {
              "h": 9,
              "w": 12,
              "x": 0,
              "y": 110,
              "i": "77a9edbd-040c-41c6-a6af-fc501c2abcff"
            },
            "targets": [
              {
                "refId": "A",
                "expr": "sum(vm_concurrent_queries{service=~\"$service\", instance=~\"$instance_select\"})",
                "legend": "current"
              },
              {
                "refId": "B",
                "expr": "sum(vm_concurrent_select_capacity{service=~\"$service\", instance=~\"$instance_select\"})",
                "legend": "max"
              }
            ],
            "options": {
              "tooltip": {
                "mode": "all",
                "sort": "none"
              },
              "legend": {
                "displayMode": "hidden"
              },
              "thresholds": {
                "steps": [
                  {
                    "color": "#634CD9",
                    "value": null,
                    "type": "base"
                  }
                ]
              }
            },
            "custom": {
              "version": "2.0.0",
              "drawStyle": "lines",
              "lineInterpolation": "linear",
              "fillOpacity": 0.5,
              "stack": "off"
            },
            "maxPerRow": 4
          },
          {
            "version": "2.0.0",
            "id": "32a86081-1f9d-4c02-8cfc-b220d9903ff7",
            "type": "timeseries",
            "name": "vmselect - Deduplicated Samples Rate",
            "description": "Removed superflouos samples from time series if they are located closer to each other than the dedup duration. As dedup on storage is performed during merge, vmselect dedup points that have not been deduplicated yet by the storage.\n\nSee the `-dedup.minScrapeInterval` flag.",
            "links": [],
            "layout": {
              "h": 9,
              "w": 12,
              "x": 12,
              "y": 110,
              "i": "32a86081-1f9d-4c02-8cfc-b220d9903ff7"
            },
            "targets": [
              {
                "refId": "A",
                "expr": "sum(rate(vm_deduplicated_samples_total{service=~\"$service\", instance=~\"$instance_select\", type=\"select\"}))",
                "legend": "deduplication rate"
              }
            ],
            "options": {
              "tooltip": {
                "mode": "all",
                "sort": "none"
              },
              "legend": {
                "displayMode": "hidden"
              },
              "thresholds": {
                "steps": [
                  {
                    "color": "#634CD9",
                    "value": null,
                    "type": "base"
                  }
                ]
              }
            },
            "custom": {
              "version": "2.0.0",
              "drawStyle": "lines",
              "lineInterpolation": "linear",
              "fillOpacity": 0.5,
              "stack": "off"
            },
            "maxPerRow": 4
          },
          {
            "version": "2.0.0",
            "id": "db382634-0c73-43a1-85df-7f5d593968d5",
            "type": "timeseries",
            "name": "vmselect - Network Usage",
            "description": "",
            "links": [],
            "layout": {
              "h": 9,
              "w": 12,
              "x": 0,
              "y": 119,
              "i": "db382634-0c73-43a1-85df-7f5d593968d5"
            },
            "targets": [
              {
                "refId": "A",
                "expr": "sum(rate(vm_tcplistener_read_bytes_total{service=~\"$service\", instance=~\"$instance_select\"}))",
                "legend": "Rx"
              },
              {
                "refId": "B",
                "expr": "sum(rate(vm_tcplistener_written_bytes_total{service=~\"$service\", instance=~\"$instance_select\"}))",
                "legend": "Tx"
              }
            ],
            "options": {
              "tooltip": {
                "mode": "all",
                "sort": "none"
              },
              "legend": {
                "displayMode": "hidden"
              },
              "thresholds": {
                "steps": [
                  {
                    "color": "#634CD9",
                    "value": null,
                    "type": "base"
                  }
                ]
              }
            },
            "custom": {
              "version": "2.0.0",
              "drawStyle": "lines",
              "lineInterpolation": "linear",
              "fillOpacity": 0.5,
              "stack": "off"
            },
            "maxPerRow": 4
          }
        ]
      }
    ],
    "datasourceValue": "flashcat_prometheus"
  }
}