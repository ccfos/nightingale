[
  {
    "cate": "prometheus",
    "datasource_ids": [
      0
    ],
    "name": ":node_memory_MemAvailable_bytes:sum",
    "note": "",
    "prod": "metric",
    "algorithm": "",
    "algo_params": null,
    "delay": 0,
    "severity": 0,
    "severities": [
      0
    ],
    "disabled": 1,
    "prom_for_duration": 0,
    "prom_ql": "sum(\n  node_memory_MemAvailable_bytes{job=\"node-exporter\"} or\n  (\n    node_memory_Buffers_bytes{job=\"node-exporter\"} +\n    node_memory_Cached_bytes{job=\"node-exporter\"} +\n    node_memory_MemFree_bytes{job=\"node-exporter\"} +\n    node_memory_Slab_bytes{job=\"node-exporter\"}\n  )\n) by (cluster)\n",
    "rule_config": {
      "algo_params": null,
      "inhibit": false,
      "prom_ql": "",
      "queries": [
        {
          "prom_ql": "sum(\n  node_memory_MemAvailable_bytes{job=\"node-exporter\"} or\n  (\n    node_memory_Buffers_bytes{job=\"node-exporter\"} +\n    node_memory_Cached_bytes{job=\"node-exporter\"} +\n    node_memory_MemFree_bytes{job=\"node-exporter\"} +\n    node_memory_Slab_bytes{job=\"node-exporter\"}\n  )\n) by (cluster)\n",
          "severity": 0
        }
      ],
      "severity": 0
    },
    "prom_eval_interval": 15,
    "enable_stime": "",
    "enable_stimes": [],
    "enable_etime": "",
    "enable_etimes": [],
    "enable_days_of_week": [],
    "enable_days_of_weeks": [
      []
    ],
    "enable_in_bg": 0,
    "notify_recovered": 0,
    "notify_channels": [],
    "notify_repeat_step": 0,
    "notify_max_number": 0,
    "recover_duration": 0,
    "callbacks": [],
    "runbook_url": "",
    "append_tags": [],
    "annotations": null
  },
  {
    "cate": "prometheus",
    "datasource_ids": [
      0
    ],
    "name": "apiserver_request:availability30d",
    "note": "",
    "prod": "metric",
    "algorithm": "",
    "algo_params": null,
    "delay": 0,
    "severity": 0,
    "severities": [
      0
    ],
    "disabled": 1,
    "prom_for_duration": 0,
    "prom_ql": "1 - (\n  (\n    # write too slow\n    sum by (cluster) (cluster_verb_scope:apiserver_request_slo_duration_seconds_count:increase30d{verb=~\"POST|PUT|PATCH|DELETE\"})\n    -\n    sum by (cluster) (cluster_verb_scope_le:apiserver_request_slo_duration_seconds_bucket:increase30d{verb=~\"POST|PUT|PATCH|DELETE\",le=\"1\"})\n  ) +\n  (\n    # read too slow\n    sum by (cluster) (cluster_verb_scope:apiserver_request_slo_duration_seconds_count:increase30d{verb=~\"LIST|GET\"})\n    -\n    (\n      (\n        sum by (cluster) (cluster_verb_scope_le:apiserver_request_slo_duration_seconds_bucket:increase30d{verb=~\"LIST|GET\",scope=~\"resource|\",le=\"1\"})\n        or\n        vector(0)\n      )\n      +\n      sum by (cluster) (cluster_verb_scope_le:apiserver_request_slo_duration_seconds_bucket:increase30d{verb=~\"LIST|GET\",scope=\"namespace\",le=\"5\"})\n      +\n      sum by (cluster) (cluster_verb_scope_le:apiserver_request_slo_duration_seconds_bucket:increase30d{verb=~\"LIST|GET\",scope=\"cluster\",le=\"30\"})\n    )\n  ) +\n  # errors\n  sum by (cluster) (code:apiserver_request_total:increase30d{code=~\"5..\"} or vector(0))\n)\n/\nsum by (cluster) (code:apiserver_request_total:increase30d)\n",
    "rule_config": {
      "algo_params": null,
      "inhibit": false,
      "prom_ql": "",
      "queries": [
        {
          "prom_ql": "1 - (\n  (\n    # write too slow\n    sum by (cluster) (cluster_verb_scope:apiserver_request_slo_duration_seconds_count:increase30d{verb=~\"POST|PUT|PATCH|DELETE\"})\n    -\n    sum by (cluster) (cluster_verb_scope_le:apiserver_request_slo_duration_seconds_bucket:increase30d{verb=~\"POST|PUT|PATCH|DELETE\",le=\"1\"})\n  ) +\n  (\n    # read too slow\n    sum by (cluster) (cluster_verb_scope:apiserver_request_slo_duration_seconds_count:increase30d{verb=~\"LIST|GET\"})\n    -\n    (\n      (\n        sum by (cluster) (cluster_verb_scope_le:apiserver_request_slo_duration_seconds_bucket:increase30d{verb=~\"LIST|GET\",scope=~\"resource|\",le=\"1\"})\n        or\n        vector(0)\n      )\n      +\n      sum by (cluster) (cluster_verb_scope_le:apiserver_request_slo_duration_seconds_bucket:increase30d{verb=~\"LIST|GET\",scope=\"namespace\",le=\"5\"})\n      +\n      sum by (cluster) (cluster_verb_scope_le:apiserver_request_slo_duration_seconds_bucket:increase30d{verb=~\"LIST|GET\",scope=\"cluster\",le=\"30\"})\n    )\n  ) +\n  # errors\n  sum by (cluster) (code:apiserver_request_total:increase30d{code=~\"5..\"} or vector(0))\n)\n/\nsum by (cluster) (code:apiserver_request_total:increase30d)\n",
          "severity": 0
        }
      ],
      "severity": 0
    },
    "prom_eval_interval": 180,
    "enable_stime": "",
    "enable_stimes": [],
    "enable_etime": "",
    "enable_etimes": [],
    "enable_days_of_week": [],
    "enable_days_of_weeks": [
      []
    ],
    "enable_in_bg": 0,
    "notify_recovered": 0,
    "notify_channels": [],
    "notify_repeat_step": 0,
    "notify_max_number": 0,
    "recover_duration": 0,
    "callbacks": [],
    "runbook_url": "",
    "append_tags": [
      "verb=all"
    ],
    "annotations": null
  },
  {
    "cate": "prometheus",
    "datasource_ids": [
      0
    ],
    "name": "apiserver_request:burnrate1d",
    "note": "",
    "prod": "metric",
    "algorithm": "",
    "algo_params": null,
    "delay": 0,
    "severity": 0,
    "severities": [
      0
    ],
    "disabled": 1,
    "prom_for_duration": 0,
    "prom_ql": "(\n  (\n    # too slow\n    sum by (cluster) (rate(apiserver_request_slo_duration_seconds_count{job=\"apiserver\",verb=~\"LIST|GET\",subresource!~\"proxy|attach|log|exec|portforward\"}[1d]))\n    -\n    (\n      (\n        sum by (cluster) (rate(apiserver_request_slo_duration_seconds_bucket{job=\"apiserver\",verb=~\"LIST|GET\",subresource!~\"proxy|attach|log|exec|portforward\",scope=~\"resource|\",le=\"1\"}[1d]))\n        or\n        vector(0)\n      )\n      +\n      sum by (cluster) (rate(apiserver_request_slo_duration_seconds_bucket{job=\"apiserver\",verb=~\"LIST|GET\",subresource!~\"proxy|attach|log|exec|portforward\",scope=\"namespace\",le=\"5\"}[1d]))\n      +\n      sum by (cluster) (rate(apiserver_request_slo_duration_seconds_bucket{job=\"apiserver\",verb=~\"LIST|GET\",subresource!~\"proxy|attach|log|exec|portforward\",scope=\"cluster\",le=\"30\"}[1d]))\n    )\n  )\n  +\n  # errors\n  sum by (cluster) (rate(apiserver_request_total{job=\"apiserver\",verb=~\"LIST|GET\",code=~\"5..\"}[1d]))\n)\n/\nsum by (cluster) (rate(apiserver_request_total{job=\"apiserver\",verb=~\"LIST|GET\"}[1d]))\n",
    "rule_config": {
      "algo_params": null,
      "inhibit": false,
      "prom_ql": "",
      "queries": [
        {
          "prom_ql": "(\n  (\n    # too slow\n    sum by (cluster) (rate(apiserver_request_slo_duration_seconds_count{job=\"apiserver\",verb=~\"LIST|GET\",subresource!~\"proxy|attach|log|exec|portforward\"}[1d]))\n    -\n    (\n      (\n        sum by (cluster) (rate(apiserver_request_slo_duration_seconds_bucket{job=\"apiserver\",verb=~\"LIST|GET\",subresource!~\"proxy|attach|log|exec|portforward\",scope=~\"resource|\",le=\"1\"}[1d]))\n        or\n        vector(0)\n      )\n      +\n      sum by (cluster) (rate(apiserver_request_slo_duration_seconds_bucket{job=\"apiserver\",verb=~\"LIST|GET\",subresource!~\"proxy|attach|log|exec|portforward\",scope=\"namespace\",le=\"5\"}[1d]))\n      +\n      sum by (cluster) (rate(apiserver_request_slo_duration_seconds_bucket{job=\"apiserver\",verb=~\"LIST|GET\",subresource!~\"proxy|attach|log|exec|portforward\",scope=\"cluster\",le=\"30\"}[1d]))\n    )\n  )\n  +\n  # errors\n  sum by (cluster) (rate(apiserver_request_total{job=\"apiserver\",verb=~\"LIST|GET\",code=~\"5..\"}[1d]))\n)\n/\nsum by (cluster) (rate(apiserver_request_total{job=\"apiserver\",verb=~\"LIST|GET\"}[1d]))\n",
          "severity": 0
        }
      ],
      "severity": 0
    },
    "prom_eval_interval": 15,
    "enable_stime": "",
    "enable_stimes": [],
    "enable_etime": "",
    "enable_etimes": [],
    "enable_days_of_week": [],
    "enable_days_of_weeks": [
      []
    ],
    "enable_in_bg": 0,
    "notify_recovered": 0,
    "notify_channels": [],
    "notify_repeat_step": 0,
    "notify_max_number": 0,
    "recover_duration": 0,
    "callbacks": [],
    "runbook_url": "",
    "append_tags": [
      "verb=read"
    ],
    "annotations": null
  },
  {
    "cate": "prometheus",
    "datasource_ids": [
      0
    ],
    "name": "apiserver_request:burnrate1h",
    "note": "",
    "prod": "metric",
    "algorithm": "",
    "algo_params": null,
    "delay": 0,
    "severity": 0,
    "severities": [
      0
    ],
    "disabled": 1,
    "prom_for_duration": 0,
    "prom_ql": "(\n  (\n    # too slow\n    sum by (cluster) (rate(apiserver_request_slo_duration_seconds_count{job=\"apiserver\",verb=~\"LIST|GET\",subresource!~\"proxy|attach|log|exec|portforward\"}[1h]))\n    -\n    (\n      (\n        sum by (cluster) (rate(apiserver_request_slo_duration_seconds_bucket{job=\"apiserver\",verb=~\"LIST|GET\",subresource!~\"proxy|attach|log|exec|portforward\",scope=~\"resource|\",le=\"1\"}[1h]))\n        or\n        vector(0)\n      )\n      +\n      sum by (cluster) (rate(apiserver_request_slo_duration_seconds_bucket{job=\"apiserver\",verb=~\"LIST|GET\",subresource!~\"proxy|attach|log|exec|portforward\",scope=\"namespace\",le=\"5\"}[1h]))\n      +\n      sum by (cluster) (rate(apiserver_request_slo_duration_seconds_bucket{job=\"apiserver\",verb=~\"LIST|GET\",subresource!~\"proxy|attach|log|exec|portforward\",scope=\"cluster\",le=\"30\"}[1h]))\n    )\n  )\n  +\n  # errors\n  sum by (cluster) (rate(apiserver_request_total{job=\"apiserver\",verb=~\"LIST|GET\",code=~\"5..\"}[1h]))\n)\n/\nsum by (cluster) (rate(apiserver_request_total{job=\"apiserver\",verb=~\"LIST|GET\"}[1h]))\n",
    "rule_config": {
      "algo_params": null,
      "inhibit": false,
      "prom_ql": "",
      "queries": [
        {
          "prom_ql": "(\n  (\n    # too slow\n    sum by (cluster) (rate(apiserver_request_slo_duration_seconds_count{job=\"apiserver\",verb=~\"LIST|GET\",subresource!~\"proxy|attach|log|exec|portforward\"}[1h]))\n    -\n    (\n      (\n        sum by (cluster) (rate(apiserver_request_slo_duration_seconds_bucket{job=\"apiserver\",verb=~\"LIST|GET\",subresource!~\"proxy|attach|log|exec|portforward\",scope=~\"resource|\",le=\"1\"}[1h]))\n        or\n        vector(0)\n      )\n      +\n      sum by (cluster) (rate(apiserver_request_slo_duration_seconds_bucket{job=\"apiserver\",verb=~\"LIST|GET\",subresource!~\"proxy|attach|log|exec|portforward\",scope=\"namespace\",le=\"5\"}[1h]))\n      +\n      sum by (cluster) (rate(apiserver_request_slo_duration_seconds_bucket{job=\"apiserver\",verb=~\"LIST|GET\",subresource!~\"proxy|attach|log|exec|portforward\",scope=\"cluster\",le=\"30\"}[1h]))\n    )\n  )\n  +\n  # errors\n  sum by (cluster) (rate(apiserver_request_total{job=\"apiserver\",verb=~\"LIST|GET\",code=~\"5..\"}[1h]))\n)\n/\nsum by (cluster) (rate(apiserver_request_total{job=\"apiserver\",verb=~\"LIST|GET\"}[1h]))\n",
          "severity": 0
        }
      ],
      "severity": 0
    },
    "prom_eval_interval": 15,
    "enable_stime": "",
    "enable_stimes": [],
    "enable_etime": "",
    "enable_etimes": [],
    "enable_days_of_week": [],
    "enable_days_of_weeks": [
      []
    ],
    "enable_in_bg": 0,
    "notify_recovered": 0,
    "notify_channels": [],
    "notify_repeat_step": 0,
    "notify_max_number": 0,
    "recover_duration": 0,
    "callbacks": [],
    "runbook_url": "",
    "append_tags": [
      "verb=read"
    ],
    "annotations": null
  },
  {
    "cate": "prometheus",
    "datasource_ids": [
      0
    ],
    "name": "apiserver_request:burnrate2h",
    "note": "",
    "prod": "metric",
    "algorithm": "",
    "algo_params": null,
    "delay": 0,
    "severity": 0,
    "severities": [
      0
    ],
    "disabled": 1,
    "prom_for_duration": 0,
    "prom_ql": "(\n  (\n    # too slow\n    sum by (cluster) (rate(apiserver_request_slo_duration_seconds_count{job=\"apiserver\",verb=~\"LIST|GET\",subresource!~\"proxy|attach|log|exec|portforward\"}[2h]))\n    -\n    (\n      (\n        sum by (cluster) (rate(apiserver_request_slo_duration_seconds_bucket{job=\"apiserver\",verb=~\"LIST|GET\",subresource!~\"proxy|attach|log|exec|portforward\",scope=~\"resource|\",le=\"1\"}[2h]))\n        or\n        vector(0)\n      )\n      +\n      sum by (cluster) (rate(apiserver_request_slo_duration_seconds_bucket{job=\"apiserver\",verb=~\"LIST|GET\",subresource!~\"proxy|attach|log|exec|portforward\",scope=\"namespace\",le=\"5\"}[2h]))\n      +\n      sum by (cluster) (rate(apiserver_request_slo_duration_seconds_bucket{job=\"apiserver\",verb=~\"LIST|GET\",subresource!~\"proxy|attach|log|exec|portforward\",scope=\"cluster\",le=\"30\"}[2h]))\n    )\n  )\n  +\n  # errors\n  sum by (cluster) (rate(apiserver_request_total{job=\"apiserver\",verb=~\"LIST|GET\",code=~\"5..\"}[2h]))\n)\n/\nsum by (cluster) (rate(apiserver_request_total{job=\"apiserver\",verb=~\"LIST|GET\"}[2h]))\n",
    "rule_config": {
      "algo_params": null,
      "inhibit": false,
      "prom_ql": "",
      "queries": [
        {
          "prom_ql": "(\n  (\n    # too slow\n    sum by (cluster) (rate(apiserver_request_slo_duration_seconds_count{job=\"apiserver\",verb=~\"LIST|GET\",subresource!~\"proxy|attach|log|exec|portforward\"}[2h]))\n    -\n    (\n      (\n        sum by (cluster) (rate(apiserver_request_slo_duration_seconds_bucket{job=\"apiserver\",verb=~\"LIST|GET\",subresource!~\"proxy|attach|log|exec|portforward\",scope=~\"resource|\",le=\"1\"}[2h]))\n        or\n        vector(0)\n      )\n      +\n      sum by (cluster) (rate(apiserver_request_slo_duration_seconds_bucket{job=\"apiserver\",verb=~\"LIST|GET\",subresource!~\"proxy|attach|log|exec|portforward\",scope=\"namespace\",le=\"5\"}[2h]))\n      +\n      sum by (cluster) (rate(apiserver_request_slo_duration_seconds_bucket{job=\"apiserver\",verb=~\"LIST|GET\",subresource!~\"proxy|attach|log|exec|portforward\",scope=\"cluster\",le=\"30\"}[2h]))\n    )\n  )\n  +\n  # errors\n  sum by (cluster) (rate(apiserver_request_total{job=\"apiserver\",verb=~\"LIST|GET\",code=~\"5..\"}[2h]))\n)\n/\nsum by (cluster) (rate(apiserver_request_total{job=\"apiserver\",verb=~\"LIST|GET\"}[2h]))\n",
          "severity": 0
        }
      ],
      "severity": 0
    },
    "prom_eval_interval": 15,
    "enable_stime": "",
    "enable_stimes": [],
    "enable_etime": "",
    "enable_etimes": [],
    "enable_days_of_week": [],
    "enable_days_of_weeks": [
      []
    ],
    "enable_in_bg": 0,
    "notify_recovered": 0,
    "notify_channels": [],
    "notify_repeat_step": 0,
    "notify_max_number": 0,
    "recover_duration": 0,
    "callbacks": [],
    "runbook_url": "",
    "append_tags": [
      "verb=read"
    ],
    "annotations": null
  },
  {
    "cate": "prometheus",
    "datasource_ids": [
      0
    ],
    "name": "apiserver_request:burnrate30m",
    "note": "",
    "prod": "metric",
    "algorithm": "",
    "algo_params": null,
    "delay": 0,
    "severity": 0,
    "severities": [
      0
    ],
    "disabled": 1,
    "prom_for_duration": 0,
    "prom_ql": "(\n  (\n    # too slow\n    sum by (cluster) (rate(apiserver_request_slo_duration_seconds_count{job=\"apiserver\",verb=~\"LIST|GET\",subresource!~\"proxy|attach|log|exec|portforward\"}[30m]))\n    -\n    (\n      (\n        sum by (cluster) (rate(apiserver_request_slo_duration_seconds_bucket{job=\"apiserver\",verb=~\"LIST|GET\",subresource!~\"proxy|attach|log|exec|portforward\",scope=~\"resource|\",le=\"1\"}[30m]))\n        or\n        vector(0)\n      )\n      +\n      sum by (cluster) (rate(apiserver_request_slo_duration_seconds_bucket{job=\"apiserver\",verb=~\"LIST|GET\",subresource!~\"proxy|attach|log|exec|portforward\",scope=\"namespace\",le=\"5\"}[30m]))\n      +\n      sum by (cluster) (rate(apiserver_request_slo_duration_seconds_bucket{job=\"apiserver\",verb=~\"LIST|GET\",subresource!~\"proxy|attach|log|exec|portforward\",scope=\"cluster\",le=\"30\"}[30m]))\n    )\n  )\n  +\n  # errors\n  sum by (cluster) (rate(apiserver_request_total{job=\"apiserver\",verb=~\"LIST|GET\",code=~\"5..\"}[30m]))\n)\n/\nsum by (cluster) (rate(apiserver_request_total{job=\"apiserver\",verb=~\"LIST|GET\"}[30m]))\n",
    "rule_config": {
      "algo_params": null,
      "inhibit": false,
      "prom_ql": "",
      "queries": [
        {
          "prom_ql": "(\n  (\n    # too slow\n    sum by (cluster) (rate(apiserver_request_slo_duration_seconds_count{job=\"apiserver\",verb=~\"LIST|GET\",subresource!~\"proxy|attach|log|exec|portforward\"}[30m]))\n    -\n    (\n      (\n        sum by (cluster) (rate(apiserver_request_slo_duration_seconds_bucket{job=\"apiserver\",verb=~\"LIST|GET\",subresource!~\"proxy|attach|log|exec|portforward\",scope=~\"resource|\",le=\"1\"}[30m]))\n        or\n        vector(0)\n      )\n      +\n      sum by (cluster) (rate(apiserver_request_slo_duration_seconds_bucket{job=\"apiserver\",verb=~\"LIST|GET\",subresource!~\"proxy|attach|log|exec|portforward\",scope=\"namespace\",le=\"5\"}[30m]))\n      +\n      sum by (cluster) (rate(apiserver_request_slo_duration_seconds_bucket{job=\"apiserver\",verb=~\"LIST|GET\",subresource!~\"proxy|attach|log|exec|portforward\",scope=\"cluster\",le=\"30\"}[30m]))\n    )\n  )\n  +\n  # errors\n  sum by (cluster) (rate(apiserver_request_total{job=\"apiserver\",verb=~\"LIST|GET\",code=~\"5..\"}[30m]))\n)\n/\nsum by (cluster) (rate(apiserver_request_total{job=\"apiserver\",verb=~\"LIST|GET\"}[30m]))\n",
          "severity": 0
        }
      ],
      "severity": 0
    },
    "prom_eval_interval": 15,
    "enable_stime": "",
    "enable_stimes": [],
    "enable_etime": "",
    "enable_etimes": [],
    "enable_days_of_week": [],
    "enable_days_of_weeks": [
      []
    ],
    "enable_in_bg": 0,
    "notify_recovered": 0,
    "notify_channels": [],
    "notify_repeat_step": 0,
    "notify_max_number": 0,
    "recover_duration": 0,
    "callbacks": [],
    "runbook_url": "",
    "append_tags": [
      "verb=read"
    ],
    "annotations": null
  },
  {
    "cate": "prometheus",
    "datasource_ids": [
      0
    ],
    "name": "apiserver_request:burnrate3d",
    "note": "",
    "prod": "metric",
    "algorithm": "",
    "algo_params": null,
    "delay": 0,
    "severity": 0,
    "severities": [
      0
    ],
    "disabled": 1,
    "prom_for_duration": 0,
    "prom_ql": "(\n  (\n    # too slow\n    sum by (cluster) (rate(apiserver_request_slo_duration_seconds_count{job=\"apiserver\",verb=~\"LIST|GET\",subresource!~\"proxy|attach|log|exec|portforward\"}[3d]))\n    -\n    (\n      (\n        sum by (cluster) (rate(apiserver_request_slo_duration_seconds_bucket{job=\"apiserver\",verb=~\"LIST|GET\",subresource!~\"proxy|attach|log|exec|portforward\",scope=~\"resource|\",le=\"1\"}[3d]))\n        or\n        vector(0)\n      )\n      +\n      sum by (cluster) (rate(apiserver_request_slo_duration_seconds_bucket{job=\"apiserver\",verb=~\"LIST|GET\",subresource!~\"proxy|attach|log|exec|portforward\",scope=\"namespace\",le=\"5\"}[3d]))\n      +\n      sum by (cluster) (rate(apiserver_request_slo_duration_seconds_bucket{job=\"apiserver\",verb=~\"LIST|GET\",subresource!~\"proxy|attach|log|exec|portforward\",scope=\"cluster\",le=\"30\"}[3d]))\n    )\n  )\n  +\n  # errors\n  sum by (cluster) (rate(apiserver_request_total{job=\"apiserver\",verb=~\"LIST|GET\",code=~\"5..\"}[3d]))\n)\n/\nsum by (cluster) (rate(apiserver_request_total{job=\"apiserver\",verb=~\"LIST|GET\"}[3d]))\n",
    "rule_config": {
      "algo_params": null,
      "inhibit": false,
      "prom_ql": "",
      "queries": [
        {
          "prom_ql": "(\n  (\n    # too slow\n    sum by (cluster) (rate(apiserver_request_slo_duration_seconds_count{job=\"apiserver\",verb=~\"LIST|GET\",subresource!~\"proxy|attach|log|exec|portforward\"}[3d]))\n    -\n    (\n      (\n        sum by (cluster) (rate(apiserver_request_slo_duration_seconds_bucket{job=\"apiserver\",verb=~\"LIST|GET\",subresource!~\"proxy|attach|log|exec|portforward\",scope=~\"resource|\",le=\"1\"}[3d]))\n        or\n        vector(0)\n      )\n      +\n      sum by (cluster) (rate(apiserver_request_slo_duration_seconds_bucket{job=\"apiserver\",verb=~\"LIST|GET\",subresource!~\"proxy|attach|log|exec|portforward\",scope=\"namespace\",le=\"5\"}[3d]))\n      +\n      sum by (cluster) (rate(apiserver_request_slo_duration_seconds_bucket{job=\"apiserver\",verb=~\"LIST|GET\",subresource!~\"proxy|attach|log|exec|portforward\",scope=\"cluster\",le=\"30\"}[3d]))\n    )\n  )\n  +\n  # errors\n  sum by (cluster) (rate(apiserver_request_total{job=\"apiserver\",verb=~\"LIST|GET\",code=~\"5..\"}[3d]))\n)\n/\nsum by (cluster) (rate(apiserver_request_total{job=\"apiserver\",verb=~\"LIST|GET\"}[3d]))\n",
          "severity": 0
        }
      ],
      "severity": 0
    },
    "prom_eval_interval": 15,
    "enable_stime": "",
    "enable_stimes": [],
    "enable_etime": "",
    "enable_etimes": [],
    "enable_days_of_week": [],
    "enable_days_of_weeks": [
      []
    ],
    "enable_in_bg": 0,
    "notify_recovered": 0,
    "notify_channels": [],
    "notify_repeat_step": 0,
    "notify_max_number": 0,
    "recover_duration": 0,
    "callbacks": [],
    "runbook_url": "",
    "append_tags": [
      "verb=read"
    ],
    "annotations": null
  },
  {
    "cate": "prometheus",
    "datasource_ids": [
      0
    ],
    "name": "apiserver_request:burnrate5m",
    "note": "",
    "prod": "metric",
    "algorithm": "",
    "algo_params": null,
    "delay": 0,
    "severity": 0,
    "severities": [
      0
    ],
    "disabled": 1,
    "prom_for_duration": 0,
    "prom_ql": "(\n  (\n    # too slow\n    sum by (cluster) (rate(apiserver_request_slo_duration_seconds_count{job=\"apiserver\",verb=~\"LIST|GET\",subresource!~\"proxy|attach|log|exec|portforward\"}[5m]))\n    -\n    (\n      (\n        sum by (cluster) (rate(apiserver_request_slo_duration_seconds_bucket{job=\"apiserver\",verb=~\"LIST|GET\",subresource!~\"proxy|attach|log|exec|portforward\",scope=~\"resource|\",le=\"1\"}[5m]))\n        or\n        vector(0)\n      )\n      +\n      sum by (cluster) (rate(apiserver_request_slo_duration_seconds_bucket{job=\"apiserver\",verb=~\"LIST|GET\",subresource!~\"proxy|attach|log|exec|portforward\",scope=\"namespace\",le=\"5\"}[5m]))\n      +\n      sum by (cluster) (rate(apiserver_request_slo_duration_seconds_bucket{job=\"apiserver\",verb=~\"LIST|GET\",subresource!~\"proxy|attach|log|exec|portforward\",scope=\"cluster\",le=\"30\"}[5m]))\n    )\n  )\n  +\n  # errors\n  sum by (cluster) (rate(apiserver_request_total{job=\"apiserver\",verb=~\"LIST|GET\",code=~\"5..\"}[5m]))\n)\n/\nsum by (cluster) (rate(apiserver_request_total{job=\"apiserver\",verb=~\"LIST|GET\"}[5m]))\n",
    "rule_config": {
      "algo_params": null,
      "inhibit": false,
      "prom_ql": "",
      "queries": [
        {
          "prom_ql": "(\n  (\n    # too slow\n    sum by (cluster) (rate(apiserver_request_slo_duration_seconds_count{job=\"apiserver\",verb=~\"LIST|GET\",subresource!~\"proxy|attach|log|exec|portforward\"}[5m]))\n    -\n    (\n      (\n        sum by (cluster) (rate(apiserver_request_slo_duration_seconds_bucket{job=\"apiserver\",verb=~\"LIST|GET\",subresource!~\"proxy|attach|log|exec|portforward\",scope=~\"resource|\",le=\"1\"}[5m]))\n        or\n        vector(0)\n      )\n      +\n      sum by (cluster) (rate(apiserver_request_slo_duration_seconds_bucket{job=\"apiserver\",verb=~\"LIST|GET\",subresource!~\"proxy|attach|log|exec|portforward\",scope=\"namespace\",le=\"5\"}[5m]))\n      +\n      sum by (cluster) (rate(apiserver_request_slo_duration_seconds_bucket{job=\"apiserver\",verb=~\"LIST|GET\",subresource!~\"proxy|attach|log|exec|portforward\",scope=\"cluster\",le=\"30\"}[5m]))\n    )\n  )\n  +\n  # errors\n  sum by (cluster) (rate(apiserver_request_total{job=\"apiserver\",verb=~\"LIST|GET\",code=~\"5..\"}[5m]))\n)\n/\nsum by (cluster) (rate(apiserver_request_total{job=\"apiserver\",verb=~\"LIST|GET\"}[5m]))\n",
          "severity": 0
        }
      ],
      "severity": 0
    },
    "prom_eval_interval": 15,
    "enable_stime": "",
    "enable_stimes": [],
    "enable_etime": "",
    "enable_etimes": [],
    "enable_days_of_week": [],
    "enable_days_of_weeks": [
      []
    ],
    "enable_in_bg": 0,
    "notify_recovered": 0,
    "notify_channels": [],
    "notify_repeat_step": 0,
    "notify_max_number": 0,
    "recover_duration": 0,
    "callbacks": [],
    "runbook_url": "",
    "append_tags": [
      "verb=read"
    ],
    "annotations": null
  },
  {
    "cate": "prometheus",
    "datasource_ids": [
      0
    ],
    "name": "apiserver_request:burnrate6h",
    "note": "",
    "prod": "metric",
    "algorithm": "",
    "algo_params": null,
    "delay": 0,
    "severity": 0,
    "severities": [
      0
    ],
    "disabled": 1,
    "prom_for_duration": 0,
    "prom_ql": "(\n  (\n    # too slow\n    sum by (cluster) (rate(apiserver_request_slo_duration_seconds_count{job=\"apiserver\",verb=~\"LIST|GET\",subresource!~\"proxy|attach|log|exec|portforward\"}[6h]))\n    -\n    (\n      (\n        sum by (cluster) (rate(apiserver_request_slo_duration_seconds_bucket{job=\"apiserver\",verb=~\"LIST|GET\",subresource!~\"proxy|attach|log|exec|portforward\",scope=~\"resource|\",le=\"1\"}[6h]))\n        or\n        vector(0)\n      )\n      +\n      sum by (cluster) (rate(apiserver_request_slo_duration_seconds_bucket{job=\"apiserver\",verb=~\"LIST|GET\",subresource!~\"proxy|attach|log|exec|portforward\",scope=\"namespace\",le=\"5\"}[6h]))\n      +\n      sum by (cluster) (rate(apiserver_request_slo_duration_seconds_bucket{job=\"apiserver\",verb=~\"LIST|GET\",subresource!~\"proxy|attach|log|exec|portforward\",scope=\"cluster\",le=\"30\"}[6h]))\n    )\n  )\n  +\n  # errors\n  sum by (cluster) (rate(apiserver_request_total{job=\"apiserver\",verb=~\"LIST|GET\",code=~\"5..\"}[6h]))\n)\n/\nsum by (cluster) (rate(apiserver_request_total{job=\"apiserver\",verb=~\"LIST|GET\"}[6h]))\n",
    "rule_config": {
      "algo_params": null,
      "inhibit": false,
      "prom_ql": "",
      "queries": [
        {
          "prom_ql": "(\n  (\n    # too slow\n    sum by (cluster) (rate(apiserver_request_slo_duration_seconds_count{job=\"apiserver\",verb=~\"LIST|GET\",subresource!~\"proxy|attach|log|exec|portforward\"}[6h]))\n    -\n    (\n      (\n        sum by (cluster) (rate(apiserver_request_slo_duration_seconds_bucket{job=\"apiserver\",verb=~\"LIST|GET\",subresource!~\"proxy|attach|log|exec|portforward\",scope=~\"resource|\",le=\"1\"}[6h]))\n        or\n        vector(0)\n      )\n      +\n      sum by (cluster) (rate(apiserver_request_slo_duration_seconds_bucket{job=\"apiserver\",verb=~\"LIST|GET\",subresource!~\"proxy|attach|log|exec|portforward\",scope=\"namespace\",le=\"5\"}[6h]))\n      +\n      sum by (cluster) (rate(apiserver_request_slo_duration_seconds_bucket{job=\"apiserver\",verb=~\"LIST|GET\",subresource!~\"proxy|attach|log|exec|portforward\",scope=\"cluster\",le=\"30\"}[6h]))\n    )\n  )\n  +\n  # errors\n  sum by (cluster) (rate(apiserver_request_total{job=\"apiserver\",verb=~\"LIST|GET\",code=~\"5..\"}[6h]))\n)\n/\nsum by (cluster) (rate(apiserver_request_total{job=\"apiserver\",verb=~\"LIST|GET\"}[6h]))\n",
          "severity": 0
        }
      ],
      "severity": 0
    },
    "prom_eval_interval": 15,
    "enable_stime": "",
    "enable_stimes": [],
    "enable_etime": "",
    "enable_etimes": [],
    "enable_days_of_week": [],
    "enable_days_of_weeks": [
      []
    ],
    "enable_in_bg": 0,
    "notify_recovered": 0,
    "notify_channels": [],
    "notify_repeat_step": 0,
    "notify_max_number": 0,
    "recover_duration": 0,
    "callbacks": [],
    "runbook_url": "",
    "append_tags": [
      "verb=read"
    ],
    "annotations": null
  },
  {
    "cate": "prometheus",
    "datasource_ids": [
      0
    ],
    "name": "cluster:namespace:pod_cpu:active:kube_pod_container_resource_limits",
    "note": "",
    "prod": "metric",
    "algorithm": "",
    "algo_params": null,
    "delay": 0,
    "severity": 0,
    "severities": [
      0
    ],
    "disabled": 1,
    "prom_for_duration": 0,
    "prom_ql": "kube_pod_container_resource_limits{resource=\"cpu\",job=\"kube-state-metrics\"}  * on (namespace, pod, cluster)\ngroup_left() max by (namespace, pod, cluster) (\n  (kube_pod_status_phase{phase=~\"Pending|Running\"} == 1)\n  )\n",
    "rule_config": {
      "algo_params": null,
      "inhibit": false,
      "prom_ql": "",
      "queries": [
        {
          "prom_ql": "kube_pod_container_resource_limits{resource=\"cpu\",job=\"kube-state-metrics\"}  * on (namespace, pod, cluster)\ngroup_left() max by (namespace, pod, cluster) (\n  (kube_pod_status_phase{phase=~\"Pending|Running\"} == 1)\n  )\n",
          "severity": 0
        }
      ],
      "severity": 0
    },
    "prom_eval_interval": 15,
    "enable_stime": "",
    "enable_stimes": [],
    "enable_etime": "",
    "enable_etimes": [],
    "enable_days_of_week": [],
    "enable_days_of_weeks": [
      []
    ],
    "enable_in_bg": 0,
    "notify_recovered": 0,
    "notify_channels": [],
    "notify_repeat_step": 0,
    "notify_max_number": 0,
    "recover_duration": 0,
    "callbacks": [],
    "runbook_url": "",
    "append_tags": [],
    "annotations": null
  },
  {
    "cate": "prometheus",
    "datasource_ids": [
      0
    ],
    "name": "cluster:namespace:pod_cpu:active:kube_pod_container_resource_requests",
    "note": "",
    "prod": "metric",
    "algorithm": "",
    "algo_params": null,
    "delay": 0,
    "severity": 0,
    "severities": [
      0
    ],
    "disabled": 1,
    "prom_for_duration": 0,
    "prom_ql": "kube_pod_container_resource_requests{resource=\"cpu\",job=\"kube-state-metrics\"}  * on (namespace, pod, cluster)\ngroup_left() max by (namespace, pod, cluster) (\n  (kube_pod_status_phase{phase=~\"Pending|Running\"} == 1)\n)\n",
    "rule_config": {
      "algo_params": null,
      "inhibit": false,
      "prom_ql": "",
      "queries": [
        {
          "prom_ql": "kube_pod_container_resource_requests{resource=\"cpu\",job=\"kube-state-metrics\"}  * on (namespace, pod, cluster)\ngroup_left() max by (namespace, pod, cluster) (\n  (kube_pod_status_phase{phase=~\"Pending|Running\"} == 1)\n)\n",
          "severity": 0
        }
      ],
      "severity": 0
    },
    "prom_eval_interval": 15,
    "enable_stime": "",
    "enable_stimes": [],
    "enable_etime": "",
    "enable_etimes": [],
    "enable_days_of_week": [],
    "enable_days_of_weeks": [
      []
    ],
    "enable_in_bg": 0,
    "notify_recovered": 0,
    "notify_channels": [],
    "notify_repeat_step": 0,
    "notify_max_number": 0,
    "recover_duration": 0,
    "callbacks": [],
    "runbook_url": "",
    "append_tags": [],
    "annotations": null
  },
  {
    "cate": "prometheus",
    "datasource_ids": [
      0
    ],
    "name": "cluster:namespace:pod_memory:active:kube_pod_container_resource_limits",
    "note": "",
    "prod": "metric",
    "algorithm": "",
    "algo_params": null,
    "delay": 0,
    "severity": 0,
    "severities": [
      0
    ],
    "disabled": 1,
    "prom_for_duration": 0,
    "prom_ql": "kube_pod_container_resource_limits{resource=\"memory\",job=\"kube-state-metrics\"}  * on (namespace, pod, cluster)\ngroup_left() max by (namespace, pod, cluster) (\n  (kube_pod_status_phase{phase=~\"Pending|Running\"} == 1)\n)\n",
    "rule_config": {
      "algo_params": null,
      "inhibit": false,
      "prom_ql": "",
      "queries": [
        {
          "prom_ql": "kube_pod_container_resource_limits{resource=\"memory\",job=\"kube-state-metrics\"}  * on (namespace, pod, cluster)\ngroup_left() max by (namespace, pod, cluster) (\n  (kube_pod_status_phase{phase=~\"Pending|Running\"} == 1)\n)\n",
          "severity": 0
        }
      ],
      "severity": 0
    },
    "prom_eval_interval": 15,
    "enable_stime": "",
    "enable_stimes": [],
    "enable_etime": "",
    "enable_etimes": [],
    "enable_days_of_week": [],
    "enable_days_of_weeks": [
      []
    ],
    "enable_in_bg": 0,
    "notify_recovered": 0,
    "notify_channels": [],
    "notify_repeat_step": 0,
    "notify_max_number": 0,
    "recover_duration": 0,
    "callbacks": [],
    "runbook_url": "",
    "append_tags": [],
    "annotations": null
  },
  {
    "cate": "prometheus",
    "datasource_ids": [
      0
    ],
    "name": "cluster:namespace:pod_memory:active:kube_pod_container_resource_requests",
    "note": "",
    "prod": "metric",
    "algorithm": "",
    "algo_params": null,
    "delay": 0,
    "severity": 0,
    "severities": [
      0
    ],
    "disabled": 1,
    "prom_for_duration": 0,
    "prom_ql": "kube_pod_container_resource_requests{resource=\"memory\",job=\"kube-state-metrics\"}  * on (namespace, pod, cluster)\ngroup_left() max by (namespace, pod, cluster) (\n  (kube_pod_status_phase{phase=~\"Pending|Running\"} == 1)\n)\n",
    "rule_config": {
      "algo_params": null,
      "inhibit": false,
      "prom_ql": "",
      "queries": [
        {
          "prom_ql": "kube_pod_container_resource_requests{resource=\"memory\",job=\"kube-state-metrics\"}  * on (namespace, pod, cluster)\ngroup_left() max by (namespace, pod, cluster) (\n  (kube_pod_status_phase{phase=~\"Pending|Running\"} == 1)\n)\n",
          "severity": 0
        }
      ],
      "severity": 0
    },
    "prom_eval_interval": 15,
    "enable_stime": "",
    "enable_stimes": [],
    "enable_etime": "",
    "enable_etimes": [],
    "enable_days_of_week": [],
    "enable_days_of_weeks": [
      []
    ],
    "enable_in_bg": 0,
    "notify_recovered": 0,
    "notify_channels": [],
    "notify_repeat_step": 0,
    "notify_max_number": 0,
    "recover_duration": 0,
    "callbacks": [],
    "runbook_url": "",
    "append_tags": [],
    "annotations": null
  },
  {
    "cate": "prometheus",
    "datasource_ids": [
      0
    ],
    "name": "cluster:node_cpu:ratio_rate5m",
    "note": "",
    "prod": "metric",
    "algorithm": "",
    "algo_params": null,
    "delay": 0,
    "severity": 0,
    "severities": [
      0
    ],
    "disabled": 1,
    "prom_for_duration": 0,
    "prom_ql": "avg by (cluster) (\n  node:node_cpu_utilization:ratio_rate5m\n)\n",
    "rule_config": {
      "algo_params": null,
      "inhibit": false,
      "prom_ql": "",
      "queries": [
        {
          "prom_ql": "avg by (cluster) (\n  node:node_cpu_utilization:ratio_rate5m\n)\n",
          "severity": 0
        }
      ],
      "severity": 0
    },
    "prom_eval_interval": 15,
    "enable_stime": "",
    "enable_stimes": [],
    "enable_etime": "",
    "enable_etimes": [],
    "enable_days_of_week": [],
    "enable_days_of_weeks": [
      []
    ],
    "enable_in_bg": 0,
    "notify_recovered": 0,
    "notify_channels": [],
    "notify_repeat_step": 0,
    "notify_max_number": 0,
    "recover_duration": 0,
    "callbacks": [],
    "runbook_url": "",
    "append_tags": [],
    "annotations": null
  },
  {
    "cate": "prometheus",
    "datasource_ids": [
      0
    ],
    "name": "cluster_quantile:apiserver_request_slo_duration_seconds:histogram_quantile",
    "note": "",
    "prod": "metric",
    "algorithm": "",
    "algo_params": null,
    "delay": 0,
    "severity": 0,
    "severities": [
      0
    ],
    "disabled": 1,
    "prom_for_duration": 0,
    "prom_ql": "histogram_quantile(0.99, sum by (cluster, le, resource) (rate(apiserver_request_slo_duration_seconds_bucket{job=\"apiserver\",verb=~\"LIST|GET\",subresource!~\"proxy|attach|log|exec|portforward\"}[5m]))) > 0\n",
    "rule_config": {
      "algo_params": null,
      "inhibit": false,
      "prom_ql": "",
      "queries": [
        {
          "prom_ql": "histogram_quantile(0.99, sum by (cluster, le, resource) (rate(apiserver_request_slo_duration_seconds_bucket{job=\"apiserver\",verb=~\"LIST|GET\",subresource!~\"proxy|attach|log|exec|portforward\"}[5m]))) > 0\n",
          "severity": 0
        }
      ],
      "severity": 0
    },
    "prom_eval_interval": 15,
    "enable_stime": "",
    "enable_stimes": [],
    "enable_etime": "",
    "enable_etimes": [],
    "enable_days_of_week": [],
    "enable_days_of_weeks": [
      []
    ],
    "enable_in_bg": 0,
    "notify_recovered": 0,
    "notify_channels": [],
    "notify_repeat_step": 0,
    "notify_max_number": 0,
    "recover_duration": 0,
    "callbacks": [],
    "runbook_url": "",
    "append_tags": [
      "quantile=0.99",
      "verb=read"
    ],
    "annotations": null
  },
  {
    "cate": "prometheus",
    "datasource_ids": [
      0
    ],
    "name": "cluster_quantile:scheduler_binding_duration_seconds:histogram_quantile",
    "note": "",
    "prod": "metric",
    "algorithm": "",
    "algo_params": null,
    "delay": 0,
    "severity": 0,
    "severities": [
      0
    ],
    "disabled": 1,
    "prom_for_duration": 0,
    "prom_ql": "histogram_quantile(0.99, sum(rate(scheduler_binding_duration_seconds_bucket{job=\"kube-scheduler\"}[5m])) without(instance, pod))\n",
    "rule_config": {
      "algo_params": null,
      "inhibit": false,
      "prom_ql": "",
      "queries": [
        {
          "prom_ql": "histogram_quantile(0.99, sum(rate(scheduler_binding_duration_seconds_bucket{job=\"kube-scheduler\"}[5m])) without(instance, pod))\n",
          "severity": 0
        }
      ],
      "severity": 0
    },
    "prom_eval_interval": 15,
    "enable_stime": "",
    "enable_stimes": [],
    "enable_etime": "",
    "enable_etimes": [],
    "enable_days_of_week": [],
    "enable_days_of_weeks": [
      []
    ],
    "enable_in_bg": 0,
    "notify_recovered": 0,
    "notify_channels": [],
    "notify_repeat_step": 0,
    "notify_max_number": 0,
    "recover_duration": 0,
    "callbacks": [],
    "runbook_url": "",
    "append_tags": [
      "quantile=0.99"
    ],
    "annotations": null
  },
  {
    "cate": "prometheus",
    "datasource_ids": [
      0
    ],
    "name": "cluster_quantile:scheduler_e2e_scheduling_duration_seconds:histogram_quantile",
    "note": "",
    "prod": "metric",
    "algorithm": "",
    "algo_params": null,
    "delay": 0,
    "severity": 0,
    "severities": [
      0
    ],
    "disabled": 1,
    "prom_for_duration": 0,
    "prom_ql": "histogram_quantile(0.99, sum(rate(scheduler_e2e_scheduling_duration_seconds_bucket{job=\"kube-scheduler\"}[5m])) without(instance, pod))\n",
    "rule_config": {
      "algo_params": null,
      "inhibit": false,
      "prom_ql": "",
      "queries": [
        {
          "prom_ql": "histogram_quantile(0.99, sum(rate(scheduler_e2e_scheduling_duration_seconds_bucket{job=\"kube-scheduler\"}[5m])) without(instance, pod))\n",
          "severity": 0
        }
      ],
      "severity": 0
    },
    "prom_eval_interval": 15,
    "enable_stime": "",
    "enable_stimes": [],
    "enable_etime": "",
    "enable_etimes": [],
    "enable_days_of_week": [],
    "enable_days_of_weeks": [
      []
    ],
    "enable_in_bg": 0,
    "notify_recovered": 0,
    "notify_channels": [],
    "notify_repeat_step": 0,
    "notify_max_number": 0,
    "recover_duration": 0,
    "callbacks": [],
    "runbook_url": "",
    "append_tags": [
      "quantile=0.99"
    ],
    "annotations": null
  },
  {
    "cate": "prometheus",
    "datasource_ids": [
      0
    ],
    "name": "cluster_quantile:scheduler_scheduling_algorithm_duration_seconds:histogram_quantile",
    "note": "",
    "prod": "metric",
    "algorithm": "",
    "algo_params": null,
    "delay": 0,
    "severity": 0,
    "severities": [
      0
    ],
    "disabled": 1,
    "prom_for_duration": 0,
    "prom_ql": "histogram_quantile(0.99, sum(rate(scheduler_scheduling_algorithm_duration_seconds_bucket{job=\"kube-scheduler\"}[5m])) without(instance, pod))\n",
    "rule_config": {
      "algo_params": null,
      "inhibit": false,
      "prom_ql": "",
      "queries": [
        {
          "prom_ql": "histogram_quantile(0.99, sum(rate(scheduler_scheduling_algorithm_duration_seconds_bucket{job=\"kube-scheduler\"}[5m])) without(instance, pod))\n",
          "severity": 0
        }
      ],
      "severity": 0
    },
    "prom_eval_interval": 15,
    "enable_stime": "",
    "enable_stimes": [],
    "enable_etime": "",
    "enable_etimes": [],
    "enable_days_of_week": [],
    "enable_days_of_weeks": [
      []
    ],
    "enable_in_bg": 0,
    "notify_recovered": 0,
    "notify_channels": [],
    "notify_repeat_step": 0,
    "notify_max_number": 0,
    "recover_duration": 0,
    "callbacks": [],
    "runbook_url": "",
    "append_tags": [
      "quantile=0.99"
    ],
    "annotations": null
  },
  {
    "cate": "prometheus",
    "datasource_ids": [
      0
    ],
    "name": "cluster_verb_scope:apiserver_request_slo_duration_seconds_count:increase1h",
    "note": "",
    "prod": "metric",
    "algorithm": "",
    "algo_params": null,
    "delay": 0,
    "severity": 0,
    "severities": [
      0
    ],
    "disabled": 1,
    "prom_for_duration": 0,
    "prom_ql": "sum by (cluster, verb, scope) (increase(apiserver_request_slo_duration_seconds_count{job=\"apiserver\"}[1h]))\n",
    "rule_config": {
      "algo_params": null,
      "inhibit": false,
      "prom_ql": "",
      "queries": [
        {
          "prom_ql": "sum by (cluster, verb, scope) (increase(apiserver_request_slo_duration_seconds_count{job=\"apiserver\"}[1h]))\n",
          "severity": 0
        }
      ],
      "severity": 0
    },
    "prom_eval_interval": 180,
    "enable_stime": "",
    "enable_stimes": [],
    "enable_etime": "",
    "enable_etimes": [],
    "enable_days_of_week": [],
    "enable_days_of_weeks": [
      []
    ],
    "enable_in_bg": 0,
    "notify_recovered": 0,
    "notify_channels": [],
    "notify_repeat_step": 0,
    "notify_max_number": 0,
    "recover_duration": 0,
    "callbacks": [],
    "runbook_url": "",
    "append_tags": [],
    "annotations": null
  },
  {
    "cate": "prometheus",
    "datasource_ids": [
      0
    ],
    "name": "cluster_verb_scope:apiserver_request_slo_duration_seconds_count:increase30d",
    "note": "",
    "prod": "metric",
    "algorithm": "",
    "algo_params": null,
    "delay": 0,
    "severity": 0,
    "severities": [
      0
    ],
    "disabled": 1,
    "prom_for_duration": 0,
    "prom_ql": "sum by (cluster, verb, scope) (avg_over_time(cluster_verb_scope:apiserver_request_slo_duration_seconds_count:increase1h[30d]) * 24 * 30)\n",
    "rule_config": {
      "algo_params": null,
      "inhibit": false,
      "prom_ql": "",
      "queries": [
        {
          "prom_ql": "sum by (cluster, verb, scope) (avg_over_time(cluster_verb_scope:apiserver_request_slo_duration_seconds_count:increase1h[30d]) * 24 * 30)\n",
          "severity": 0
        }
      ],
      "severity": 0
    },
    "prom_eval_interval": 180,
    "enable_stime": "",
    "enable_stimes": [],
    "enable_etime": "",
    "enable_etimes": [],
    "enable_days_of_week": [],
    "enable_days_of_weeks": [
      []
    ],
    "enable_in_bg": 0,
    "notify_recovered": 0,
    "notify_channels": [],
    "notify_repeat_step": 0,
    "notify_max_number": 0,
    "recover_duration": 0,
    "callbacks": [],
    "runbook_url": "",
    "append_tags": [],
    "annotations": null
  },
  {
    "cate": "prometheus",
    "datasource_ids": [
      0
    ],
    "name": "cluster_verb_scope_le:apiserver_request_slo_duration_seconds_bucket:increase1h",
    "note": "",
    "prod": "metric",
    "algorithm": "",
    "algo_params": null,
    "delay": 0,
    "severity": 0,
    "severities": [
      0
    ],
    "disabled": 1,
    "prom_for_duration": 0,
    "prom_ql": "sum by (cluster, verb, scope, le) (increase(apiserver_request_slo_duration_seconds_bucket[1h]))\n",
    "rule_config": {
      "algo_params": null,
      "inhibit": false,
      "prom_ql": "",
      "queries": [
        {
          "prom_ql": "sum by (cluster, verb, scope, le) (increase(apiserver_request_slo_duration_seconds_bucket[1h]))\n",
          "severity": 0
        }
      ],
      "severity": 0
    },
    "prom_eval_interval": 180,
    "enable_stime": "",
    "enable_stimes": [],
    "enable_etime": "",
    "enable_etimes": [],
    "enable_days_of_week": [],
    "enable_days_of_weeks": [
      []
    ],
    "enable_in_bg": 0,
    "notify_recovered": 0,
    "notify_channels": [],
    "notify_repeat_step": 0,
    "notify_max_number": 0,
    "recover_duration": 0,
    "callbacks": [],
    "runbook_url": "",
    "append_tags": [],
    "annotations": null
  },
  {
    "cate": "prometheus",
    "datasource_ids": [
      0
    ],
    "name": "cluster_verb_scope_le:apiserver_request_slo_duration_seconds_bucket:increase30d",
    "note": "",
    "prod": "metric",
    "algorithm": "",
    "algo_params": null,
    "delay": 0,
    "severity": 0,
    "severities": [
      0
    ],
    "disabled": 1,
    "prom_for_duration": 0,
    "prom_ql": "sum by (cluster, verb, scope, le) (avg_over_time(cluster_verb_scope_le:apiserver_request_slo_duration_seconds_bucket:increase1h[30d]) * 24 * 30)\n",
    "rule_config": {
      "algo_params": null,
      "inhibit": false,
      "prom_ql": "",
      "queries": [
        {
          "prom_ql": "sum by (cluster, verb, scope, le) (avg_over_time(cluster_verb_scope_le:apiserver_request_slo_duration_seconds_bucket:increase1h[30d]) * 24 * 30)\n",
          "severity": 0
        }
      ],
      "severity": 0
    },
    "prom_eval_interval": 180,
    "enable_stime": "",
    "enable_stimes": [],
    "enable_etime": "",
    "enable_etimes": [],
    "enable_days_of_week": [],
    "enable_days_of_weeks": [
      []
    ],
    "enable_in_bg": 0,
    "notify_recovered": 0,
    "notify_channels": [],
    "notify_repeat_step": 0,
    "notify_max_number": 0,
    "recover_duration": 0,
    "callbacks": [],
    "runbook_url": "",
    "append_tags": [],
    "annotations": null
  },
  {
    "cate": "prometheus",
    "datasource_ids": [
      0
    ],
    "name": "code:apiserver_request_total:increase30d",
    "note": "",
    "prod": "metric",
    "algorithm": "",
    "algo_params": null,
    "delay": 0,
    "severity": 0,
    "severities": [
      0
    ],
    "disabled": 1,
    "prom_for_duration": 0,
    "prom_ql": "sum by (cluster, code) (code_verb:apiserver_request_total:increase30d{verb=~\"LIST|GET\"})\n",
    "rule_config": {
      "algo_params": null,
      "inhibit": false,
      "prom_ql": "",
      "queries": [
        {
          "prom_ql": "sum by (cluster, code) (code_verb:apiserver_request_total:increase30d{verb=~\"LIST|GET\"})\n",
          "severity": 0
        }
      ],
      "severity": 0
    },
    "prom_eval_interval": 180,
    "enable_stime": "",
    "enable_stimes": [],
    "enable_etime": "",
    "enable_etimes": [],
    "enable_days_of_week": [],
    "enable_days_of_weeks": [
      []
    ],
    "enable_in_bg": 0,
    "notify_recovered": 0,
    "notify_channels": [],
    "notify_repeat_step": 0,
    "notify_max_number": 0,
    "recover_duration": 0,
    "callbacks": [],
    "runbook_url": "",
    "append_tags": [
      "verb=read"
    ],
    "annotations": null
  },
  {
    "cate": "prometheus",
    "datasource_ids": [
      0
    ],
    "name": "code_resource:apiserver_request_total:rate5m",
    "note": "",
    "prod": "metric",
    "algorithm": "",
    "algo_params": null,
    "delay": 0,
    "severity": 0,
    "severities": [
      0
    ],
    "disabled": 1,
    "prom_for_duration": 0,
    "prom_ql": "sum by (cluster,code,resource) (rate(apiserver_request_total{job=\"apiserver\",verb=~\"LIST|GET\"}[5m]))\n",
    "rule_config": {
      "algo_params": null,
      "inhibit": false,
      "prom_ql": "",
      "queries": [
        {
          "prom_ql": "sum by (cluster,code,resource) (rate(apiserver_request_total{job=\"apiserver\",verb=~\"LIST|GET\"}[5m]))\n",
          "severity": 0
        }
      ],
      "severity": 0
    },
    "prom_eval_interval": 180,
    "enable_stime": "",
    "enable_stimes": [],
    "enable_etime": "",
    "enable_etimes": [],
    "enable_days_of_week": [],
    "enable_days_of_weeks": [
      []
    ],
    "enable_in_bg": 0,
    "notify_recovered": 0,
    "notify_channels": [],
    "notify_repeat_step": 0,
    "notify_max_number": 0,
    "recover_duration": 0,
    "callbacks": [],
    "runbook_url": "",
    "append_tags": [
      "verb=read"
    ],
    "annotations": null
  },
  {
    "cate": "prometheus",
    "datasource_ids": [
      0
    ],
    "name": "code_verb:apiserver_request_total:increase1h",
    "note": "",
    "prod": "metric",
    "algorithm": "",
    "algo_params": null,
    "delay": 0,
    "severity": 0,
    "severities": [
      0
    ],
    "disabled": 1,
    "prom_for_duration": 0,
    "prom_ql": "sum by (cluster, code, verb) (increase(apiserver_request_total{job=\"apiserver\",verb=~\"LIST|GET|POST|PUT|PATCH|DELETE\",code=~\"2..\"}[1h]))\n",
    "rule_config": {
      "algo_params": null,
      "inhibit": false,
      "prom_ql": "",
      "queries": [
        {
          "prom_ql": "sum by (cluster, code, verb) (increase(apiserver_request_total{job=\"apiserver\",verb=~\"LIST|GET|POST|PUT|PATCH|DELETE\",code=~\"2..\"}[1h]))\n",
          "severity": 0
        }
      ],
      "severity": 0
    },
    "prom_eval_interval": 180,
    "enable_stime": "",
    "enable_stimes": [],
    "enable_etime": "",
    "enable_etimes": [],
    "enable_days_of_week": [],
    "enable_days_of_weeks": [
      []
    ],
    "enable_in_bg": 0,
    "notify_recovered": 0,
    "notify_channels": [],
    "notify_repeat_step": 0,
    "notify_max_number": 0,
    "recover_duration": 0,
    "callbacks": [],
    "runbook_url": "",
    "append_tags": [],
    "annotations": null
  },
  {
    "cate": "prometheus",
    "datasource_ids": [
      0
    ],
    "name": "code_verb:apiserver_request_total:increase30d",
    "note": "",
    "prod": "metric",
    "algorithm": "",
    "algo_params": null,
    "delay": 0,
    "severity": 0,
    "severities": [
      0
    ],
    "disabled": 1,
    "prom_for_duration": 0,
    "prom_ql": "avg_over_time(code_verb:apiserver_request_total:increase1h[30d]) * 24 * 30\n",
    "rule_config": {
      "algo_params": null,
      "inhibit": false,
      "prom_ql": "",
      "queries": [
        {
          "prom_ql": "avg_over_time(code_verb:apiserver_request_total:increase1h[30d]) * 24 * 30\n",
          "severity": 0
        }
      ],
      "severity": 0
    },
    "prom_eval_interval": 180,
    "enable_stime": "",
    "enable_stimes": [],
    "enable_etime": "",
    "enable_etimes": [],
    "enable_days_of_week": [],
    "enable_days_of_weeks": [
      []
    ],
    "enable_in_bg": 0,
    "notify_recovered": 0,
    "notify_channels": [],
    "notify_repeat_step": 0,
    "notify_max_number": 0,
    "recover_duration": 0,
    "callbacks": [],
    "runbook_url": "",
    "append_tags": [],
    "annotations": null
  },
  {
    "cate": "prometheus",
    "datasource_ids": [
      0
    ],
    "name": "CPUThrottlingHigh",
    "note": "{{ $value | humanizePercentage }} throttling of CPU in namespace {{ $labels.namespace }} for container {{ $labels.container }} in pod {{ $labels.pod }}.",
    "prod": "metric",
    "algorithm": "",
    "algo_params": null,
    "delay": 0,
    "severity": 3,
    "severities": [
      3
    ],
    "disabled": 1,
    "prom_for_duration": 900,
    "prom_ql": "sum(increase(container_cpu_cfs_throttled_periods_total{container!=\"\", }[5m])) by (container, pod, namespace)\n  /\nsum(increase(container_cpu_cfs_periods_total{}[5m])) by (container, pod, namespace)\n  > ( 25 / 100 )\n",
    "rule_config": {
      "algo_params": null,
      "inhibit": false,
      "prom_ql": "",
      "queries": [
        {
          "prom_ql": "sum(increase(container_cpu_cfs_throttled_periods_total{container!=\"\", }[5m])) by (container, pod, namespace)\n  /\nsum(increase(container_cpu_cfs_periods_total{}[5m])) by (container, pod, namespace)\n  > ( 25 / 100 )\n",
          "severity": 3
        }
      ],
      "severity": 0
    },
    "prom_eval_interval": 15,
    "enable_stime": "00:00",
    "enable_stimes": [
      "00:00"
    ],
    "enable_etime": "23:59",
    "enable_etimes": [
      "23:59"
    ],
    "enable_days_of_week": [
      "1",
      "2",
      "3",
      "4",
      "5",
      "6",
      "0"
    ],
    "enable_days_of_weeks": [
      [
        "1",
        "2",
        "3",
        "4",
        "5",
        "6",
        "0"
      ]
    ],
    "enable_in_bg": 0,
    "notify_recovered": 1,
    "notify_channels": [],
    "notify_repeat_step": 60,
    "notify_max_number": 0,
    "recover_duration": 0,
    "callbacks": [],
    "runbook_url": "",
    "append_tags": [],
    "annotations": null
  },
  {
    "cate": "prometheus",
    "datasource_ids": [
      0
    ],
    "name": "KubeAggregatedAPIDown",
    "note": "Kubernetes aggregated API {{ $labels.name }}/{{ $labels.namespace }} has been only {{ $value | humanize }}% available over the last 10m.",
    "prod": "metric",
    "algorithm": "",
    "algo_params": null,
    "delay": 0,
    "severity": 2,
    "severities": [
      2
    ],
    "disabled": 1,
    "prom_for_duration": 300,
    "prom_ql": "(1 - max by(name, namespace, cluster)(avg_over_time(aggregator_unavailable_apiservice{job=\"apiserver\"}[10m]))) * 100 < 85\n",
    "rule_config": {
      "algo_params": null,
      "inhibit": false,
      "prom_ql": "",
      "queries": [
        {
          "prom_ql": "(1 - max by(name, namespace, cluster)(avg_over_time(aggregator_unavailable_apiservice{job=\"apiserver\"}[10m]))) * 100 < 85\n",
          "severity": 2
        }
      ],
      "severity": 0
    },
    "prom_eval_interval": 15,
    "enable_stime": "00:00",
    "enable_stimes": [
      "00:00"
    ],
    "enable_etime": "23:59",
    "enable_etimes": [
      "23:59"
    ],
    "enable_days_of_week": [
      "1",
      "2",
      "3",
      "4",
      "5",
      "6",
      "0"
    ],
    "enable_days_of_weeks": [
      [
        "1",
        "2",
        "3",
        "4",
        "5",
        "6",
        "0"
      ]
    ],
    "enable_in_bg": 0,
    "notify_recovered": 1,
    "notify_channels": [],
    "notify_repeat_step": 60,
    "notify_max_number": 0,
    "recover_duration": 0,
    "callbacks": [],
    "runbook_url": "",
    "append_tags": [],
    "annotations": null
  },
  {
    "cate": "prometheus",
    "datasource_ids": [
      0
    ],
    "name": "KubeAggregatedAPIErrors",
    "note": "Kubernetes aggregated API {{ $labels.name }}/{{ $labels.namespace }} has reported errors. It has appeared unavailable {{ $value | humanize }} times averaged over the past 10m.",
    "prod": "metric",
    "algorithm": "",
    "algo_params": null,
    "delay": 0,
    "severity": 2,
    "severities": [
      2
    ],
    "disabled": 1,
    "prom_for_duration": 0,
    "prom_ql": "sum by(name, namespace, cluster)(increase(aggregator_unavailable_apiservice_total{job=\"apiserver\"}[10m])) > 4\n",
    "rule_config": {
      "algo_params": null,
      "inhibit": false,
      "prom_ql": "",
      "queries": [
        {
          "prom_ql": "sum by(name, namespace, cluster)(increase(aggregator_unavailable_apiservice_total{job=\"apiserver\"}[10m])) > 4\n",
          "severity": 2
        }
      ],
      "severity": 0
    },
    "prom_eval_interval": 15,
    "enable_stime": "00:00",
    "enable_stimes": [
      "00:00"
    ],
    "enable_etime": "23:59",
    "enable_etimes": [
      "23:59"
    ],
    "enable_days_of_week": [
      "1",
      "2",
      "3",
      "4",
      "5",
      "6",
      "0"
    ],
    "enable_days_of_weeks": [
      [
        "1",
        "2",
        "3",
        "4",
        "5",
        "6",
        "0"
      ]
    ],
    "enable_in_bg": 0,
    "notify_recovered": 1,
    "notify_channels": [],
    "notify_repeat_step": 60,
    "notify_max_number": 0,
    "recover_duration": 0,
    "callbacks": [],
    "runbook_url": "",
    "append_tags": [],
    "annotations": null
  },
  {
    "cate": "prometheus",
    "datasource_ids": [
      0
    ],
    "name": "KubeAPIDown",
    "note": "KubeAPI has disappeared from Prometheus target discovery.",
    "prod": "metric",
    "algorithm": "",
    "algo_params": null,
    "delay": 0,
    "severity": 1,
    "severities": [
      1
    ],
    "disabled": 1,
    "prom_for_duration": 900,
    "prom_ql": "absent(up{job=\"apiserver\"} == 1)\n",
    "rule_config": {
      "algo_params": null,
      "inhibit": false,
      "prom_ql": "",
      "queries": [
        {
          "prom_ql": "absent(up{job=\"apiserver\"} == 1)\n",
          "severity": 1
        }
      ],
      "severity": 0
    },
    "prom_eval_interval": 15,
    "enable_stime": "00:00",
    "enable_stimes": [
      "00:00"
    ],
    "enable_etime": "23:59",
    "enable_etimes": [
      "23:59"
    ],
    "enable_days_of_week": [
      "1",
      "2",
      "3",
      "4",
      "5",
      "6",
      "0"
    ],
    "enable_days_of_weeks": [
      [
        "1",
        "2",
        "3",
        "4",
        "5",
        "6",
        "0"
      ]
    ],
    "enable_in_bg": 0,
    "notify_recovered": 1,
    "notify_channels": [],
    "notify_repeat_step": 60,
    "notify_max_number": 0,
    "recover_duration": 0,
    "callbacks": [],
    "runbook_url": "",
    "append_tags": [],
    "annotations": null
  },
  {
    "cate": "prometheus",
    "datasource_ids": [
      0
    ],
    "name": "KubeAPIErrorBudgetBurn",
    "note": "The API server is burning too much error budget.",
    "prod": "metric",
    "algorithm": "",
    "algo_params": null,
    "delay": 0,
    "severity": 1,
    "severities": [
      1
    ],
    "disabled": 1,
    "prom_for_duration": 120,
    "prom_ql": "sum(apiserver_request:burnrate1h) > (14.40 * 0.01000)\nand\nsum(apiserver_request:burnrate5m) > (14.40 * 0.01000)\n",
    "rule_config": {
      "algo_params": null,
      "inhibit": false,
      "prom_ql": "",
      "queries": [
        {
          "prom_ql": "sum(apiserver_request:burnrate1h) > (14.40 * 0.01000)\nand\nsum(apiserver_request:burnrate5m) > (14.40 * 0.01000)\n",
          "severity": 1
        }
      ],
      "severity": 0
    },
    "prom_eval_interval": 15,
    "enable_stime": "00:00",
    "enable_stimes": [
      "00:00"
    ],
    "enable_etime": "23:59",
    "enable_etimes": [
      "23:59"
    ],
    "enable_days_of_week": [
      "1",
      "2",
      "3",
      "4",
      "5",
      "6",
      "0"
    ],
    "enable_days_of_weeks": [
      [
        "1",
        "2",
        "3",
        "4",
        "5",
        "6",
        "0"
      ]
    ],
    "enable_in_bg": 0,
    "notify_recovered": 1,
    "notify_channels": [],
    "notify_repeat_step": 60,
    "notify_max_number": 0,
    "recover_duration": 0,
    "callbacks": [],
    "runbook_url": "",
    "append_tags": [
      "long=1h",
      "short=5m"
    ],
    "annotations": null
  },
  {
    "cate": "prometheus",
    "datasource_ids": [
      0
    ],
    "name": "KubeAPITerminatedRequests",
    "note": "The kubernetes apiserver has terminated {{ $value | humanizePercentage }} of its incoming requests.",
    "prod": "metric",
    "algorithm": "",
    "algo_params": null,
    "delay": 0,
    "severity": 2,
    "severities": [
      2
    ],
    "disabled": 1,
    "prom_for_duration": 300,
    "prom_ql": "sum(rate(apiserver_request_terminations_total{job=\"apiserver\"}[10m]))  / (  sum(rate(apiserver_request_total{job=\"apiserver\"}[10m])) + sum(rate(apiserver_request_terminations_total{job=\"apiserver\"}[10m])) ) > 0.20\n",
    "rule_config": {
      "algo_params": null,
      "inhibit": false,
      "prom_ql": "",
      "queries": [
        {
          "prom_ql": "sum(rate(apiserver_request_terminations_total{job=\"apiserver\"}[10m]))  / (  sum(rate(apiserver_request_total{job=\"apiserver\"}[10m])) + sum(rate(apiserver_request_terminations_total{job=\"apiserver\"}[10m])) ) > 0.20\n",
          "severity": 2
        }
      ],
      "severity": 0
    },
    "prom_eval_interval": 15,
    "enable_stime": "00:00",
    "enable_stimes": [
      "00:00"
    ],
    "enable_etime": "23:59",
    "enable_etimes": [
      "23:59"
    ],
    "enable_days_of_week": [
      "1",
      "2",
      "3",
      "4",
      "5",
      "6",
      "0"
    ],
    "enable_days_of_weeks": [
      [
        "1",
        "2",
        "3",
        "4",
        "5",
        "6",
        "0"
      ]
    ],
    "enable_in_bg": 0,
    "notify_recovered": 1,
    "notify_channels": [],
    "notify_repeat_step": 60,
    "notify_max_number": 0,
    "recover_duration": 0,
    "callbacks": [],
    "runbook_url": "",
    "append_tags": [],
    "annotations": null
  },
  {
    "cate": "prometheus",
    "datasource_ids": [
      0
    ],
    "name": "KubeClientCertificateExpiration",
    "note": "A client certificate used to authenticate to kubernetes apiserver is expiring in less than 7.0 days.",
    "prod": "metric",
    "algorithm": "",
    "algo_params": null,
    "delay": 0,
    "severity": 2,
    "severities": [
      2
    ],
    "disabled": 1,
    "prom_for_duration": 300,
    "prom_ql": "apiserver_client_certificate_expiration_seconds_count{job=\"apiserver\"} > 0 and on(job) histogram_quantile(0.01, sum by (job, le) (rate(apiserver_client_certificate_expiration_seconds_bucket{job=\"apiserver\"}[5m]))) < 604800\n",
    "rule_config": {
      "algo_params": null,
      "inhibit": false,
      "prom_ql": "",
      "queries": [
        {
          "prom_ql": "apiserver_client_certificate_expiration_seconds_count{job=\"apiserver\"} > 0 and on(job) histogram_quantile(0.01, sum by (job, le) (rate(apiserver_client_certificate_expiration_seconds_bucket{job=\"apiserver\"}[5m]))) < 604800\n",
          "severity": 2
        }
      ],
      "severity": 0
    },
    "prom_eval_interval": 15,
    "enable_stime": "00:00",
    "enable_stimes": [
      "00:00"
    ],
    "enable_etime": "23:59",
    "enable_etimes": [
      "23:59"
    ],
    "enable_days_of_week": [
      "1",
      "2",
      "3",
      "4",
      "5",
      "6",
      "0"
    ],
    "enable_days_of_weeks": [
      [
        "1",
        "2",
        "3",
        "4",
        "5",
        "6",
        "0"
      ]
    ],
    "enable_in_bg": 0,
    "notify_recovered": 1,
    "notify_channels": [],
    "notify_repeat_step": 60,
    "notify_max_number": 0,
    "recover_duration": 0,
    "callbacks": [],
    "runbook_url": "",
    "append_tags": [],
    "annotations": null
  },
  {
    "cate": "prometheus",
    "datasource_ids": [
      0
    ],
    "name": "KubeClientErrors",
    "note": "Kubernetes API server client '{{ $labels.job }}/{{ $labels.instance }}' is experiencing {{ $value | humanizePercentage }} errors.'",
    "prod": "metric",
    "algorithm": "",
    "algo_params": null,
    "delay": 0,
    "severity": 2,
    "severities": [
      2
    ],
    "disabled": 1,
    "prom_for_duration": 900,
    "prom_ql": "(sum(rate(rest_client_requests_total{job=\"apiserver\",code=~\"5..\"}[5m])) by (cluster, instance, job, namespace)\n  /\nsum(rate(rest_client_requests_total{job=\"apiserver\"}[5m])) by (cluster, instance, job, namespace))\n> 0.01\n",
    "rule_config": {
      "algo_params": null,
      "inhibit": false,
      "prom_ql": "",
      "queries": [
        {
          "prom_ql": "(sum(rate(rest_client_requests_total{job=\"apiserver\",code=~\"5..\"}[5m])) by (cluster, instance, job, namespace)\n  /\nsum(rate(rest_client_requests_total{job=\"apiserver\"}[5m])) by (cluster, instance, job, namespace))\n> 0.01\n",
          "severity": 2
        }
      ],
      "severity": 0
    },
    "prom_eval_interval": 15,
    "enable_stime": "00:00",
    "enable_stimes": [
      "00:00"
    ],
    "enable_etime": "23:59",
    "enable_etimes": [
      "23:59"
    ],
    "enable_days_of_week": [
      "1",
      "2",
      "3",
      "4",
      "5",
      "6",
      "0"
    ],
    "enable_days_of_weeks": [
      [
        "1",
        "2",
        "3",
        "4",
        "5",
        "6",
        "0"
      ]
    ],
    "enable_in_bg": 0,
    "notify_recovered": 1,
    "notify_channels": [],
    "notify_repeat_step": 60,
    "notify_max_number": 0,
    "recover_duration": 0,
    "callbacks": [],
    "runbook_url": "",
    "append_tags": [],
    "annotations": null
  },
  {
    "cate": "prometheus",
    "datasource_ids": [
      0
    ],
    "name": "KubeContainerWaiting",
    "note": "pod/{{ $labels.pod }} in namespace {{ $labels.namespace }} on container {{ $labels.container}} has been in waiting state for longer than 1 hour.",
    "prod": "metric",
    "algorithm": "",
    "algo_params": null,
    "delay": 0,
    "severity": 2,
    "severities": [
      2
    ],
    "disabled": 1,
    "prom_for_duration": 3600,
    "prom_ql": "sum by (namespace, pod, container, cluster) (kube_pod_container_status_waiting_reason{job=\"kube-state-metrics\"}) > 0\n",
    "rule_config": {
      "algo_params": null,
      "inhibit": false,
      "prom_ql": "",
      "queries": [
        {
          "prom_ql": "sum by (namespace, pod, container, cluster) (kube_pod_container_status_waiting_reason{job=\"kube-state-metrics\"}) > 0\n",
          "severity": 2
        }
      ],
      "severity": 0
    },
    "prom_eval_interval": 15,
    "enable_stime": "00:00",
    "enable_stimes": [
      "00:00"
    ],
    "enable_etime": "23:59",
    "enable_etimes": [
      "23:59"
    ],
    "enable_days_of_week": [
      "1",
      "2",
      "3",
      "4",
      "5",
      "6",
      "0"
    ],
    "enable_days_of_weeks": [
      [
        "1",
        "2",
        "3",
        "4",
        "5",
        "6",
        "0"
      ]
    ],
    "enable_in_bg": 0,
    "notify_recovered": 1,
    "notify_channels": [],
    "notify_repeat_step": 60,
    "notify_max_number": 0,
    "recover_duration": 0,
    "callbacks": [],
    "runbook_url": "",
    "append_tags": [],
    "annotations": null
  },
  {
    "cate": "prometheus",
    "datasource_ids": [
      0
    ],
    "name": "KubeControllerManagerDown",
    "note": "KubeControllerManager has disappeared from Prometheus target discovery.",
    "prod": "metric",
    "algorithm": "",
    "algo_params": null,
    "delay": 0,
    "severity": 1,
    "severities": [
      1
    ],
    "disabled": 1,
    "prom_for_duration": 900,
    "prom_ql": "absent(up{job=\"kube-controller-manager\"} == 1)\n",
    "rule_config": {
      "algo_params": null,
      "inhibit": false,
      "prom_ql": "",
      "queries": [
        {
          "prom_ql": "absent(up{job=\"kube-controller-manager\"} == 1)\n",
          "severity": 1
        }
      ],
      "severity": 0
    },
    "prom_eval_interval": 15,
    "enable_stime": "00:00",
    "enable_stimes": [
      "00:00"
    ],
    "enable_etime": "23:59",
    "enable_etimes": [
      "23:59"
    ],
    "enable_days_of_week": [
      "1",
      "2",
      "3",
      "4",
      "5",
      "6",
      "0"
    ],
    "enable_days_of_weeks": [
      [
        "1",
        "2",
        "3",
        "4",
        "5",
        "6",
        "0"
      ]
    ],
    "enable_in_bg": 0,
    "notify_recovered": 1,
    "notify_channels": [],
    "notify_repeat_step": 60,
    "notify_max_number": 0,
    "recover_duration": 0,
    "callbacks": [],
    "runbook_url": "",
    "append_tags": [],
    "annotations": null
  },
  {
    "cate": "prometheus",
    "datasource_ids": [
      0
    ],
    "name": "KubeCPUOvercommit",
    "note": "Cluster {{ $labels.cluster }} has overcommitted CPU resource requests for Pods by {{ $value }} CPU shares and cannot tolerate node failure.",
    "prod": "metric",
    "algorithm": "",
    "algo_params": null,
    "delay": 0,
    "severity": 2,
    "severities": [
      2
    ],
    "disabled": 1,
    "prom_for_duration": 600,
    "prom_ql": "sum(namespace_cpu:kube_pod_container_resource_requests:sum{job=\"kube-state-metrics\",}) by (cluster) - (sum(kube_node_status_allocatable{job=\"kube-state-metrics\",resource=\"cpu\"}) by (cluster) - max(kube_node_status_allocatable{job=\"kube-state-metrics\",resource=\"cpu\"}) by (cluster)) > 0\nand\n(sum(kube_node_status_allocatable{job=\"kube-state-metrics\",resource=\"cpu\"}) by (cluster) - max(kube_node_status_allocatable{job=\"kube-state-metrics\",resource=\"cpu\"}) by (cluster)) > 0\n",
    "rule_config": {
      "algo_params": null,
      "inhibit": false,
      "prom_ql": "",
      "queries": [
        {
          "prom_ql": "sum(namespace_cpu:kube_pod_container_resource_requests:sum{job=\"kube-state-metrics\",}) by (cluster) - (sum(kube_node_status_allocatable{job=\"kube-state-metrics\",resource=\"cpu\"}) by (cluster) - max(kube_node_status_allocatable{job=\"kube-state-metrics\",resource=\"cpu\"}) by (cluster)) > 0\nand\n(sum(kube_node_status_allocatable{job=\"kube-state-metrics\",resource=\"cpu\"}) by (cluster) - max(kube_node_status_allocatable{job=\"kube-state-metrics\",resource=\"cpu\"}) by (cluster)) > 0\n",
          "severity": 2
        }
      ],
      "severity": 0
    },
    "prom_eval_interval": 15,
    "enable_stime": "00:00",
    "enable_stimes": [
      "00:00"
    ],
    "enable_etime": "23:59",
    "enable_etimes": [
      "23:59"
    ],
    "enable_days_of_week": [
      "1",
      "2",
      "3",
      "4",
      "5",
      "6",
      "0"
    ],
    "enable_days_of_weeks": [
      [
        "1",
        "2",
        "3",
        "4",
        "5",
        "6",
        "0"
      ]
    ],
    "enable_in_bg": 0,
    "notify_recovered": 1,
    "notify_channels": [],
    "notify_repeat_step": 60,
    "notify_max_number": 0,
    "recover_duration": 0,
    "callbacks": [],
    "runbook_url": "",
    "append_tags": [],
    "annotations": null
  },
  {
    "cate": "prometheus",
    "datasource_ids": [
      0
    ],
    "name": "KubeCPUQuotaOvercommit",
    "note": "Cluster {{ $labels.cluster }}  has overcommitted CPU resource requests for Namespaces.",
    "prod": "metric",
    "algorithm": "",
    "algo_params": null,
    "delay": 0,
    "severity": 2,
    "severities": [
      2
    ],
    "disabled": 1,
    "prom_for_duration": 300,
    "prom_ql": "sum(min without(resource) (kube_resourcequota{job=\"kube-state-metrics\", type=\"hard\", resource=~\"(cpu|requests.cpu)\"})) by (cluster)\n  /\nsum(kube_node_status_allocatable{resource=\"cpu\", job=\"kube-state-metrics\"}) by (cluster)\n  > 1.5\n",
    "rule_config": {
      "algo_params": null,
      "inhibit": false,
      "prom_ql": "",
      "queries": [
        {
          "prom_ql": "sum(min without(resource) (kube_resourcequota{job=\"kube-state-metrics\", type=\"hard\", resource=~\"(cpu|requests.cpu)\"})) by (cluster)\n  /\nsum(kube_node_status_allocatable{resource=\"cpu\", job=\"kube-state-metrics\"}) by (cluster)\n  > 1.5\n",
          "severity": 2
        }
      ],
      "severity": 0
    },
    "prom_eval_interval": 15,
    "enable_stime": "00:00",
    "enable_stimes": [
      "00:00"
    ],
    "enable_etime": "23:59",
    "enable_etimes": [
      "23:59"
    ],
    "enable_days_of_week": [
      "1",
      "2",
      "3",
      "4",
      "5",
      "6",
      "0"
    ],
    "enable_days_of_weeks": [
      [
        "1",
        "2",
        "3",
        "4",
        "5",
        "6",
        "0"
      ]
    ],
    "enable_in_bg": 0,
    "notify_recovered": 1,
    "notify_channels": [],
    "notify_repeat_step": 60,
    "notify_max_number": 0,
    "recover_duration": 0,
    "callbacks": [],
    "runbook_url": "",
    "append_tags": [],
    "annotations": null
  },
  {
    "cate": "prometheus",
    "datasource_ids": [
      0
    ],
    "name": "KubeDaemonSetMisScheduled",
    "note": "{{ $value }} Pods of DaemonSet {{ $labels.namespace }}/{{ $labels.daemonset }} are running where they are not supposed to run.",
    "prod": "metric",
    "algorithm": "",
    "algo_params": null,
    "delay": 0,
    "severity": 2,
    "severities": [
      2
    ],
    "disabled": 1,
    "prom_for_duration": 900,
    "prom_ql": "kube_daemonset_status_number_misscheduled{job=\"kube-state-metrics\"} > 0\n",
    "rule_config": {
      "algo_params": null,
      "inhibit": false,
      "prom_ql": "",
      "queries": [
        {
          "prom_ql": "kube_daemonset_status_number_misscheduled{job=\"kube-state-metrics\"} > 0\n",
          "severity": 2
        }
      ],
      "severity": 0
    },
    "prom_eval_interval": 15,
    "enable_stime": "00:00",
    "enable_stimes": [
      "00:00"
    ],
    "enable_etime": "23:59",
    "enable_etimes": [
      "23:59"
    ],
    "enable_days_of_week": [
      "1",
      "2",
      "3",
      "4",
      "5",
      "6",
      "0"
    ],
    "enable_days_of_weeks": [
      [
        "1",
        "2",
        "3",
        "4",
        "5",
        "6",
        "0"
      ]
    ],
    "enable_in_bg": 0,
    "notify_recovered": 1,
    "notify_channels": [],
    "notify_repeat_step": 60,
    "notify_max_number": 0,
    "recover_duration": 0,
    "callbacks": [],
    "runbook_url": "",
    "append_tags": [],
    "annotations": null
  },
  {
    "cate": "prometheus",
    "datasource_ids": [
      0
    ],
    "name": "KubeDaemonSetNotScheduled",
    "note": "{{ $value }} Pods of DaemonSet {{ $labels.namespace }}/{{ $labels.daemonset }} are not scheduled.",
    "prod": "metric",
    "algorithm": "",
    "algo_params": null,
    "delay": 0,
    "severity": 2,
    "severities": [
      2
    ],
    "disabled": 1,
    "prom_for_duration": 600,
    "prom_ql": "kube_daemonset_status_desired_number_scheduled{job=\"kube-state-metrics\"}\n  -\nkube_daemonset_status_current_number_scheduled{job=\"kube-state-metrics\"} > 0\n",
    "rule_config": {
      "algo_params": null,
      "inhibit": false,
      "prom_ql": "",
      "queries": [
        {
          "prom_ql": "kube_daemonset_status_desired_number_scheduled{job=\"kube-state-metrics\"}\n  -\nkube_daemonset_status_current_number_scheduled{job=\"kube-state-metrics\"} > 0\n",
          "severity": 2
        }
      ],
      "severity": 0
    },
    "prom_eval_interval": 15,
    "enable_stime": "00:00",
    "enable_stimes": [
      "00:00"
    ],
    "enable_etime": "23:59",
    "enable_etimes": [
      "23:59"
    ],
    "enable_days_of_week": [
      "1",
      "2",
      "3",
      "4",
      "5",
      "6",
      "0"
    ],
    "enable_days_of_weeks": [
      [
        "1",
        "2",
        "3",
        "4",
        "5",
        "6",
        "0"
      ]
    ],
    "enable_in_bg": 0,
    "notify_recovered": 1,
    "notify_channels": [],
    "notify_repeat_step": 60,
    "notify_max_number": 0,
    "recover_duration": 0,
    "callbacks": [],
    "runbook_url": "",
    "append_tags": [],
    "annotations": null
  },
  {
    "cate": "prometheus",
    "datasource_ids": [
      0
    ],
    "name": "KubeDaemonSetRolloutStuck",
    "note": "DaemonSet {{ $labels.namespace }}/{{ $labels.daemonset }} has not finished or progressed for at least 15 minutes.",
    "prod": "metric",
    "algorithm": "",
    "algo_params": null,
    "delay": 0,
    "severity": 2,
    "severities": [
      2
    ],
    "disabled": 1,
    "prom_for_duration": 900,
    "prom_ql": "(\n  (\n    kube_daemonset_status_current_number_scheduled{job=\"kube-state-metrics\"}\n      !=\n    kube_daemonset_status_desired_number_scheduled{job=\"kube-state-metrics\"}\n  ) or (\n    kube_daemonset_status_number_misscheduled{job=\"kube-state-metrics\"}\n      !=\n    0\n  ) or (\n    kube_daemonset_status_updated_number_scheduled{job=\"kube-state-metrics\"}\n      !=\n    kube_daemonset_status_desired_number_scheduled{job=\"kube-state-metrics\"}\n  ) or (\n    kube_daemonset_status_number_available{job=\"kube-state-metrics\"}\n      !=\n    kube_daemonset_status_desired_number_scheduled{job=\"kube-state-metrics\"}\n  )\n) and (\n  changes(kube_daemonset_status_updated_number_scheduled{job=\"kube-state-metrics\"}[5m])\n    ==\n  0\n)\n",
    "rule_config": {
      "algo_params": null,
      "inhibit": false,
      "prom_ql": "",
      "queries": [
        {
          "prom_ql": "(\n  (\n    kube_daemonset_status_current_number_scheduled{job=\"kube-state-metrics\"}\n      !=\n    kube_daemonset_status_desired_number_scheduled{job=\"kube-state-metrics\"}\n  ) or (\n    kube_daemonset_status_number_misscheduled{job=\"kube-state-metrics\"}\n      !=\n    0\n  ) or (\n    kube_daemonset_status_updated_number_scheduled{job=\"kube-state-metrics\"}\n      !=\n    kube_daemonset_status_desired_number_scheduled{job=\"kube-state-metrics\"}\n  ) or (\n    kube_daemonset_status_number_available{job=\"kube-state-metrics\"}\n      !=\n    kube_daemonset_status_desired_number_scheduled{job=\"kube-state-metrics\"}\n  )\n) and (\n  changes(kube_daemonset_status_updated_number_scheduled{job=\"kube-state-metrics\"}[5m])\n    ==\n  0\n)\n",
          "severity": 2
        }
      ],
      "severity": 0
    },
    "prom_eval_interval": 15,
    "enable_stime": "00:00",
    "enable_stimes": [
      "00:00"
    ],
    "enable_etime": "23:59",
    "enable_etimes": [
      "23:59"
    ],
    "enable_days_of_week": [
      "1",
      "2",
      "3",
      "4",
      "5",
      "6",
      "0"
    ],
    "enable_days_of_weeks": [
      [
        "1",
        "2",
        "3",
        "4",
        "5",
        "6",
        "0"
      ]
    ],
    "enable_in_bg": 0,
    "notify_recovered": 1,
    "notify_channels": [],
    "notify_repeat_step": 60,
    "notify_max_number": 0,
    "recover_duration": 0,
    "callbacks": [],
    "runbook_url": "",
    "append_tags": [],
    "annotations": null
  },
  {
    "cate": "prometheus",
    "datasource_ids": [
      0
    ],
    "name": "KubeDeploymentGenerationMismatch",
    "note": "Deployment generation for {{ $labels.namespace }}/{{ $labels.deployment }} does not match, this indicates that the Deployment has failed but has not been rolled back.",
    "prod": "metric",
    "algorithm": "",
    "algo_params": null,
    "delay": 0,
    "severity": 2,
    "severities": [
      2
    ],
    "disabled": 1,
    "prom_for_duration": 900,
    "prom_ql": "kube_deployment_status_observed_generation{job=\"kube-state-metrics\"}\n  !=\nkube_deployment_metadata_generation{job=\"kube-state-metrics\"}\n",
    "rule_config": {
      "algo_params": null,
      "inhibit": false,
      "prom_ql": "",
      "queries": [
        {
          "prom_ql": "kube_deployment_status_observed_generation{job=\"kube-state-metrics\"}\n  !=\nkube_deployment_metadata_generation{job=\"kube-state-metrics\"}\n",
          "severity": 2
        }
      ],
      "severity": 0
    },
    "prom_eval_interval": 15,
    "enable_stime": "00:00",
    "enable_stimes": [
      "00:00"
    ],
    "enable_etime": "23:59",
    "enable_etimes": [
      "23:59"
    ],
    "enable_days_of_week": [
      "1",
      "2",
      "3",
      "4",
      "5",
      "6",
      "0"
    ],
    "enable_days_of_weeks": [
      [
        "1",
        "2",
        "3",
        "4",
        "5",
        "6",
        "0"
      ]
    ],
    "enable_in_bg": 0,
    "notify_recovered": 1,
    "notify_channels": [],
    "notify_repeat_step": 60,
    "notify_max_number": 0,
    "recover_duration": 0,
    "callbacks": [],
    "runbook_url": "",
    "append_tags": [],
    "annotations": null
  },
  {
    "cate": "prometheus",
    "datasource_ids": [
      0
    ],
    "name": "KubeDeploymentReplicasMismatch",
    "note": "Deployment {{ $labels.namespace }}/{{ $labels.deployment }} has not matched the expected number of replicas for longer than 15 minutes.",
    "prod": "metric",
    "algorithm": "",
    "algo_params": null,
    "delay": 0,
    "severity": 2,
    "severities": [
      2
    ],
    "disabled": 1,
    "prom_for_duration": 900,
    "prom_ql": "(\n  kube_deployment_spec_replicas{job=\"kube-state-metrics\"}\n    >\n  kube_deployment_status_replicas_available{job=\"kube-state-metrics\"}\n) and (\n  changes(kube_deployment_status_replicas_updated{job=\"kube-state-metrics\"}[10m])\n    ==\n  0\n)\n",
    "rule_config": {
      "algo_params": null,
      "inhibit": false,
      "prom_ql": "",
      "queries": [
        {
          "prom_ql": "(\n  kube_deployment_spec_replicas{job=\"kube-state-metrics\"}\n    >\n  kube_deployment_status_replicas_available{job=\"kube-state-metrics\"}\n) and (\n  changes(kube_deployment_status_replicas_updated{job=\"kube-state-metrics\"}[10m])\n    ==\n  0\n)\n",
          "severity": 2
        }
      ],
      "severity": 0
    },
    "prom_eval_interval": 15,
    "enable_stime": "00:00",
    "enable_stimes": [
      "00:00"
    ],
    "enable_etime": "23:59",
    "enable_etimes": [
      "23:59"
    ],
    "enable_days_of_week": [
      "1",
      "2",
      "3",
      "4",
      "5",
      "6",
      "0"
    ],
    "enable_days_of_weeks": [
      [
        "1",
        "2",
        "3",
        "4",
        "5",
        "6",
        "0"
      ]
    ],
    "enable_in_bg": 0,
    "notify_recovered": 1,
    "notify_channels": [],
    "notify_repeat_step": 60,
    "notify_max_number": 0,
    "recover_duration": 0,
    "callbacks": [],
    "runbook_url": "",
    "append_tags": [],
    "annotations": null
  },
  {
    "cate": "prometheus",
    "datasource_ids": [
      0
    ],
    "name": "KubeDeploymentRolloutStuck",
    "note": "Rollout of deployment {{ $labels.namespace }}/{{ $labels.deployment }} is not progressing for longer than 15 minutes.",
    "prod": "metric",
    "algorithm": "",
    "algo_params": null,
    "delay": 0,
    "severity": 2,
    "severities": [
      2
    ],
    "disabled": 1,
    "prom_for_duration": 900,
    "prom_ql": "kube_deployment_status_condition{condition=\"Progressing\", status=\"false\",job=\"kube-state-metrics\"}\n!= 0\n",
    "rule_config": {
      "algo_params": null,
      "inhibit": false,
      "prom_ql": "",
      "queries": [
        {
          "prom_ql": "kube_deployment_status_condition{condition=\"Progressing\", status=\"false\",job=\"kube-state-metrics\"}\n!= 0\n",
          "severity": 2
        }
      ],
      "severity": 0
    },
    "prom_eval_interval": 15,
    "enable_stime": "00:00",
    "enable_stimes": [
      "00:00"
    ],
    "enable_etime": "23:59",
    "enable_etimes": [
      "23:59"
    ],
    "enable_days_of_week": [
      "1",
      "2",
      "3",
      "4",
      "5",
      "6",
      "0"
    ],
    "enable_days_of_weeks": [
      [
        "1",
        "2",
        "3",
        "4",
        "5",
        "6",
        "0"
      ]
    ],
    "enable_in_bg": 0,
    "notify_recovered": 1,
    "notify_channels": [],
    "notify_repeat_step": 60,
    "notify_max_number": 0,
    "recover_duration": 0,
    "callbacks": [],
    "runbook_url": "",
    "append_tags": [],
    "annotations": null
  },
  {
    "cate": "prometheus",
    "datasource_ids": [
      0
    ],
    "name": "KubeHpaMaxedOut",
    "note": "HPA {{ $labels.namespace }}/{{ $labels.horizontalpodautoscaler  }} has been running at max replicas for longer than 15 minutes.",
    "prod": "metric",
    "algorithm": "",
    "algo_params": null,
    "delay": 0,
    "severity": 2,
    "severities": [
      2
    ],
    "disabled": 1,
    "prom_for_duration": 900,
    "prom_ql": "kube_horizontalpodautoscaler_status_current_replicas{job=\"kube-state-metrics\"}\n  ==\nkube_horizontalpodautoscaler_spec_max_replicas{job=\"kube-state-metrics\"}\n",
    "rule_config": {
      "algo_params": null,
      "inhibit": false,
      "prom_ql": "",
      "queries": [
        {
          "prom_ql": "kube_horizontalpodautoscaler_status_current_replicas{job=\"kube-state-metrics\"}\n  ==\nkube_horizontalpodautoscaler_spec_max_replicas{job=\"kube-state-metrics\"}\n",
          "severity": 2
        }
      ],
      "severity": 0
    },
    "prom_eval_interval": 15,
    "enable_stime": "00:00",
    "enable_stimes": [
      "00:00"
    ],
    "enable_etime": "23:59",
    "enable_etimes": [
      "23:59"
    ],
    "enable_days_of_week": [
      "1",
      "2",
      "3",
      "4",
      "5",
      "6",
      "0"
    ],
    "enable_days_of_weeks": [
      [
        "1",
        "2",
        "3",
        "4",
        "5",
        "6",
        "0"
      ]
    ],
    "enable_in_bg": 0,
    "notify_recovered": 1,
    "notify_channels": [],
    "notify_repeat_step": 60,
    "notify_max_number": 0,
    "recover_duration": 0,
    "callbacks": [],
    "runbook_url": "",
    "append_tags": [],
    "annotations": null
  },
  {
    "cate": "prometheus",
    "datasource_ids": [
      0
    ],
    "name": "KubeHpaReplicasMismatch",
    "note": "HPA {{ $labels.namespace }}/{{ $labels.horizontalpodautoscaler  }} has not matched the desired number of replicas for longer than 15 minutes.",
    "prod": "metric",
    "algorithm": "",
    "algo_params": null,
    "delay": 0,
    "severity": 2,
    "severities": [
      2
    ],
    "disabled": 1,
    "prom_for_duration": 900,
    "prom_ql": "(kube_horizontalpodautoscaler_status_desired_replicas{job=\"kube-state-metrics\"}\n  !=\nkube_horizontalpodautoscaler_status_current_replicas{job=\"kube-state-metrics\"})\n  and\n(kube_horizontalpodautoscaler_status_current_replicas{job=\"kube-state-metrics\"}\n  >\nkube_horizontalpodautoscaler_spec_min_replicas{job=\"kube-state-metrics\"})\n  and\n(kube_horizontalpodautoscaler_status_current_replicas{job=\"kube-state-metrics\"}\n  <\nkube_horizontalpodautoscaler_spec_max_replicas{job=\"kube-state-metrics\"})\n  and\nchanges(kube_horizontalpodautoscaler_status_current_replicas{job=\"kube-state-metrics\"}[15m]) == 0\n",
    "rule_config": {
      "algo_params": null,
      "inhibit": false,
      "prom_ql": "",
      "queries": [
        {
          "prom_ql": "(kube_horizontalpodautoscaler_status_desired_replicas{job=\"kube-state-metrics\"}\n  !=\nkube_horizontalpodautoscaler_status_current_replicas{job=\"kube-state-metrics\"})\n  and\n(kube_horizontalpodautoscaler_status_current_replicas{job=\"kube-state-metrics\"}\n  >\nkube_horizontalpodautoscaler_spec_min_replicas{job=\"kube-state-metrics\"})\n  and\n(kube_horizontalpodautoscaler_status_current_replicas{job=\"kube-state-metrics\"}\n  <\nkube_horizontalpodautoscaler_spec_max_replicas{job=\"kube-state-metrics\"})\n  and\nchanges(kube_horizontalpodautoscaler_status_current_replicas{job=\"kube-state-metrics\"}[15m]) == 0\n",
          "severity": 2
        }
      ],
      "severity": 0
    },
    "prom_eval_interval": 15,
    "enable_stime": "00:00",
    "enable_stimes": [
      "00:00"
    ],
    "enable_etime": "23:59",
    "enable_etimes": [
      "23:59"
    ],
    "enable_days_of_week": [
      "1",
      "2",
      "3",
      "4",
      "5",
      "6",
      "0"
    ],
    "enable_days_of_weeks": [
      [
        "1",
        "2",
        "3",
        "4",
        "5",
        "6",
        "0"
      ]
    ],
    "enable_in_bg": 0,
    "notify_recovered": 1,
    "notify_channels": [],
    "notify_repeat_step": 60,
    "notify_max_number": 0,
    "recover_duration": 0,
    "callbacks": [],
    "runbook_url": "",
    "append_tags": [],
    "annotations": null
  },
  {
    "cate": "prometheus",
    "datasource_ids": [
      0
    ],
    "name": "KubeJobFailed",
    "note": "Job {{ $labels.namespace }}/{{ $labels.job_name }} failed to complete. Removing failed job after investigation should clear this alert.",
    "prod": "metric",
    "algorithm": "",
    "algo_params": null,
    "delay": 0,
    "severity": 2,
    "severities": [
      2
    ],
    "disabled": 1,
    "prom_for_duration": 900,
    "prom_ql": "kube_job_failed{job=\"kube-state-metrics\"}  > 0\n",
    "rule_config": {
      "algo_params": null,
      "inhibit": false,
      "prom_ql": "",
      "queries": [
        {
          "prom_ql": "kube_job_failed{job=\"kube-state-metrics\"}  > 0\n",
          "severity": 2
        }
      ],
      "severity": 0
    },
    "prom_eval_interval": 15,
    "enable_stime": "00:00",
    "enable_stimes": [
      "00:00"
    ],
    "enable_etime": "23:59",
    "enable_etimes": [
      "23:59"
    ],
    "enable_days_of_week": [
      "1",
      "2",
      "3",
      "4",
      "5",
      "6",
      "0"
    ],
    "enable_days_of_weeks": [
      [
        "1",
        "2",
        "3",
        "4",
        "5",
        "6",
        "0"
      ]
    ],
    "enable_in_bg": 0,
    "notify_recovered": 1,
    "notify_channels": [],
    "notify_repeat_step": 60,
    "notify_max_number": 0,
    "recover_duration": 0,
    "callbacks": [],
    "runbook_url": "",
    "append_tags": [],
    "annotations": null
  },
  {
    "cate": "prometheus",
    "datasource_ids": [
      0
    ],
    "name": "KubeJobNotCompleted",
    "note": "Job {{ $labels.namespace }}/{{ $labels.job_name }} is taking more than {{ \"43200\" | humanizeDuration }} to complete.",
    "prod": "metric",
    "algorithm": "",
    "algo_params": null,
    "delay": 0,
    "severity": 2,
    "severities": [
      2
    ],
    "disabled": 1,
    "prom_for_duration": 0,
    "prom_ql": "time() - max by(namespace, job_name, cluster) (kube_job_status_start_time{job=\"kube-state-metrics\"}\n  and\nkube_job_status_active{job=\"kube-state-metrics\"} > 0) > 43200\n",
    "rule_config": {
      "algo_params": null,
      "inhibit": false,
      "prom_ql": "",
      "queries": [
        {
          "prom_ql": "time() - max by(namespace, job_name, cluster) (kube_job_status_start_time{job=\"kube-state-metrics\"}\n  and\nkube_job_status_active{job=\"kube-state-metrics\"} > 0) > 43200\n",
          "severity": 2
        }
      ],
      "severity": 0
    },
    "prom_eval_interval": 15,
    "enable_stime": "00:00",
    "enable_stimes": [
      "00:00"
    ],
    "enable_etime": "23:59",
    "enable_etimes": [
      "23:59"
    ],
    "enable_days_of_week": [
      "1",
      "2",
      "3",
      "4",
      "5",
      "6",
      "0"
    ],
    "enable_days_of_weeks": [
      [
        "1",
        "2",
        "3",
        "4",
        "5",
        "6",
        "0"
      ]
    ],
    "enable_in_bg": 0,
    "notify_recovered": 1,
    "notify_channels": [],
    "notify_repeat_step": 60,
    "notify_max_number": 0,
    "recover_duration": 0,
    "callbacks": [],
    "runbook_url": "",
    "append_tags": [],
    "annotations": null
  },
  {
    "cate": "prometheus",
    "datasource_ids": [
      0
    ],
    "name": "KubeletClientCertificateExpiration",
    "note": "Client certificate for Kubelet on node {{ $labels.node }} expires in {{ $value | humanizeDuration }}.",
    "prod": "metric",
    "algorithm": "",
    "algo_params": null,
    "delay": 0,
    "severity": 2,
    "severities": [
      2
    ],
    "disabled": 1,
    "prom_for_duration": 0,
    "prom_ql": "kubelet_certificate_manager_client_ttl_seconds < 604800\n",
    "rule_config": {
      "algo_params": null,
      "inhibit": false,
      "prom_ql": "",
      "queries": [
        {
          "prom_ql": "kubelet_certificate_manager_client_ttl_seconds < 604800\n",
          "severity": 2
        }
      ],
      "severity": 0
    },
    "prom_eval_interval": 15,
    "enable_stime": "00:00",
    "enable_stimes": [
      "00:00"
    ],
    "enable_etime": "23:59",
    "enable_etimes": [
      "23:59"
    ],
    "enable_days_of_week": [
      "1",
      "2",
      "3",
      "4",
      "5",
      "6",
      "0"
    ],
    "enable_days_of_weeks": [
      [
        "1",
        "2",
        "3",
        "4",
        "5",
        "6",
        "0"
      ]
    ],
    "enable_in_bg": 0,
    "notify_recovered": 1,
    "notify_channels": [],
    "notify_repeat_step": 60,
    "notify_max_number": 0,
    "recover_duration": 0,
    "callbacks": [],
    "runbook_url": "",
    "append_tags": [],
    "annotations": null
  },
  {
    "cate": "prometheus",
    "datasource_ids": [
      0
    ],
    "name": "KubeletClientCertificateRenewalErrors",
    "note": "Kubelet on node {{ $labels.node }} has failed to renew its client certificate ({{ $value | humanize }} errors in the last 5 minutes).",
    "prod": "metric",
    "algorithm": "",
    "algo_params": null,
    "delay": 0,
    "severity": 2,
    "severities": [
      2
    ],
    "disabled": 1,
    "prom_for_duration": 900,
    "prom_ql": "increase(kubelet_certificate_manager_client_expiration_renew_errors[5m]) > 0\n",
    "rule_config": {
      "algo_params": null,
      "inhibit": false,
      "prom_ql": "",
      "queries": [
        {
          "prom_ql": "increase(kubelet_certificate_manager_client_expiration_renew_errors[5m]) > 0\n",
          "severity": 2
        }
      ],
      "severity": 0
    },
    "prom_eval_interval": 15,
    "enable_stime": "00:00",
    "enable_stimes": [
      "00:00"
    ],
    "enable_etime": "23:59",
    "enable_etimes": [
      "23:59"
    ],
    "enable_days_of_week": [
      "1",
      "2",
      "3",
      "4",
      "5",
      "6",
      "0"
    ],
    "enable_days_of_weeks": [
      [
        "1",
        "2",
        "3",
        "4",
        "5",
        "6",
        "0"
      ]
    ],
    "enable_in_bg": 0,
    "notify_recovered": 1,
    "notify_channels": [],
    "notify_repeat_step": 60,
    "notify_max_number": 0,
    "recover_duration": 0,
    "callbacks": [],
    "runbook_url": "",
    "append_tags": [],
    "annotations": null
  },
  {
    "cate": "prometheus",
    "datasource_ids": [
      0
    ],
    "name": "KubeletDown",
    "note": "Kubelet has disappeared from Prometheus target discovery.",
    "prod": "metric",
    "algorithm": "",
    "algo_params": null,
    "delay": 0,
    "severity": 1,
    "severities": [
      1
    ],
    "disabled": 1,
    "prom_for_duration": 900,
    "prom_ql": "absent(up{job=\"kubelet\", metrics_path=\"/metrics\"} == 1)\n",
    "rule_config": {
      "algo_params": null,
      "inhibit": false,
      "prom_ql": "",
      "queries": [
        {
          "prom_ql": "absent(up{job=\"kubelet\", metrics_path=\"/metrics\"} == 1)\n",
          "severity": 1
        }
      ],
      "severity": 0
    },
    "prom_eval_interval": 15,
    "enable_stime": "00:00",
    "enable_stimes": [
      "00:00"
    ],
    "enable_etime": "23:59",
    "enable_etimes": [
      "23:59"
    ],
    "enable_days_of_week": [
      "1",
      "2",
      "3",
      "4",
      "5",
      "6",
      "0"
    ],
    "enable_days_of_weeks": [
      [
        "1",
        "2",
        "3",
        "4",
        "5",
        "6",
        "0"
      ]
    ],
    "enable_in_bg": 0,
    "notify_recovered": 1,
    "notify_channels": [],
    "notify_repeat_step": 60,
    "notify_max_number": 0,
    "recover_duration": 0,
    "callbacks": [],
    "runbook_url": "",
    "append_tags": [],
    "annotations": null
  },
  {
    "cate": "prometheus",
    "datasource_ids": [
      0
    ],
    "name": "KubeletPlegDurationHigh",
    "note": "The Kubelet Pod Lifecycle Event Generator has a 99th percentile duration of {{ $value }} seconds on node {{ $labels.node }}.",
    "prod": "metric",
    "algorithm": "",
    "algo_params": null,
    "delay": 0,
    "severity": 2,
    "severities": [
      2
    ],
    "disabled": 1,
    "prom_for_duration": 300,
    "prom_ql": "node_quantile:kubelet_pleg_relist_duration_seconds:histogram_quantile{quantile=\"0.99\"} >= 10\n",
    "rule_config": {
      "algo_params": null,
      "inhibit": false,
      "prom_ql": "",
      "queries": [
        {
          "prom_ql": "node_quantile:kubelet_pleg_relist_duration_seconds:histogram_quantile{quantile=\"0.99\"} >= 10\n",
          "severity": 2
        }
      ],
      "severity": 0
    },
    "prom_eval_interval": 15,
    "enable_stime": "00:00",
    "enable_stimes": [
      "00:00"
    ],
    "enable_etime": "23:59",
    "enable_etimes": [
      "23:59"
    ],
    "enable_days_of_week": [
      "1",
      "2",
      "3",
      "4",
      "5",
      "6",
      "0"
    ],
    "enable_days_of_weeks": [
      [
        "1",
        "2",
        "3",
        "4",
        "5",
        "6",
        "0"
      ]
    ],
    "enable_in_bg": 0,
    "notify_recovered": 1,
    "notify_channels": [],
    "notify_repeat_step": 60,
    "notify_max_number": 0,
    "recover_duration": 0,
    "callbacks": [],
    "runbook_url": "",
    "append_tags": [],
    "annotations": null
  },
  {
    "cate": "prometheus",
    "datasource_ids": [
      0
    ],
    "name": "KubeletPodStartUpLatencyHigh",
    "note": "Kubelet Pod startup 99th percentile latency is {{ $value }} seconds on node {{ $labels.node }}.",
    "prod": "metric",
    "algorithm": "",
    "algo_params": null,
    "delay": 0,
    "severity": 2,
    "severities": [
      2
    ],
    "disabled": 1,
    "prom_for_duration": 900,
    "prom_ql": "histogram_quantile(0.99, sum(rate(kubelet_pod_worker_duration_seconds_bucket{job=\"kubelet\", metrics_path=\"/metrics\"}[5m])) by (cluster, instance, le)) * on(cluster, instance) group_left(node) kubelet_node_name{job=\"kubelet\", metrics_path=\"/metrics\"} > 60\n",
    "rule_config": {
      "algo_params": null,
      "inhibit": false,
      "prom_ql": "",
      "queries": [
        {
          "prom_ql": "histogram_quantile(0.99, sum(rate(kubelet_pod_worker_duration_seconds_bucket{job=\"kubelet\", metrics_path=\"/metrics\"}[5m])) by (cluster, instance, le)) * on(cluster, instance) group_left(node) kubelet_node_name{job=\"kubelet\", metrics_path=\"/metrics\"} > 60\n",
          "severity": 2
        }
      ],
      "severity": 0
    },
    "prom_eval_interval": 15,
    "enable_stime": "00:00",
    "enable_stimes": [
      "00:00"
    ],
    "enable_etime": "23:59",
    "enable_etimes": [
      "23:59"
    ],
    "enable_days_of_week": [
      "1",
      "2",
      "3",
      "4",
      "5",
      "6",
      "0"
    ],
    "enable_days_of_weeks": [
      [
        "1",
        "2",
        "3",
        "4",
        "5",
        "6",
        "0"
      ]
    ],
    "enable_in_bg": 0,
    "notify_recovered": 1,
    "notify_channels": [],
    "notify_repeat_step": 60,
    "notify_max_number": 0,
    "recover_duration": 0,
    "callbacks": [],
    "runbook_url": "",
    "append_tags": [],
    "annotations": null
  },
  {
    "cate": "prometheus",
    "datasource_ids": [
      0
    ],
    "name": "KubeletServerCertificateExpiration",
    "note": "Server certificate for Kubelet on node {{ $labels.node }} expires in {{ $value | humanizeDuration }}.",
    "prod": "metric",
    "algorithm": "",
    "algo_params": null,
    "delay": 0,
    "severity": 2,
    "severities": [
      2
    ],
    "disabled": 1,
    "prom_for_duration": 0,
    "prom_ql": "kubelet_certificate_manager_server_ttl_seconds < 604800\n",
    "rule_config": {
      "algo_params": null,
      "inhibit": false,
      "prom_ql": "",
      "queries": [
        {
          "prom_ql": "kubelet_certificate_manager_server_ttl_seconds < 604800\n",
          "severity": 2
        }
      ],
      "severity": 0
    },
    "prom_eval_interval": 15,
    "enable_stime": "00:00",
    "enable_stimes": [
      "00:00"
    ],
    "enable_etime": "23:59",
    "enable_etimes": [
      "23:59"
    ],
    "enable_days_of_week": [
      "1",
      "2",
      "3",
      "4",
      "5",
      "6",
      "0"
    ],
    "enable_days_of_weeks": [
      [
        "1",
        "2",
        "3",
        "4",
        "5",
        "6",
        "0"
      ]
    ],
    "enable_in_bg": 0,
    "notify_recovered": 1,
    "notify_channels": [],
    "notify_repeat_step": 60,
    "notify_max_number": 0,
    "recover_duration": 0,
    "callbacks": [],
    "runbook_url": "",
    "append_tags": [],
    "annotations": null
  },
  {
    "cate": "prometheus",
    "datasource_ids": [
      0
    ],
    "name": "KubeletServerCertificateRenewalErrors",
    "note": "Kubelet on node {{ $labels.node }} has failed to renew its server certificate ({{ $value | humanize }} errors in the last 5 minutes).",
    "prod": "metric",
    "algorithm": "",
    "algo_params": null,
    "delay": 0,
    "severity": 2,
    "severities": [
      2
    ],
    "disabled": 1,
    "prom_for_duration": 900,
    "prom_ql": "increase(kubelet_server_expiration_renew_errors[5m]) > 0\n",
    "rule_config": {
      "algo_params": null,
      "inhibit": false,
      "prom_ql": "",
      "queries": [
        {
          "prom_ql": "increase(kubelet_server_expiration_renew_errors[5m]) > 0\n",
          "severity": 2
        }
      ],
      "severity": 0
    },
    "prom_eval_interval": 15,
    "enable_stime": "00:00",
    "enable_stimes": [
      "00:00"
    ],
    "enable_etime": "23:59",
    "enable_etimes": [
      "23:59"
    ],
    "enable_days_of_week": [
      "1",
      "2",
      "3",
      "4",
      "5",
      "6",
      "0"
    ],
    "enable_days_of_weeks": [
      [
        "1",
        "2",
        "3",
        "4",
        "5",
        "6",
        "0"
      ]
    ],
    "enable_in_bg": 0,
    "notify_recovered": 1,
    "notify_channels": [],
    "notify_repeat_step": 60,
    "notify_max_number": 0,
    "recover_duration": 0,
    "callbacks": [],
    "runbook_url": "",
    "append_tags": [],
    "annotations": null
  },
  {
    "cate": "prometheus",
    "datasource_ids": [
      0
    ],
    "name": "KubeletTooManyPods",
    "note": "Kubelet '{{ $labels.node }}' is running at {{ $value | humanizePercentage }} of its Pod capacity.",
    "prod": "metric",
    "algorithm": "",
    "algo_params": null,
    "delay": 0,
    "severity": 3,
    "severities": [
      3
    ],
    "disabled": 1,
    "prom_for_duration": 900,
    "prom_ql": "count by(cluster, node) (\n  (kube_pod_status_phase{job=\"kube-state-metrics\",phase=\"Running\"} == 1) * on(instance,pod,namespace,cluster) group_left(node) topk by(instance,pod,namespace,cluster) (1, kube_pod_info{job=\"kube-state-metrics\"})\n)\n/\nmax by(cluster, node) (\n  kube_node_status_capacity{job=\"kube-state-metrics\",resource=\"pods\"} != 1\n) > 0.95\n",
    "rule_config": {
      "algo_params": null,
      "inhibit": false,
      "prom_ql": "",
      "queries": [
        {
          "prom_ql": "count by(cluster, node) (\n  (kube_pod_status_phase{job=\"kube-state-metrics\",phase=\"Running\"} == 1) * on(instance,pod,namespace,cluster) group_left(node) topk by(instance,pod,namespace,cluster) (1, kube_pod_info{job=\"kube-state-metrics\"})\n)\n/\nmax by(cluster, node) (\n  kube_node_status_capacity{job=\"kube-state-metrics\",resource=\"pods\"} != 1\n) > 0.95\n",
          "severity": 3
        }
      ],
      "severity": 0
    },
    "prom_eval_interval": 15,
    "enable_stime": "00:00",
    "enable_stimes": [
      "00:00"
    ],
    "enable_etime": "23:59",
    "enable_etimes": [
      "23:59"
    ],
    "enable_days_of_week": [
      "1",
      "2",
      "3",
      "4",
      "5",
      "6",
      "0"
    ],
    "enable_days_of_weeks": [
      [
        "1",
        "2",
        "3",
        "4",
        "5",
        "6",
        "0"
      ]
    ],
    "enable_in_bg": 0,
    "notify_recovered": 1,
    "notify_channels": [],
    "notify_repeat_step": 60,
    "notify_max_number": 0,
    "recover_duration": 0,
    "callbacks": [],
    "runbook_url": "",
    "append_tags": [],
    "annotations": null
  },
  {
    "cate": "prometheus",
    "datasource_ids": [
      0
    ],
    "name": "KubeMemoryOvercommit",
    "note": "Cluster {{ $labels.cluster }} has overcommitted memory resource requests for Pods by {{ $value | humanize }} bytes and cannot tolerate node failure.",
    "prod": "metric",
    "algorithm": "",
    "algo_params": null,
    "delay": 0,
    "severity": 2,
    "severities": [
      2
    ],
    "disabled": 1,
    "prom_for_duration": 600,
    "prom_ql": "sum(namespace_memory:kube_pod_container_resource_requests:sum{}) by (cluster) - (sum(kube_node_status_allocatable{resource=\"memory\", job=\"kube-state-metrics\"}) by (cluster) - max(kube_node_status_allocatable{resource=\"memory\", job=\"kube-state-metrics\"}) by (cluster)) > 0\nand\n(sum(kube_node_status_allocatable{resource=\"memory\", job=\"kube-state-metrics\"}) by (cluster) - max(kube_node_status_allocatable{resource=\"memory\", job=\"kube-state-metrics\"}) by (cluster)) > 0\n",
    "rule_config": {
      "algo_params": null,
      "inhibit": false,
      "prom_ql": "",
      "queries": [
        {
          "prom_ql": "sum(namespace_memory:kube_pod_container_resource_requests:sum{}) by (cluster) - (sum(kube_node_status_allocatable{resource=\"memory\", job=\"kube-state-metrics\"}) by (cluster) - max(kube_node_status_allocatable{resource=\"memory\", job=\"kube-state-metrics\"}) by (cluster)) > 0\nand\n(sum(kube_node_status_allocatable{resource=\"memory\", job=\"kube-state-metrics\"}) by (cluster) - max(kube_node_status_allocatable{resource=\"memory\", job=\"kube-state-metrics\"}) by (cluster)) > 0\n",
          "severity": 2
        }
      ],
      "severity": 0
    },
    "prom_eval_interval": 15,
    "enable_stime": "00:00",
    "enable_stimes": [
      "00:00"
    ],
    "enable_etime": "23:59",
    "enable_etimes": [
      "23:59"
    ],
    "enable_days_of_week": [
      "1",
      "2",
      "3",
      "4",
      "5",
      "6",
      "0"
    ],
    "enable_days_of_weeks": [
      [
        "1",
        "2",
        "3",
        "4",
        "5",
        "6",
        "0"
      ]
    ],
    "enable_in_bg": 0,
    "notify_recovered": 1,
    "notify_channels": [],
    "notify_repeat_step": 60,
    "notify_max_number": 0,
    "recover_duration": 0,
    "callbacks": [],
    "runbook_url": "",
    "append_tags": [],
    "annotations": null
  },
  {
    "cate": "prometheus",
    "datasource_ids": [
      0
    ],
    "name": "KubeMemoryQuotaOvercommit",
    "note": "Cluster {{ $labels.cluster }}  has overcommitted memory resource requests for Namespaces.",
    "prod": "metric",
    "algorithm": "",
    "algo_params": null,
    "delay": 0,
    "severity": 2,
    "severities": [
      2
    ],
    "disabled": 1,
    "prom_for_duration": 300,
    "prom_ql": "sum(min without(resource) (kube_resourcequota{job=\"kube-state-metrics\", type=\"hard\", resource=~\"(memory|requests.memory)\"})) by (cluster)\n  /\nsum(kube_node_status_allocatable{resource=\"memory\", job=\"kube-state-metrics\"}) by (cluster)\n  > 1.5\n",
    "rule_config": {
      "algo_params": null,
      "inhibit": false,
      "prom_ql": "",
      "queries": [
        {
          "prom_ql": "sum(min without(resource) (kube_resourcequota{job=\"kube-state-metrics\", type=\"hard\", resource=~\"(memory|requests.memory)\"})) by (cluster)\n  /\nsum(kube_node_status_allocatable{resource=\"memory\", job=\"kube-state-metrics\"}) by (cluster)\n  > 1.5\n",
          "severity": 2
        }
      ],
      "severity": 0
    },
    "prom_eval_interval": 15,
    "enable_stime": "00:00",
    "enable_stimes": [
      "00:00"
    ],
    "enable_etime": "23:59",
    "enable_etimes": [
      "23:59"
    ],
    "enable_days_of_week": [
      "1",
      "2",
      "3",
      "4",
      "5",
      "6",
      "0"
    ],
    "enable_days_of_weeks": [
      [
        "1",
        "2",
        "3",
        "4",
        "5",
        "6",
        "0"
      ]
    ],
    "enable_in_bg": 0,
    "notify_recovered": 1,
    "notify_channels": [],
    "notify_repeat_step": 60,
    "notify_max_number": 0,
    "recover_duration": 0,
    "callbacks": [],
    "runbook_url": "",
    "append_tags": [],
    "annotations": null
  },
  {
    "cate": "prometheus",
    "datasource_ids": [
      0
    ],
    "name": "KubeNodeNotReady",
    "note": "{{ $labels.node }} has been unready for more than 15 minutes.",
    "prod": "metric",
    "algorithm": "",
    "algo_params": null,
    "delay": 0,
    "severity": 2,
    "severities": [
      2
    ],
    "disabled": 1,
    "prom_for_duration": 900,
    "prom_ql": "kube_node_status_condition{job=\"kube-state-metrics\",condition=\"Ready\",status=\"true\"} == 0\n",
    "rule_config": {
      "algo_params": null,
      "inhibit": false,
      "prom_ql": "",
      "queries": [
        {
          "prom_ql": "kube_node_status_condition{job=\"kube-state-metrics\",condition=\"Ready\",status=\"true\"} == 0\n",
          "severity": 2
        }
      ],
      "severity": 0
    },
    "prom_eval_interval": 15,
    "enable_stime": "00:00",
    "enable_stimes": [
      "00:00"
    ],
    "enable_etime": "23:59",
    "enable_etimes": [
      "23:59"
    ],
    "enable_days_of_week": [
      "1",
      "2",
      "3",
      "4",
      "5",
      "6",
      "0"
    ],
    "enable_days_of_weeks": [
      [
        "1",
        "2",
        "3",
        "4",
        "5",
        "6",
        "0"
      ]
    ],
    "enable_in_bg": 0,
    "notify_recovered": 1,
    "notify_channels": [],
    "notify_repeat_step": 60,
    "notify_max_number": 0,
    "recover_duration": 0,
    "callbacks": [],
    "runbook_url": "",
    "append_tags": [],
    "annotations": null
  },
  {
    "cate": "prometheus",
    "datasource_ids": [
      0
    ],
    "name": "KubeNodeReadinessFlapping",
    "note": "The readiness status of node {{ $labels.node }} has changed {{ $value }} times in the last 15 minutes.",
    "prod": "metric",
    "algorithm": "",
    "algo_params": null,
    "delay": 0,
    "severity": 2,
    "severities": [
      2
    ],
    "disabled": 1,
    "prom_for_duration": 900,
    "prom_ql": "sum(changes(kube_node_status_condition{job=\"kube-state-metrics\",status=\"true\",condition=\"Ready\"}[15m])) by (cluster, node) > 2\n",
    "rule_config": {
      "algo_params": null,
      "inhibit": false,
      "prom_ql": "",
      "queries": [
        {
          "prom_ql": "sum(changes(kube_node_status_condition{job=\"kube-state-metrics\",status=\"true\",condition=\"Ready\"}[15m])) by (cluster, node) > 2\n",
          "severity": 2
        }
      ],
      "severity": 0
    },
    "prom_eval_interval": 15,
    "enable_stime": "00:00",
    "enable_stimes": [
      "00:00"
    ],
    "enable_etime": "23:59",
    "enable_etimes": [
      "23:59"
    ],
    "enable_days_of_week": [
      "1",
      "2",
      "3",
      "4",
      "5",
      "6",
      "0"
    ],
    "enable_days_of_weeks": [
      [
        "1",
        "2",
        "3",
        "4",
        "5",
        "6",
        "0"
      ]
    ],
    "enable_in_bg": 0,
    "notify_recovered": 1,
    "notify_channels": [],
    "notify_repeat_step": 60,
    "notify_max_number": 0,
    "recover_duration": 0,
    "callbacks": [],
    "runbook_url": "",
    "append_tags": [],
    "annotations": null
  },
  {
    "cate": "prometheus",
    "datasource_ids": [
      0
    ],
    "name": "KubeNodeUnreachable",
    "note": "{{ $labels.node }} is unreachable and some workloads may be rescheduled.",
    "prod": "metric",
    "algorithm": "",
    "algo_params": null,
    "delay": 0,
    "severity": 2,
    "severities": [
      2
    ],
    "disabled": 1,
    "prom_for_duration": 900,
    "prom_ql": "(kube_node_spec_taint{job=\"kube-state-metrics\",key=\"node.kubernetes.io/unreachable\",effect=\"NoSchedule\"} unless ignoring(key,value) kube_node_spec_taint{job=\"kube-state-metrics\",key=~\"ToBeDeletedByClusterAutoscaler|cloud.google.com/impending-node-termination|aws-node-termination-handler/spot-itn\"}) == 1\n",
    "rule_config": {
      "algo_params": null,
      "inhibit": false,
      "prom_ql": "",
      "queries": [
        {
          "prom_ql": "(kube_node_spec_taint{job=\"kube-state-metrics\",key=\"node.kubernetes.io/unreachable\",effect=\"NoSchedule\"} unless ignoring(key,value) kube_node_spec_taint{job=\"kube-state-metrics\",key=~\"ToBeDeletedByClusterAutoscaler|cloud.google.com/impending-node-termination|aws-node-termination-handler/spot-itn\"}) == 1\n",
          "severity": 2
        }
      ],
      "severity": 0
    },
    "prom_eval_interval": 15,
    "enable_stime": "00:00",
    "enable_stimes": [
      "00:00"
    ],
    "enable_etime": "23:59",
    "enable_etimes": [
      "23:59"
    ],
    "enable_days_of_week": [
      "1",
      "2",
      "3",
      "4",
      "5",
      "6",
      "0"
    ],
    "enable_days_of_weeks": [
      [
        "1",
        "2",
        "3",
        "4",
        "5",
        "6",
        "0"
      ]
    ],
    "enable_in_bg": 0,
    "notify_recovered": 1,
    "notify_channels": [],
    "notify_repeat_step": 60,
    "notify_max_number": 0,
    "recover_duration": 0,
    "callbacks": [],
    "runbook_url": "",
    "append_tags": [],
    "annotations": null
  },
  {
    "cate": "prometheus",
    "datasource_ids": [
      0
    ],
    "name": "KubePersistentVolumeErrors",
    "note": "The persistent volume {{ $labels.persistentvolume }} has status {{ $labels.phase }}.",
    "prod": "metric",
    "algorithm": "",
    "algo_params": null,
    "delay": 0,
    "severity": 1,
    "severities": [
      1
    ],
    "disabled": 1,
    "prom_for_duration": 300,
    "prom_ql": "kube_persistentvolume_status_phase{phase=~\"Failed|Pending\",job=\"kube-state-metrics\"} > 0\n",
    "rule_config": {
      "algo_params": null,
      "inhibit": false,
      "prom_ql": "",
      "queries": [
        {
          "prom_ql": "kube_persistentvolume_status_phase{phase=~\"Failed|Pending\",job=\"kube-state-metrics\"} > 0\n",
          "severity": 1
        }
      ],
      "severity": 0
    },
    "prom_eval_interval": 15,
    "enable_stime": "00:00",
    "enable_stimes": [
      "00:00"
    ],
    "enable_etime": "23:59",
    "enable_etimes": [
      "23:59"
    ],
    "enable_days_of_week": [
      "1",
      "2",
      "3",
      "4",
      "5",
      "6",
      "0"
    ],
    "enable_days_of_weeks": [
      [
        "1",
        "2",
        "3",
        "4",
        "5",
        "6",
        "0"
      ]
    ],
    "enable_in_bg": 0,
    "notify_recovered": 1,
    "notify_channels": [],
    "notify_repeat_step": 60,
    "notify_max_number": 0,
    "recover_duration": 0,
    "callbacks": [],
    "runbook_url": "",
    "append_tags": [],
    "annotations": null
  },
  {
    "cate": "prometheus",
    "datasource_ids": [
      0
    ],
    "name": "KubePersistentVolumeFillingUp",
    "note": "The PersistentVolume claimed by {{ $labels.persistentvolumeclaim }} in Namespace {{ $labels.namespace }} is only {{ $value | humanizePercentage }} free.",
    "prod": "metric",
    "algorithm": "",
    "algo_params": null,
    "delay": 0,
    "severity": 1,
    "severities": [
      1
    ],
    "disabled": 1,
    "prom_for_duration": 60,
    "prom_ql": "(\n  kubelet_volume_stats_available_bytes{job=\"kubelet\", metrics_path=\"/metrics\"}\n    /\n  kubelet_volume_stats_capacity_bytes{job=\"kubelet\", metrics_path=\"/metrics\"}\n) < 0.03\nand\nkubelet_volume_stats_used_bytes{job=\"kubelet\", metrics_path=\"/metrics\"} > 0\nunless on(namespace, persistentvolumeclaim)\nkube_persistentvolumeclaim_access_mode{ access_mode=\"ReadOnlyMany\"} == 1\nunless on(namespace, persistentvolumeclaim)\nkube_persistentvolumeclaim_labels{label_excluded_from_alerts=\"true\"} == 1\n",
    "rule_config": {
      "algo_params": null,
      "inhibit": false,
      "prom_ql": "",
      "queries": [
        {
          "prom_ql": "(\n  kubelet_volume_stats_available_bytes{job=\"kubelet\", metrics_path=\"/metrics\"}\n    /\n  kubelet_volume_stats_capacity_bytes{job=\"kubelet\", metrics_path=\"/metrics\"}\n) < 0.03\nand\nkubelet_volume_stats_used_bytes{job=\"kubelet\", metrics_path=\"/metrics\"} > 0\nunless on(namespace, persistentvolumeclaim)\nkube_persistentvolumeclaim_access_mode{ access_mode=\"ReadOnlyMany\"} == 1\nunless on(namespace, persistentvolumeclaim)\nkube_persistentvolumeclaim_labels{label_excluded_from_alerts=\"true\"} == 1\n",
          "severity": 1
        }
      ],
      "severity": 0
    },
    "prom_eval_interval": 15,
    "enable_stime": "00:00",
    "enable_stimes": [
      "00:00"
    ],
    "enable_etime": "23:59",
    "enable_etimes": [
      "23:59"
    ],
    "enable_days_of_week": [
      "1",
      "2",
      "3",
      "4",
      "5",
      "6",
      "0"
    ],
    "enable_days_of_weeks": [
      [
        "1",
        "2",
        "3",
        "4",
        "5",
        "6",
        "0"
      ]
    ],
    "enable_in_bg": 0,
    "notify_recovered": 1,
    "notify_channels": [],
    "notify_repeat_step": 60,
    "notify_max_number": 0,
    "recover_duration": 0,
    "callbacks": [],
    "runbook_url": "",
    "append_tags": [],
    "annotations": null
  },
  {
    "cate": "prometheus",
    "datasource_ids": [
      0
    ],
    "name": "KubePersistentVolumeInodesFillingUp",
    "note": "The PersistentVolume claimed by {{ $labels.persistentvolumeclaim }} in Namespace {{ $labels.namespace }} only has {{ $value | humanizePercentage }} free inodes.",
    "prod": "metric",
    "algorithm": "",
    "algo_params": null,
    "delay": 0,
    "severity": 1,
    "severities": [
      1
    ],
    "disabled": 1,
    "prom_for_duration": 60,
    "prom_ql": "(\n  kubelet_volume_stats_inodes_free{job=\"kubelet\", metrics_path=\"/metrics\"}\n    /\n  kubelet_volume_stats_inodes{job=\"kubelet\", metrics_path=\"/metrics\"}\n) < 0.03\nand\nkubelet_volume_stats_inodes_used{job=\"kubelet\", metrics_path=\"/metrics\"} > 0\nunless on(namespace, persistentvolumeclaim)\nkube_persistentvolumeclaim_access_mode{ access_mode=\"ReadOnlyMany\"} == 1\nunless on(namespace, persistentvolumeclaim)\nkube_persistentvolumeclaim_labels{label_excluded_from_alerts=\"true\"} == 1\n",
    "rule_config": {
      "algo_params": null,
      "inhibit": false,
      "prom_ql": "",
      "queries": [
        {
          "prom_ql": "(\n  kubelet_volume_stats_inodes_free{job=\"kubelet\", metrics_path=\"/metrics\"}\n    /\n  kubelet_volume_stats_inodes{job=\"kubelet\", metrics_path=\"/metrics\"}\n) < 0.03\nand\nkubelet_volume_stats_inodes_used{job=\"kubelet\", metrics_path=\"/metrics\"} > 0\nunless on(namespace, persistentvolumeclaim)\nkube_persistentvolumeclaim_access_mode{ access_mode=\"ReadOnlyMany\"} == 1\nunless on(namespace, persistentvolumeclaim)\nkube_persistentvolumeclaim_labels{label_excluded_from_alerts=\"true\"} == 1\n",
          "severity": 1
        }
      ],
      "severity": 0
    },
    "prom_eval_interval": 15,
    "enable_stime": "00:00",
    "enable_stimes": [
      "00:00"
    ],
    "enable_etime": "23:59",
    "enable_etimes": [
      "23:59"
    ],
    "enable_days_of_week": [
      "1",
      "2",
      "3",
      "4",
      "5",
      "6",
      "0"
    ],
    "enable_days_of_weeks": [
      [
        "1",
        "2",
        "3",
        "4",
        "5",
        "6",
        "0"
      ]
    ],
    "enable_in_bg": 0,
    "notify_recovered": 1,
    "notify_channels": [],
    "notify_repeat_step": 60,
    "notify_max_number": 0,
    "recover_duration": 0,
    "callbacks": [],
    "runbook_url": "",
    "append_tags": [],
    "annotations": null
  },
  {
    "cate": "prometheus",
    "datasource_ids": [
      0
    ],
    "name": "KubePodCrashLooping",
    "note": "Pod {{ $labels.namespace }}/{{ $labels.pod }} ({{ $labels.container }}) is in waiting state (reason: \"CrashLoopBackOff\").",
    "prod": "metric",
    "algorithm": "",
    "algo_params": null,
    "delay": 0,
    "severity": 2,
    "severities": [
      2
    ],
    "disabled": 1,
    "prom_for_duration": 900,
    "prom_ql": "max_over_time(kube_pod_container_status_waiting_reason{reason=\"CrashLoopBackOff\", job=\"kube-state-metrics\"}[5m]) >= 1\n",
    "rule_config": {
      "algo_params": null,
      "inhibit": false,
      "prom_ql": "",
      "queries": [
        {
          "prom_ql": "max_over_time(kube_pod_container_status_waiting_reason{reason=\"CrashLoopBackOff\", job=\"kube-state-metrics\"}[5m]) >= 1\n",
          "severity": 2
        }
      ],
      "severity": 0
    },
    "prom_eval_interval": 15,
    "enable_stime": "00:00",
    "enable_stimes": [
      "00:00"
    ],
    "enable_etime": "23:59",
    "enable_etimes": [
      "23:59"
    ],
    "enable_days_of_week": [
      "1",
      "2",
      "3",
      "4",
      "5",
      "6",
      "0"
    ],
    "enable_days_of_weeks": [
      [
        "1",
        "2",
        "3",
        "4",
        "5",
        "6",
        "0"
      ]
    ],
    "enable_in_bg": 0,
    "notify_recovered": 1,
    "notify_channels": [],
    "notify_repeat_step": 60,
    "notify_max_number": 0,
    "recover_duration": 0,
    "callbacks": [],
    "runbook_url": "",
    "append_tags": [],
    "annotations": null
  },
  {
    "cate": "prometheus",
    "datasource_ids": [
      0
    ],
    "name": "KubePodNotReady",
    "note": "Pod {{ $labels.namespace }}/{{ $labels.pod }} has been in a non-ready state for longer than 15 minutes.",
    "prod": "metric",
    "algorithm": "",
    "algo_params": null,
    "delay": 0,
    "severity": 2,
    "severities": [
      2
    ],
    "disabled": 1,
    "prom_for_duration": 900,
    "prom_ql": "sum by (namespace, pod, cluster) (\n  max by(namespace, pod, cluster) (\n    kube_pod_status_phase{job=\"kube-state-metrics\", phase=~\"Pending|Unknown|Failed\"}\n  ) * on(namespace, pod, cluster) group_left(owner_kind) topk by(namespace, pod, cluster) (\n    1, max by(namespace, pod, owner_kind, cluster) (kube_pod_owner{owner_kind!=\"Job\"})\n  )\n) > 0\n",
    "rule_config": {
      "algo_params": null,
      "inhibit": false,
      "prom_ql": "",
      "queries": [
        {
          "prom_ql": "sum by (namespace, pod, cluster) (\n  max by(namespace, pod, cluster) (\n    kube_pod_status_phase{job=\"kube-state-metrics\", phase=~\"Pending|Unknown|Failed\"}\n  ) * on(namespace, pod, cluster) group_left(owner_kind) topk by(namespace, pod, cluster) (\n    1, max by(namespace, pod, owner_kind, cluster) (kube_pod_owner{owner_kind!=\"Job\"})\n  )\n) > 0\n",
          "severity": 2
        }
      ],
      "severity": 0
    },
    "prom_eval_interval": 15,
    "enable_stime": "00:00",
    "enable_stimes": [
      "00:00"
    ],
    "enable_etime": "23:59",
    "enable_etimes": [
      "23:59"
    ],
    "enable_days_of_week": [
      "1",
      "2",
      "3",
      "4",
      "5",
      "6",
      "0"
    ],
    "enable_days_of_weeks": [
      [
        "1",
        "2",
        "3",
        "4",
        "5",
        "6",
        "0"
      ]
    ],
    "enable_in_bg": 0,
    "notify_recovered": 1,
    "notify_channels": [],
    "notify_repeat_step": 60,
    "notify_max_number": 0,
    "recover_duration": 0,
    "callbacks": [],
    "runbook_url": "",
    "append_tags": [],
    "annotations": null
  },
  {
    "cate": "prometheus",
    "datasource_ids": [
      0
    ],
    "name": "KubeQuotaAlmostFull",
    "note": "Namespace {{ $labels.namespace }} is using {{ $value | humanizePercentage }} of its {{ $labels.resource }} quota.",
    "prod": "metric",
    "algorithm": "",
    "algo_params": null,
    "delay": 0,
    "severity": 3,
    "severities": [
      3
    ],
    "disabled": 1,
    "prom_for_duration": 900,
    "prom_ql": "kube_resourcequota{job=\"kube-state-metrics\", type=\"used\"}\n  / ignoring(instance, job, type)\n(kube_resourcequota{job=\"kube-state-metrics\", type=\"hard\"} > 0)\n  > 0.9 < 1\n",
    "rule_config": {
      "algo_params": null,
      "inhibit": false,
      "prom_ql": "",
      "queries": [
        {
          "prom_ql": "kube_resourcequota{job=\"kube-state-metrics\", type=\"used\"}\n  / ignoring(instance, job, type)\n(kube_resourcequota{job=\"kube-state-metrics\", type=\"hard\"} > 0)\n  > 0.9 < 1\n",
          "severity": 3
        }
      ],
      "severity": 0
    },
    "prom_eval_interval": 15,
    "enable_stime": "00:00",
    "enable_stimes": [
      "00:00"
    ],
    "enable_etime": "23:59",
    "enable_etimes": [
      "23:59"
    ],
    "enable_days_of_week": [
      "1",
      "2",
      "3",
      "4",
      "5",
      "6",
      "0"
    ],
    "enable_days_of_weeks": [
      [
        "1",
        "2",
        "3",
        "4",
        "5",
        "6",
        "0"
      ]
    ],
    "enable_in_bg": 0,
    "notify_recovered": 1,
    "notify_channels": [],
    "notify_repeat_step": 60,
    "notify_max_number": 0,
    "recover_duration": 0,
    "callbacks": [],
    "runbook_url": "",
    "append_tags": [],
    "annotations": null
  },
  {
    "cate": "prometheus",
    "datasource_ids": [
      0
    ],
    "name": "KubeQuotaExceeded",
    "note": "Namespace {{ $labels.namespace }} is using {{ $value | humanizePercentage }} of its {{ $labels.resource }} quota.",
    "prod": "metric",
    "algorithm": "",
    "algo_params": null,
    "delay": 0,
    "severity": 2,
    "severities": [
      2
    ],
    "disabled": 1,
    "prom_for_duration": 900,
    "prom_ql": "kube_resourcequota{job=\"kube-state-metrics\", type=\"used\"}\n  / ignoring(instance, job, type)\n(kube_resourcequota{job=\"kube-state-metrics\", type=\"hard\"} > 0)\n  > 1\n",
    "rule_config": {
      "algo_params": null,
      "inhibit": false,
      "prom_ql": "",
      "queries": [
        {
          "prom_ql": "kube_resourcequota{job=\"kube-state-metrics\", type=\"used\"}\n  / ignoring(instance, job, type)\n(kube_resourcequota{job=\"kube-state-metrics\", type=\"hard\"} > 0)\n  > 1\n",
          "severity": 2
        }
      ],
      "severity": 0
    },
    "prom_eval_interval": 15,
    "enable_stime": "00:00",
    "enable_stimes": [
      "00:00"
    ],
    "enable_etime": "23:59",
    "enable_etimes": [
      "23:59"
    ],
    "enable_days_of_week": [
      "1",
      "2",
      "3",
      "4",
      "5",
      "6",
      "0"
    ],
    "enable_days_of_weeks": [
      [
        "1",
        "2",
        "3",
        "4",
        "5",
        "6",
        "0"
      ]
    ],
    "enable_in_bg": 0,
    "notify_recovered": 1,
    "notify_channels": [],
    "notify_repeat_step": 60,
    "notify_max_number": 0,
    "recover_duration": 0,
    "callbacks": [],
    "runbook_url": "",
    "append_tags": [],
    "annotations": null
  },
  {
    "cate": "prometheus",
    "datasource_ids": [
      0
    ],
    "name": "KubeQuotaFullyUsed",
    "note": "Namespace {{ $labels.namespace }} is using {{ $value | humanizePercentage }} of its {{ $labels.resource }} quota.",
    "prod": "metric",
    "algorithm": "",
    "algo_params": null,
    "delay": 0,
    "severity": 3,
    "severities": [
      3
    ],
    "disabled": 1,
    "prom_for_duration": 900,
    "prom_ql": "kube_resourcequota{job=\"kube-state-metrics\", type=\"used\"}\n  / ignoring(instance, job, type)\n(kube_resourcequota{job=\"kube-state-metrics\", type=\"hard\"} > 0)\n  == 1\n",
    "rule_config": {
      "algo_params": null,
      "inhibit": false,
      "prom_ql": "",
      "queries": [
        {
          "prom_ql": "kube_resourcequota{job=\"kube-state-metrics\", type=\"used\"}\n  / ignoring(instance, job, type)\n(kube_resourcequota{job=\"kube-state-metrics\", type=\"hard\"} > 0)\n  == 1\n",
          "severity": 3
        }
      ],
      "severity": 0
    },
    "prom_eval_interval": 15,
    "enable_stime": "00:00",
    "enable_stimes": [
      "00:00"
    ],
    "enable_etime": "23:59",
    "enable_etimes": [
      "23:59"
    ],
    "enable_days_of_week": [
      "1",
      "2",
      "3",
      "4",
      "5",
      "6",
      "0"
    ],
    "enable_days_of_weeks": [
      [
        "1",
        "2",
        "3",
        "4",
        "5",
        "6",
        "0"
      ]
    ],
    "enable_in_bg": 0,
    "notify_recovered": 1,
    "notify_channels": [],
    "notify_repeat_step": 60,
    "notify_max_number": 0,
    "recover_duration": 0,
    "callbacks": [],
    "runbook_url": "",
    "append_tags": [],
    "annotations": null
  },
  {
    "cate": "prometheus",
    "datasource_ids": [
      0
    ],
    "name": "KubeSchedulerDown",
    "note": "KubeScheduler has disappeared from Prometheus target discovery.",
    "prod": "metric",
    "algorithm": "",
    "algo_params": null,
    "delay": 0,
    "severity": 1,
    "severities": [
      1
    ],
    "disabled": 1,
    "prom_for_duration": 900,
    "prom_ql": "absent(up{job=\"kube-scheduler\"} == 1)\n",
    "rule_config": {
      "algo_params": null,
      "inhibit": false,
      "prom_ql": "",
      "queries": [
        {
          "prom_ql": "absent(up{job=\"kube-scheduler\"} == 1)\n",
          "severity": 1
        }
      ],
      "severity": 0
    },
    "prom_eval_interval": 15,
    "enable_stime": "00:00",
    "enable_stimes": [
      "00:00"
    ],
    "enable_etime": "23:59",
    "enable_etimes": [
      "23:59"
    ],
    "enable_days_of_week": [
      "1",
      "2",
      "3",
      "4",
      "5",
      "6",
      "0"
    ],
    "enable_days_of_weeks": [
      [
        "1",
        "2",
        "3",
        "4",
        "5",
        "6",
        "0"
      ]
    ],
    "enable_in_bg": 0,
    "notify_recovered": 1,
    "notify_channels": [],
    "notify_repeat_step": 60,
    "notify_max_number": 0,
    "recover_duration": 0,
    "callbacks": [],
    "runbook_url": "",
    "append_tags": [],
    "annotations": null
  },
  {
    "cate": "prometheus",
    "datasource_ids": [
      0
    ],
    "name": "KubeStatefulSetGenerationMismatch",
    "note": "StatefulSet generation for {{ $labels.namespace }}/{{ $labels.statefulset }} does not match, this indicates that the StatefulSet has failed but has not been rolled back.",
    "prod": "metric",
    "algorithm": "",
    "algo_params": null,
    "delay": 0,
    "severity": 2,
    "severities": [
      2
    ],
    "disabled": 1,
    "prom_for_duration": 900,
    "prom_ql": "kube_statefulset_status_observed_generation{job=\"kube-state-metrics\"}\n  !=\nkube_statefulset_metadata_generation{job=\"kube-state-metrics\"}\n",
    "rule_config": {
      "algo_params": null,
      "inhibit": false,
      "prom_ql": "",
      "queries": [
        {
          "prom_ql": "kube_statefulset_status_observed_generation{job=\"kube-state-metrics\"}\n  !=\nkube_statefulset_metadata_generation{job=\"kube-state-metrics\"}\n",
          "severity": 2
        }
      ],
      "severity": 0
    },
    "prom_eval_interval": 15,
    "enable_stime": "00:00",
    "enable_stimes": [
      "00:00"
    ],
    "enable_etime": "23:59",
    "enable_etimes": [
      "23:59"
    ],
    "enable_days_of_week": [
      "1",
      "2",
      "3",
      "4",
      "5",
      "6",
      "0"
    ],
    "enable_days_of_weeks": [
      [
        "1",
        "2",
        "3",
        "4",
        "5",
        "6",
        "0"
      ]
    ],
    "enable_in_bg": 0,
    "notify_recovered": 1,
    "notify_channels": [],
    "notify_repeat_step": 60,
    "notify_max_number": 0,
    "recover_duration": 0,
    "callbacks": [],
    "runbook_url": "",
    "append_tags": [],
    "annotations": null
  },
  {
    "cate": "prometheus",
    "datasource_ids": [
      0
    ],
    "name": "KubeStatefulSetReplicasMismatch",
    "note": "StatefulSet {{ $labels.namespace }}/{{ $labels.statefulset }} has not matched the expected number of replicas for longer than 15 minutes.",
    "prod": "metric",
    "algorithm": "",
    "algo_params": null,
    "delay": 0,
    "severity": 2,
    "severities": [
      2
    ],
    "disabled": 1,
    "prom_for_duration": 900,
    "prom_ql": "(\n  kube_statefulset_status_replicas_ready{job=\"kube-state-metrics\"}\n    !=\n  kube_statefulset_status_replicas{job=\"kube-state-metrics\"}\n) and (\n  changes(kube_statefulset_status_replicas_updated{job=\"kube-state-metrics\"}[10m])\n    ==\n  0\n)\n",
    "rule_config": {
      "algo_params": null,
      "inhibit": false,
      "prom_ql": "",
      "queries": [
        {
          "prom_ql": "(\n  kube_statefulset_status_replicas_ready{job=\"kube-state-metrics\"}\n    !=\n  kube_statefulset_status_replicas{job=\"kube-state-metrics\"}\n) and (\n  changes(kube_statefulset_status_replicas_updated{job=\"kube-state-metrics\"}[10m])\n    ==\n  0\n)\n",
          "severity": 2
        }
      ],
      "severity": 0
    },
    "prom_eval_interval": 15,
    "enable_stime": "00:00",
    "enable_stimes": [
      "00:00"
    ],
    "enable_etime": "23:59",
    "enable_etimes": [
      "23:59"
    ],
    "enable_days_of_week": [
      "1",
      "2",
      "3",
      "4",
      "5",
      "6",
      "0"
    ],
    "enable_days_of_weeks": [
      [
        "1",
        "2",
        "3",
        "4",
        "5",
        "6",
        "0"
      ]
    ],
    "enable_in_bg": 0,
    "notify_recovered": 1,
    "notify_channels": [],
    "notify_repeat_step": 60,
    "notify_max_number": 0,
    "recover_duration": 0,
    "callbacks": [],
    "runbook_url": "",
    "append_tags": [],
    "annotations": null
  },
  {
    "cate": "prometheus",
    "datasource_ids": [
      0
    ],
    "name": "KubeStatefulSetUpdateNotRolledOut",
    "note": "StatefulSet {{ $labels.namespace }}/{{ $labels.statefulset }} update has not been rolled out.",
    "prod": "metric",
    "algorithm": "",
    "algo_params": null,
    "delay": 0,
    "severity": 2,
    "severities": [
      2
    ],
    "disabled": 1,
    "prom_for_duration": 900,
    "prom_ql": "(\n  max without (revision) (\n    kube_statefulset_status_current_revision{job=\"kube-state-metrics\"}\n      unless\n    kube_statefulset_status_update_revision{job=\"kube-state-metrics\"}\n  )\n    *\n  (\n    kube_statefulset_replicas{job=\"kube-state-metrics\"}\n      !=\n    kube_statefulset_status_replicas_updated{job=\"kube-state-metrics\"}\n  )\n)  and (\n  changes(kube_statefulset_status_replicas_updated{job=\"kube-state-metrics\"}[5m])\n    ==\n  0\n)\n",
    "rule_config": {
      "algo_params": null,
      "inhibit": false,
      "prom_ql": "",
      "queries": [
        {
          "prom_ql": "(\n  max without (revision) (\n    kube_statefulset_status_current_revision{job=\"kube-state-metrics\"}\n      unless\n    kube_statefulset_status_update_revision{job=\"kube-state-metrics\"}\n  )\n    *\n  (\n    kube_statefulset_replicas{job=\"kube-state-metrics\"}\n      !=\n    kube_statefulset_status_replicas_updated{job=\"kube-state-metrics\"}\n  )\n)  and (\n  changes(kube_statefulset_status_replicas_updated{job=\"kube-state-metrics\"}[5m])\n    ==\n  0\n)\n",
          "severity": 2
        }
      ],
      "severity": 0
    },
    "prom_eval_interval": 15,
    "enable_stime": "00:00",
    "enable_stimes": [
      "00:00"
    ],
    "enable_etime": "23:59",
    "enable_etimes": [
      "23:59"
    ],
    "enable_days_of_week": [
      "1",
      "2",
      "3",
      "4",
      "5",
      "6",
      "0"
    ],
    "enable_days_of_weeks": [
      [
        "1",
        "2",
        "3",
        "4",
        "5",
        "6",
        "0"
      ]
    ],
    "enable_in_bg": 0,
    "notify_recovered": 1,
    "notify_channels": [],
    "notify_repeat_step": 60,
    "notify_max_number": 0,
    "recover_duration": 0,
    "callbacks": [],
    "runbook_url": "",
    "append_tags": [],
    "annotations": null
  },
  {
    "cate": "prometheus",
    "datasource_ids": [
      0
    ],
    "name": "KubeVersionMismatch",
    "note": "There are {{ $value }} different semantic versions of Kubernetes components running.",
    "prod": "metric",
    "algorithm": "",
    "algo_params": null,
    "delay": 0,
    "severity": 2,
    "severities": [
      2
    ],
    "disabled": 1,
    "prom_for_duration": 900,
    "prom_ql": "count by (cluster) (count by (git_version, cluster) (label_replace(kubernetes_build_info{job!~\"kube-dns|coredns\"},\"git_version\",\"$1\",\"git_version\",\"(v[0-9]*.[0-9]*).*\"))) > 1\n",
    "rule_config": {
      "algo_params": null,
      "inhibit": false,
      "prom_ql": "",
      "queries": [
        {
          "prom_ql": "count by (cluster) (count by (git_version, cluster) (label_replace(kubernetes_build_info{job!~\"kube-dns|coredns\"},\"git_version\",\"$1\",\"git_version\",\"(v[0-9]*.[0-9]*).*\"))) > 1\n",
          "severity": 2
        }
      ],
      "severity": 0
    },
    "prom_eval_interval": 15,
    "enable_stime": "00:00",
    "enable_stimes": [
      "00:00"
    ],
    "enable_etime": "23:59",
    "enable_etimes": [
      "23:59"
    ],
    "enable_days_of_week": [
      "1",
      "2",
      "3",
      "4",
      "5",
      "6",
      "0"
    ],
    "enable_days_of_weeks": [
      [
        "1",
        "2",
        "3",
        "4",
        "5",
        "6",
        "0"
      ]
    ],
    "enable_in_bg": 0,
    "notify_recovered": 1,
    "notify_channels": [],
    "notify_repeat_step": 60,
    "notify_max_number": 0,
    "recover_duration": 0,
    "callbacks": [],
    "runbook_url": "",
    "append_tags": [],
    "annotations": null
  },
  {
    "cate": "prometheus",
    "datasource_ids": [
      0
    ],
    "name": "namespace_cpu:kube_pod_container_resource_limits:sum",
    "note": "",
    "prod": "metric",
    "algorithm": "",
    "algo_params": null,
    "delay": 0,
    "severity": 0,
    "severities": [
      0
    ],
    "disabled": 1,
    "prom_for_duration": 0,
    "prom_ql": "sum by (namespace, cluster) (\n    sum by (namespace, pod, cluster) (\n        max by (namespace, pod, container, cluster) (\n          kube_pod_container_resource_limits{resource=\"cpu\",job=\"kube-state-metrics\"}\n        ) * on(namespace, pod, cluster) group_left() max by (namespace, pod, cluster) (\n          kube_pod_status_phase{phase=~\"Pending|Running\"} == 1\n        )\n    )\n)\n",
    "rule_config": {
      "algo_params": null,
      "inhibit": false,
      "prom_ql": "",
      "queries": [
        {
          "prom_ql": "sum by (namespace, cluster) (\n    sum by (namespace, pod, cluster) (\n        max by (namespace, pod, container, cluster) (\n          kube_pod_container_resource_limits{resource=\"cpu\",job=\"kube-state-metrics\"}\n        ) * on(namespace, pod, cluster) group_left() max by (namespace, pod, cluster) (\n          kube_pod_status_phase{phase=~\"Pending|Running\"} == 1\n        )\n    )\n)\n",
          "severity": 0
        }
      ],
      "severity": 0
    },
    "prom_eval_interval": 15,
    "enable_stime": "",
    "enable_stimes": [],
    "enable_etime": "",
    "enable_etimes": [],
    "enable_days_of_week": [],
    "enable_days_of_weeks": [
      []
    ],
    "enable_in_bg": 0,
    "notify_recovered": 0,
    "notify_channels": [],
    "notify_repeat_step": 0,
    "notify_max_number": 0,
    "recover_duration": 0,
    "callbacks": [],
    "runbook_url": "",
    "append_tags": [],
    "annotations": null
  },
  {
    "cate": "prometheus",
    "datasource_ids": [
      0
    ],
    "name": "namespace_cpu:kube_pod_container_resource_requests:sum",
    "note": "",
    "prod": "metric",
    "algorithm": "",
    "algo_params": null,
    "delay": 0,
    "severity": 0,
    "severities": [
      0
    ],
    "disabled": 1,
    "prom_for_duration": 0,
    "prom_ql": "sum by (namespace, cluster) (\n    sum by (namespace, pod, cluster) (\n        max by (namespace, pod, container, cluster) (\n          kube_pod_container_resource_requests{resource=\"cpu\",job=\"kube-state-metrics\"}\n        ) * on(namespace, pod, cluster) group_left() max by (namespace, pod, cluster) (\n          kube_pod_status_phase{phase=~\"Pending|Running\"} == 1\n        )\n    )\n)\n",
    "rule_config": {
      "algo_params": null,
      "inhibit": false,
      "prom_ql": "",
      "queries": [
        {
          "prom_ql": "sum by (namespace, cluster) (\n    sum by (namespace, pod, cluster) (\n        max by (namespace, pod, container, cluster) (\n          kube_pod_container_resource_requests{resource=\"cpu\",job=\"kube-state-metrics\"}\n        ) * on(namespace, pod, cluster) group_left() max by (namespace, pod, cluster) (\n          kube_pod_status_phase{phase=~\"Pending|Running\"} == 1\n        )\n    )\n)\n",
          "severity": 0
        }
      ],
      "severity": 0
    },
    "prom_eval_interval": 15,
    "enable_stime": "",
    "enable_stimes": [],
    "enable_etime": "",
    "enable_etimes": [],
    "enable_days_of_week": [],
    "enable_days_of_weeks": [
      []
    ],
    "enable_in_bg": 0,
    "notify_recovered": 0,
    "notify_channels": [],
    "notify_repeat_step": 0,
    "notify_max_number": 0,
    "recover_duration": 0,
    "callbacks": [],
    "runbook_url": "",
    "append_tags": [],
    "annotations": null
  },
  {
    "cate": "prometheus",
    "datasource_ids": [
      0
    ],
    "name": "namespace_memory:kube_pod_container_resource_limits:sum",
    "note": "",
    "prod": "metric",
    "algorithm": "",
    "algo_params": null,
    "delay": 0,
    "severity": 0,
    "severities": [
      0
    ],
    "disabled": 1,
    "prom_for_duration": 0,
    "prom_ql": "sum by (namespace, cluster) (\n    sum by (namespace, pod, cluster) (\n        max by (namespace, pod, container, cluster) (\n          kube_pod_container_resource_limits{resource=\"memory\",job=\"kube-state-metrics\"}\n        ) * on(namespace, pod, cluster) group_left() max by (namespace, pod, cluster) (\n          kube_pod_status_phase{phase=~\"Pending|Running\"} == 1\n        )\n    )\n)\n",
    "rule_config": {
      "algo_params": null,
      "inhibit": false,
      "prom_ql": "",
      "queries": [
        {
          "prom_ql": "sum by (namespace, cluster) (\n    sum by (namespace, pod, cluster) (\n        max by (namespace, pod, container, cluster) (\n          kube_pod_container_resource_limits{resource=\"memory\",job=\"kube-state-metrics\"}\n        ) * on(namespace, pod, cluster) group_left() max by (namespace, pod, cluster) (\n          kube_pod_status_phase{phase=~\"Pending|Running\"} == 1\n        )\n    )\n)\n",
          "severity": 0
        }
      ],
      "severity": 0
    },
    "prom_eval_interval": 15,
    "enable_stime": "",
    "enable_stimes": [],
    "enable_etime": "",
    "enable_etimes": [],
    "enable_days_of_week": [],
    "enable_days_of_weeks": [
      []
    ],
    "enable_in_bg": 0,
    "notify_recovered": 0,
    "notify_channels": [],
    "notify_repeat_step": 0,
    "notify_max_number": 0,
    "recover_duration": 0,
    "callbacks": [],
    "runbook_url": "",
    "append_tags": [],
    "annotations": null
  },
  {
    "cate": "prometheus",
    "datasource_ids": [
      0
    ],
    "name": "namespace_memory:kube_pod_container_resource_requests:sum",
    "note": "",
    "prod": "metric",
    "algorithm": "",
    "algo_params": null,
    "delay": 0,
    "severity": 0,
    "severities": [
      0
    ],
    "disabled": 1,
    "prom_for_duration": 0,
    "prom_ql": "sum by (namespace, cluster) (\n    sum by (namespace, pod, cluster) (\n        max by (namespace, pod, container, cluster) (\n          kube_pod_container_resource_requests{resource=\"memory\",job=\"kube-state-metrics\"}\n        ) * on(namespace, pod, cluster) group_left() max by (namespace, pod, cluster) (\n          kube_pod_status_phase{phase=~\"Pending|Running\"} == 1\n        )\n    )\n)\n",
    "rule_config": {
      "algo_params": null,
      "inhibit": false,
      "prom_ql": "",
      "queries": [
        {
          "prom_ql": "sum by (namespace, cluster) (\n    sum by (namespace, pod, cluster) (\n        max by (namespace, pod, container, cluster) (\n          kube_pod_container_resource_requests{resource=\"memory\",job=\"kube-state-metrics\"}\n        ) * on(namespace, pod, cluster) group_left() max by (namespace, pod, cluster) (\n          kube_pod_status_phase{phase=~\"Pending|Running\"} == 1\n        )\n    )\n)\n",
          "severity": 0
        }
      ],
      "severity": 0
    },
    "prom_eval_interval": 15,
    "enable_stime": "",
    "enable_stimes": [],
    "enable_etime": "",
    "enable_etimes": [],
    "enable_days_of_week": [],
    "enable_days_of_weeks": [
      []
    ],
    "enable_in_bg": 0,
    "notify_recovered": 0,
    "notify_channels": [],
    "notify_repeat_step": 0,
    "notify_max_number": 0,
    "recover_duration": 0,
    "callbacks": [],
    "runbook_url": "",
    "append_tags": [],
    "annotations": null
  },
  {
    "cate": "prometheus",
    "datasource_ids": [
      0
    ],
    "name": "namespace_workload_pod:kube_pod_owner:relabel",
    "note": "",
    "prod": "metric",
    "algorithm": "",
    "algo_params": null,
    "delay": 0,
    "severity": 0,
    "severities": [
      0
    ],
    "disabled": 1,
    "prom_for_duration": 0,
    "prom_ql": "max by (cluster, namespace, workload, pod) (\n  label_replace(\n    label_replace(\n      kube_pod_owner{job=\"kube-state-metrics\", owner_kind=\"ReplicaSet\"},\n      \"replicaset\", \"$1\", \"owner_name\", \"(.*)\"\n    ) * on(replicaset, namespace) group_left(owner_name) topk by(replicaset, namespace) (\n      1, max by (replicaset, namespace, owner_name) (\n        kube_replicaset_owner{job=\"kube-state-metrics\"}\n      )\n    ),\n    \"workload\", \"$1\", \"owner_name\", \"(.*)\"\n  )\n)\n",
    "rule_config": {
      "algo_params": null,
      "inhibit": false,
      "prom_ql": "",
      "queries": [
        {
          "prom_ql": "max by (cluster, namespace, workload, pod) (\n  label_replace(\n    label_replace(\n      kube_pod_owner{job=\"kube-state-metrics\", owner_kind=\"ReplicaSet\"},\n      \"replicaset\", \"$1\", \"owner_name\", \"(.*)\"\n    ) * on(replicaset, namespace) group_left(owner_name) topk by(replicaset, namespace) (\n      1, max by (replicaset, namespace, owner_name) (\n        kube_replicaset_owner{job=\"kube-state-metrics\"}\n      )\n    ),\n    \"workload\", \"$1\", \"owner_name\", \"(.*)\"\n  )\n)\n",
          "severity": 0
        }
      ],
      "severity": 0
    },
    "prom_eval_interval": 15,
    "enable_stime": "",
    "enable_stimes": [],
    "enable_etime": "",
    "enable_etimes": [],
    "enable_days_of_week": [],
    "enable_days_of_weeks": [
      []
    ],
    "enable_in_bg": 0,
    "notify_recovered": 0,
    "notify_channels": [],
    "notify_repeat_step": 0,
    "notify_max_number": 0,
    "recover_duration": 0,
    "callbacks": [],
    "runbook_url": "",
    "append_tags": [
      "workload_type=deployment"
    ],
    "annotations": null
  },
  {
    "cate": "prometheus",
    "datasource_ids": [
      0
    ],
    "name": "node:node_cpu_utilization:ratio_rate5m",
    "note": "",
    "prod": "metric",
    "algorithm": "",
    "algo_params": null,
    "delay": 0,
    "severity": 0,
    "severities": [
      0
    ],
    "disabled": 1,
    "prom_for_duration": 0,
    "prom_ql": "avg by (cluster, node) (\n  sum without (mode) (\n    rate(node_cpu_seconds_total{mode!=\"idle\",mode!=\"iowait\",mode!=\"steal\",job=\"node-exporter\"}[5m])\n  )\n)\n",
    "rule_config": {
      "algo_params": null,
      "inhibit": false,
      "prom_ql": "",
      "queries": [
        {
          "prom_ql": "avg by (cluster, node) (\n  sum without (mode) (\n    rate(node_cpu_seconds_total{mode!=\"idle\",mode!=\"iowait\",mode!=\"steal\",job=\"node-exporter\"}[5m])\n  )\n)\n",
          "severity": 0
        }
      ],
      "severity": 0
    },
    "prom_eval_interval": 15,
    "enable_stime": "",
    "enable_stimes": [],
    "enable_etime": "",
    "enable_etimes": [],
    "enable_days_of_week": [],
    "enable_days_of_weeks": [
      []
    ],
    "enable_in_bg": 0,
    "notify_recovered": 0,
    "notify_channels": [],
    "notify_repeat_step": 0,
    "notify_max_number": 0,
    "recover_duration": 0,
    "callbacks": [],
    "runbook_url": "",
    "append_tags": [],
    "annotations": null
  },
  {
    "cate": "prometheus",
    "datasource_ids": [
      0
    ],
    "name": "node:node_num_cpu:sum",
    "note": "",
    "prod": "metric",
    "algorithm": "",
    "algo_params": null,
    "delay": 0,
    "severity": 0,
    "severities": [
      0
    ],
    "disabled": 1,
    "prom_for_duration": 0,
    "prom_ql": "count by (cluster, node) (\n  node_cpu_seconds_total{mode=\"idle\",job=\"node-exporter\"}\n  * on (namespace, pod) group_left(node)\n  topk by(namespace, pod) (1, node_namespace_pod:kube_pod_info:)\n)\n",
    "rule_config": {
      "algo_params": null,
      "inhibit": false,
      "prom_ql": "",
      "queries": [
        {
          "prom_ql": "count by (cluster, node) (\n  node_cpu_seconds_total{mode=\"idle\",job=\"node-exporter\"}\n  * on (namespace, pod) group_left(node)\n  topk by(namespace, pod) (1, node_namespace_pod:kube_pod_info:)\n)\n",
          "severity": 0
        }
      ],
      "severity": 0
    },
    "prom_eval_interval": 15,
    "enable_stime": "",
    "enable_stimes": [],
    "enable_etime": "",
    "enable_etimes": [],
    "enable_days_of_week": [],
    "enable_days_of_weeks": [
      []
    ],
    "enable_in_bg": 0,
    "notify_recovered": 0,
    "notify_channels": [],
    "notify_repeat_step": 0,
    "notify_max_number": 0,
    "recover_duration": 0,
    "callbacks": [],
    "runbook_url": "",
    "append_tags": [],
    "annotations": null
  },
  {
    "cate": "prometheus",
    "datasource_ids": [
      0
    ],
    "name": "node_namespace_pod:kube_pod_info:",
    "note": "",
    "prod": "metric",
    "algorithm": "",
    "algo_params": null,
    "delay": 0,
    "severity": 0,
    "severities": [
      0
    ],
    "disabled": 1,
    "prom_for_duration": 0,
    "prom_ql": "topk by(cluster, namespace, pod) (1,\n  max by (cluster, node, namespace, pod) (\n    label_replace(kube_pod_info{job=\"kube-state-metrics\",node!=\"\"}, \"pod\", \"$1\", \"pod\", \"(.*)\")\n))\n",
    "rule_config": {
      "algo_params": null,
      "inhibit": false,
      "prom_ql": "",
      "queries": [
        {
          "prom_ql": "topk by(cluster, namespace, pod) (1,\n  max by (cluster, node, namespace, pod) (\n    label_replace(kube_pod_info{job=\"kube-state-metrics\",node!=\"\"}, \"pod\", \"$1\", \"pod\", \"(.*)\")\n))\n",
          "severity": 0
        }
      ],
      "severity": 0
    },
    "prom_eval_interval": 15,
    "enable_stime": "",
    "enable_stimes": [],
    "enable_etime": "",
    "enable_etimes": [],
    "enable_days_of_week": [],
    "enable_days_of_weeks": [
      []
    ],
    "enable_in_bg": 0,
    "notify_recovered": 0,
    "notify_channels": [],
    "notify_repeat_step": 0,
    "notify_max_number": 0,
    "recover_duration": 0,
    "callbacks": [],
    "runbook_url": "",
    "append_tags": [],
    "annotations": null
  },
  {
    "cate": "prometheus",
    "datasource_ids": [
      0
    ],
    "name": "node_namespace_pod_container:container_cpu_usage_seconds_total:sum_irate",
    "note": "",
    "prod": "metric",
    "algorithm": "",
    "algo_params": null,
    "delay": 0,
    "severity": 0,
    "severities": [
      0
    ],
    "disabled": 1,
    "prom_for_duration": 0,
    "prom_ql": "sum by (cluster, namespace, pod, container) (\n  irate(container_cpu_usage_seconds_total{job=\"kubelet\", metrics_path=\"/metrics/cadvisor\", image!=\"\"}[5m])\n) * on (cluster, namespace, pod) group_left(node) topk by (cluster, namespace, pod) (\n  1, max by(cluster, namespace, pod, node) (kube_pod_info{node!=\"\"})\n)\n",
    "rule_config": {
      "algo_params": null,
      "inhibit": false,
      "prom_ql": "",
      "queries": [
        {
          "prom_ql": "sum by (cluster, namespace, pod, container) (\n  irate(container_cpu_usage_seconds_total{job=\"kubelet\", metrics_path=\"/metrics/cadvisor\", image!=\"\"}[5m])\n) * on (cluster, namespace, pod) group_left(node) topk by (cluster, namespace, pod) (\n  1, max by(cluster, namespace, pod, node) (kube_pod_info{node!=\"\"})\n)\n",
          "severity": 0
        }
      ],
      "severity": 0
    },
    "prom_eval_interval": 15,
    "enable_stime": "",
    "enable_stimes": [],
    "enable_etime": "",
    "enable_etimes": [],
    "enable_days_of_week": [],
    "enable_days_of_weeks": [
      []
    ],
    "enable_in_bg": 0,
    "notify_recovered": 0,
    "notify_channels": [],
    "notify_repeat_step": 0,
    "notify_max_number": 0,
    "recover_duration": 0,
    "callbacks": [],
    "runbook_url": "",
    "append_tags": [],
    "annotations": null
  },
  {
    "cate": "prometheus",
    "datasource_ids": [
      0
    ],
    "name": "node_namespace_pod_container:container_memory_cache",
    "note": "",
    "prod": "metric",
    "algorithm": "",
    "algo_params": null,
    "delay": 0,
    "severity": 0,
    "severities": [
      0
    ],
    "disabled": 1,
    "prom_for_duration": 0,
    "prom_ql": "container_memory_cache{job=\"kubelet\", metrics_path=\"/metrics/cadvisor\", image!=\"\"}\n* on (cluster, namespace, pod) group_left(node) topk by(cluster, namespace, pod) (1,\n  max by(cluster, namespace, pod, node) (kube_pod_info{node!=\"\"})\n)\n",
    "rule_config": {
      "algo_params": null,
      "inhibit": false,
      "prom_ql": "",
      "queries": [
        {
          "prom_ql": "container_memory_cache{job=\"kubelet\", metrics_path=\"/metrics/cadvisor\", image!=\"\"}\n* on (cluster, namespace, pod) group_left(node) topk by(cluster, namespace, pod) (1,\n  max by(cluster, namespace, pod, node) (kube_pod_info{node!=\"\"})\n)\n",
          "severity": 0
        }
      ],
      "severity": 0
    },
    "prom_eval_interval": 15,
    "enable_stime": "",
    "enable_stimes": [],
    "enable_etime": "",
    "enable_etimes": [],
    "enable_days_of_week": [],
    "enable_days_of_weeks": [
      []
    ],
    "enable_in_bg": 0,
    "notify_recovered": 0,
    "notify_channels": [],
    "notify_repeat_step": 0,
    "notify_max_number": 0,
    "recover_duration": 0,
    "callbacks": [],
    "runbook_url": "",
    "append_tags": [],
    "annotations": null
  },
  {
    "cate": "prometheus",
    "datasource_ids": [
      0
    ],
    "name": "node_namespace_pod_container:container_memory_rss",
    "note": "",
    "prod": "metric",
    "algorithm": "",
    "algo_params": null,
    "delay": 0,
    "severity": 0,
    "severities": [
      0
    ],
    "disabled": 1,
    "prom_for_duration": 0,
    "prom_ql": "container_memory_rss{job=\"kubelet\", metrics_path=\"/metrics/cadvisor\", image!=\"\"}\n* on (cluster, namespace, pod) group_left(node) topk by(cluster, namespace, pod) (1,\n  max by(cluster, namespace, pod, node) (kube_pod_info{node!=\"\"})\n)\n",
    "rule_config": {
      "algo_params": null,
      "inhibit": false,
      "prom_ql": "",
      "queries": [
        {
          "prom_ql": "container_memory_rss{job=\"kubelet\", metrics_path=\"/metrics/cadvisor\", image!=\"\"}\n* on (cluster, namespace, pod) group_left(node) topk by(cluster, namespace, pod) (1,\n  max by(cluster, namespace, pod, node) (kube_pod_info{node!=\"\"})\n)\n",
          "severity": 0
        }
      ],
      "severity": 0
    },
    "prom_eval_interval": 15,
    "enable_stime": "",
    "enable_stimes": [],
    "enable_etime": "",
    "enable_etimes": [],
    "enable_days_of_week": [],
    "enable_days_of_weeks": [
      []
    ],
    "enable_in_bg": 0,
    "notify_recovered": 0,
    "notify_channels": [],
    "notify_repeat_step": 0,
    "notify_max_number": 0,
    "recover_duration": 0,
    "callbacks": [],
    "runbook_url": "",
    "append_tags": [],
    "annotations": null
  },
  {
    "cate": "prometheus",
    "datasource_ids": [
      0
    ],
    "name": "node_namespace_pod_container:container_memory_swap",
    "note": "",
    "prod": "metric",
    "algorithm": "",
    "algo_params": null,
    "delay": 0,
    "severity": 0,
    "severities": [
      0
    ],
    "disabled": 1,
    "prom_for_duration": 0,
    "prom_ql": "container_memory_swap{job=\"kubelet\", metrics_path=\"/metrics/cadvisor\", image!=\"\"}\n* on (cluster, namespace, pod) group_left(node) topk by(cluster, namespace, pod) (1,\n  max by(cluster, namespace, pod, node) (kube_pod_info{node!=\"\"})\n)\n",
    "rule_config": {
      "algo_params": null,
      "inhibit": false,
      "prom_ql": "",
      "queries": [
        {
          "prom_ql": "container_memory_swap{job=\"kubelet\", metrics_path=\"/metrics/cadvisor\", image!=\"\"}\n* on (cluster, namespace, pod) group_left(node) topk by(cluster, namespace, pod) (1,\n  max by(cluster, namespace, pod, node) (kube_pod_info{node!=\"\"})\n)\n",
          "severity": 0
        }
      ],
      "severity": 0
    },
    "prom_eval_interval": 15,
    "enable_stime": "",
    "enable_stimes": [],
    "enable_etime": "",
    "enable_etimes": [],
    "enable_days_of_week": [],
    "enable_days_of_weeks": [
      []
    ],
    "enable_in_bg": 0,
    "notify_recovered": 0,
    "notify_channels": [],
    "notify_repeat_step": 0,
    "notify_max_number": 0,
    "recover_duration": 0,
    "callbacks": [],
    "runbook_url": "",
    "append_tags": [],
    "annotations": null
  },
  {
    "cate": "prometheus",
    "datasource_ids": [
      0
    ],
    "name": "node_namespace_pod_container:container_memory_working_set_bytes",
    "note": "",
    "prod": "metric",
    "algorithm": "",
    "algo_params": null,
    "delay": 0,
    "severity": 0,
    "severities": [
      0
    ],
    "disabled": 1,
    "prom_for_duration": 0,
    "prom_ql": "container_memory_working_set_bytes{job=\"kubelet\", metrics_path=\"/metrics/cadvisor\", image!=\"\"}\n* on (cluster, namespace, pod) group_left(node) topk by(cluster, namespace, pod) (1,\n  max by(cluster, namespace, pod, node) (kube_pod_info{node!=\"\"})\n)\n",
    "rule_config": {
      "algo_params": null,
      "inhibit": false,
      "prom_ql": "",
      "queries": [
        {
          "prom_ql": "container_memory_working_set_bytes{job=\"kubelet\", metrics_path=\"/metrics/cadvisor\", image!=\"\"}\n* on (cluster, namespace, pod) group_left(node) topk by(cluster, namespace, pod) (1,\n  max by(cluster, namespace, pod, node) (kube_pod_info{node!=\"\"})\n)\n",
          "severity": 0
        }
      ],
      "severity": 0
    },
    "prom_eval_interval": 15,
    "enable_stime": "",
    "enable_stimes": [],
    "enable_etime": "",
    "enable_etimes": [],
    "enable_days_of_week": [],
    "enable_days_of_weeks": [
      []
    ],
    "enable_in_bg": 0,
    "notify_recovered": 0,
    "notify_channels": [],
    "notify_repeat_step": 0,
    "notify_max_number": 0,
    "recover_duration": 0,
    "callbacks": [],
    "runbook_url": "",
    "append_tags": [],
    "annotations": null
  },
  {
    "cate": "prometheus",
    "datasource_ids": [
      0
    ],
    "name": "node_quantile:kubelet_pleg_relist_duration_seconds:histogram_quantile",
    "note": "",
    "prod": "metric",
    "algorithm": "",
    "algo_params": null,
    "delay": 0,
    "severity": 0,
    "severities": [
      0
    ],
    "disabled": 1,
    "prom_for_duration": 0,
    "prom_ql": "histogram_quantile(0.99, sum(rate(kubelet_pleg_relist_duration_seconds_bucket{job=\"kubelet\", metrics_path=\"/metrics\"}[5m])) by (cluster, instance, le) * on(cluster, instance) group_left(node) kubelet_node_name{job=\"kubelet\", metrics_path=\"/metrics\"})\n",
    "rule_config": {
      "algo_params": null,
      "inhibit": false,
      "prom_ql": "",
      "queries": [
        {
          "prom_ql": "histogram_quantile(0.99, sum(rate(kubelet_pleg_relist_duration_seconds_bucket{job=\"kubelet\", metrics_path=\"/metrics\"}[5m])) by (cluster, instance, le) * on(cluster, instance) group_left(node) kubelet_node_name{job=\"kubelet\", metrics_path=\"/metrics\"})\n",
          "severity": 0
        }
      ],
      "severity": 0
    },
    "prom_eval_interval": 15,
    "enable_stime": "",
    "enable_stimes": [],
    "enable_etime": "",
    "enable_etimes": [],
    "enable_days_of_week": [],
    "enable_days_of_weeks": [
      []
    ],
    "enable_in_bg": 0,
    "notify_recovered": 0,
    "notify_channels": [],
    "notify_repeat_step": 0,
    "notify_max_number": 0,
    "recover_duration": 0,
    "callbacks": [],
    "runbook_url": "",
    "append_tags": [
      "quantile=0.99"
    ],
    "annotations": null
  }
]