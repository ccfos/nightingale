[
  {
    "cate": "prometheus",
    "datasource_ids": [
      0
    ],
    "name": "ConfigReloaderSidecarErrors",
    "note": "Errors encountered while the {{$labels.pod}} config-reloader sidecar attempts to sync config in {{$labels.namespace}} namespace.\nAs a result, configuration for service running in {{$labels.pod}} may be stale and cannot be updated anymore.",
    "prod": "metric",
    "algorithm": "",
    "algo_params": null,
    "delay": 0,
    "severity": 2,
    "severities": [
      2
    ],
    "disabled": 1,
    "prom_for_duration": 600,
    "prom_ql": "max_over_time(reloader_last_reload_successful{namespace=~\".+\"}[5m]) == 0\n",
    "rule_config": {
      "algo_params": null,
      "inhibit": false,
      "prom_ql": "",
      "queries": [
        {
          "prom_ql": "max_over_time(reloader_last_reload_successful{namespace=~\".+\"}[5m]) == 0\n",
          "severity": 2
        }
      ],
      "severity": 0
    },
    "prom_eval_interval": 15,
    "enable_stime": "00:00",
    "enable_stimes": [
      "00:00"
    ],
    "enable_etime": "23:59",
    "enable_etimes": [
      "23:59"
    ],
    "enable_days_of_week": [
      "1",
      "2",
      "3",
      "4",
      "5",
      "6",
      "0"
    ],
    "enable_days_of_weeks": [
      [
        "1",
        "2",
        "3",
        "4",
        "5",
        "6",
        "0"
      ]
    ],
    "enable_in_bg": 0,
    "notify_recovered": 1,
    "notify_channels": [],
    "notify_repeat_step": 60,
    "notify_max_number": 0,
    "recover_duration": 0,
    "callbacks": [],
    "runbook_url": "",
    "append_tags": [],
    "annotations": null
  },
  {
    "cate": "prometheus",
    "datasource_ids": [
      0
    ],
    "name": "PrometheusBadConfig",
    "note": "Prometheus {{$labels.namespace}}/{{$labels.pod}} has failed to reload its configuration.",
    "prod": "metric",
    "algorithm": "",
    "algo_params": null,
    "delay": 0,
    "severity": 1,
    "severities": [
      1
    ],
    "disabled": 1,
    "prom_for_duration": 600,
    "prom_ql": "# Without max_over_time, failed scrapes could create false negatives, see\n# https://www.robustperception.io/alerting-on-gauges-in-prometheus-2-0 for details.\nmax_over_time(prometheus_config_last_reload_successful{job=\"prometheus-k8s\",namespace=\"monitoring\"}[5m]) == 0\n",
    "rule_config": {
      "algo_params": null,
      "inhibit": false,
      "prom_ql": "",
      "queries": [
        {
          "prom_ql": "# Without max_over_time, failed scrapes could create false negatives, see\n# https://www.robustperception.io/alerting-on-gauges-in-prometheus-2-0 for details.\nmax_over_time(prometheus_config_last_reload_successful{job=\"prometheus-k8s\",namespace=\"monitoring\"}[5m]) == 0\n",
          "severity": 1
        }
      ],
      "severity": 0
    },
    "prom_eval_interval": 15,
    "enable_stime": "00:00",
    "enable_stimes": [
      "00:00"
    ],
    "enable_etime": "23:59",
    "enable_etimes": [
      "23:59"
    ],
    "enable_days_of_week": [
      "1",
      "2",
      "3",
      "4",
      "5",
      "6",
      "0"
    ],
    "enable_days_of_weeks": [
      [
        "1",
        "2",
        "3",
        "4",
        "5",
        "6",
        "0"
      ]
    ],
    "enable_in_bg": 0,
    "notify_recovered": 1,
    "notify_channels": [],
    "notify_repeat_step": 60,
    "notify_max_number": 0,
    "recover_duration": 0,
    "callbacks": [],
    "runbook_url": "",
    "append_tags": [],
    "annotations": null
  },
  {
    "cate": "prometheus",
    "datasource_ids": [
      0
    ],
    "name": "PrometheusDuplicateTimestamps",
    "note": "Prometheus {{$labels.namespace}}/{{$labels.pod}} is dropping {{ printf \"%.4g\" $value  }} samples/s with different values but duplicated timestamp.",
    "prod": "metric",
    "algorithm": "",
    "algo_params": null,
    "delay": 0,
    "severity": 2,
    "severities": [
      2
    ],
    "disabled": 1,
    "prom_for_duration": 600,
    "prom_ql": "rate(prometheus_target_scrapes_sample_duplicate_timestamp_total{job=\"prometheus-k8s\",namespace=\"monitoring\"}[5m]) > 0\n",
    "rule_config": {
      "algo_params": null,
      "inhibit": false,
      "prom_ql": "",
      "queries": [
        {
          "prom_ql": "rate(prometheus_target_scrapes_sample_duplicate_timestamp_total{job=\"prometheus-k8s\",namespace=\"monitoring\"}[5m]) > 0\n",
          "severity": 2
        }
      ],
      "severity": 0
    },
    "prom_eval_interval": 15,
    "enable_stime": "00:00",
    "enable_stimes": [
      "00:00"
    ],
    "enable_etime": "23:59",
    "enable_etimes": [
      "23:59"
    ],
    "enable_days_of_week": [
      "1",
      "2",
      "3",
      "4",
      "5",
      "6",
      "0"
    ],
    "enable_days_of_weeks": [
      [
        "1",
        "2",
        "3",
        "4",
        "5",
        "6",
        "0"
      ]
    ],
    "enable_in_bg": 0,
    "notify_recovered": 1,
    "notify_channels": [],
    "notify_repeat_step": 60,
    "notify_max_number": 0,
    "recover_duration": 0,
    "callbacks": [],
    "runbook_url": "",
    "append_tags": [],
    "annotations": null
  },
  {
    "cate": "prometheus",
    "datasource_ids": [
      0
    ],
    "name": "PrometheusErrorSendingAlertsToAnyAlertmanager",
    "note": "{{ printf \"%.1f\" $value }}% minimum errors while sending alerts from Prometheus {{$labels.namespace}}/{{$labels.pod}} to any Alertmanager.",
    "prod": "metric",
    "algorithm": "",
    "algo_params": null,
    "delay": 0,
    "severity": 1,
    "severities": [
      1
    ],
    "disabled": 1,
    "prom_for_duration": 900,
    "prom_ql": "min without (alertmanager) (\n  rate(prometheus_notifications_errors_total{job=\"prometheus-k8s\",namespace=\"monitoring\",alertmanager!~``}[5m])\n/\n  rate(prometheus_notifications_sent_total{job=\"prometheus-k8s\",namespace=\"monitoring\",alertmanager!~``}[5m])\n)\n* 100\n> 3\n",
    "rule_config": {
      "algo_params": null,
      "inhibit": false,
      "prom_ql": "",
      "queries": [
        {
          "prom_ql": "min without (alertmanager) (\n  rate(prometheus_notifications_errors_total{job=\"prometheus-k8s\",namespace=\"monitoring\",alertmanager!~``}[5m])\n/\n  rate(prometheus_notifications_sent_total{job=\"prometheus-k8s\",namespace=\"monitoring\",alertmanager!~``}[5m])\n)\n* 100\n> 3\n",
          "severity": 1
        }
      ],
      "severity": 0
    },
    "prom_eval_interval": 15,
    "enable_stime": "00:00",
    "enable_stimes": [
      "00:00"
    ],
    "enable_etime": "23:59",
    "enable_etimes": [
      "23:59"
    ],
    "enable_days_of_week": [
      "1",
      "2",
      "3",
      "4",
      "5",
      "6",
      "0"
    ],
    "enable_days_of_weeks": [
      [
        "1",
        "2",
        "3",
        "4",
        "5",
        "6",
        "0"
      ]
    ],
    "enable_in_bg": 0,
    "notify_recovered": 1,
    "notify_channels": [],
    "notify_repeat_step": 60,
    "notify_max_number": 0,
    "recover_duration": 0,
    "callbacks": [],
    "runbook_url": "",
    "append_tags": [],
    "annotations": null
  },
  {
    "cate": "prometheus",
    "datasource_ids": [
      0
    ],
    "name": "PrometheusErrorSendingAlertsToSomeAlertmanagers",
    "note": "{{ printf \"%.1f\" $value }}% errors while sending alerts from Prometheus {{$labels.namespace}}/{{$labels.pod}} to Alertmanager {{$labels.alertmanager}}.",
    "prod": "metric",
    "algorithm": "",
    "algo_params": null,
    "delay": 0,
    "severity": 2,
    "severities": [
      2
    ],
    "disabled": 1,
    "prom_for_duration": 900,
    "prom_ql": "(\n  rate(prometheus_notifications_errors_total{job=\"prometheus-k8s\",namespace=\"monitoring\"}[5m])\n/\n  rate(prometheus_notifications_sent_total{job=\"prometheus-k8s\",namespace=\"monitoring\"}[5m])\n)\n* 100\n> 1\n",
    "rule_config": {
      "algo_params": null,
      "inhibit": false,
      "prom_ql": "",
      "queries": [
        {
          "prom_ql": "(\n  rate(prometheus_notifications_errors_total{job=\"prometheus-k8s\",namespace=\"monitoring\"}[5m])\n/\n  rate(prometheus_notifications_sent_total{job=\"prometheus-k8s\",namespace=\"monitoring\"}[5m])\n)\n* 100\n> 1\n",
          "severity": 2
        }
      ],
      "severity": 0
    },
    "prom_eval_interval": 15,
    "enable_stime": "00:00",
    "enable_stimes": [
      "00:00"
    ],
    "enable_etime": "23:59",
    "enable_etimes": [
      "23:59"
    ],
    "enable_days_of_week": [
      "1",
      "2",
      "3",
      "4",
      "5",
      "6",
      "0"
    ],
    "enable_days_of_weeks": [
      [
        "1",
        "2",
        "3",
        "4",
        "5",
        "6",
        "0"
      ]
    ],
    "enable_in_bg": 0,
    "notify_recovered": 1,
    "notify_channels": [],
    "notify_repeat_step": 60,
    "notify_max_number": 0,
    "recover_duration": 0,
    "callbacks": [],
    "runbook_url": "",
    "append_tags": [],
    "annotations": null
  },
  {
    "cate": "prometheus",
    "datasource_ids": [
      0
    ],
    "name": "PrometheusHighQueryLoad",
    "note": "Prometheus {{$labels.namespace}}/{{$labels.pod}} query API has less than 20% available capacity in its query engine for the last 15 minutes.",
    "prod": "metric",
    "algorithm": "",
    "algo_params": null,
    "delay": 0,
    "severity": 2,
    "severities": [
      2
    ],
    "disabled": 1,
    "prom_for_duration": 900,
    "prom_ql": "avg_over_time(prometheus_engine_queries{job=\"prometheus-k8s\",namespace=\"monitoring\"}[5m]) / max_over_time(prometheus_engine_queries_concurrent_max{job=\"prometheus-k8s\",namespace=\"monitoring\"}[5m]) > 0.8\n",
    "rule_config": {
      "algo_params": null,
      "inhibit": false,
      "prom_ql": "",
      "queries": [
        {
          "prom_ql": "avg_over_time(prometheus_engine_queries{job=\"prometheus-k8s\",namespace=\"monitoring\"}[5m]) / max_over_time(prometheus_engine_queries_concurrent_max{job=\"prometheus-k8s\",namespace=\"monitoring\"}[5m]) > 0.8\n",
          "severity": 2
        }
      ],
      "severity": 0
    },
    "prom_eval_interval": 15,
    "enable_stime": "00:00",
    "enable_stimes": [
      "00:00"
    ],
    "enable_etime": "23:59",
    "enable_etimes": [
      "23:59"
    ],
    "enable_days_of_week": [
      "1",
      "2",
      "3",
      "4",
      "5",
      "6",
      "0"
    ],
    "enable_days_of_weeks": [
      [
        "1",
        "2",
        "3",
        "4",
        "5",
        "6",
        "0"
      ]
    ],
    "enable_in_bg": 0,
    "notify_recovered": 1,
    "notify_channels": [],
    "notify_repeat_step": 60,
    "notify_max_number": 0,
    "recover_duration": 0,
    "callbacks": [],
    "runbook_url": "",
    "append_tags": [],
    "annotations": null
  },
  {
    "cate": "prometheus",
    "datasource_ids": [
      0
    ],
    "name": "PrometheusLabelLimitHit",
    "note": "Prometheus {{$labels.namespace}}/{{$labels.pod}} has dropped {{ printf \"%.0f\" $value }} targets because some samples exceeded the configured label_limit, label_name_length_limit or label_value_length_limit.",
    "prod": "metric",
    "algorithm": "",
    "algo_params": null,
    "delay": 0,
    "severity": 2,
    "severities": [
      2
    ],
    "disabled": 1,
    "prom_for_duration": 900,
    "prom_ql": "increase(prometheus_target_scrape_pool_exceeded_label_limits_total{job=\"prometheus-k8s\",namespace=\"monitoring\"}[5m]) > 0\n",
    "rule_config": {
      "algo_params": null,
      "inhibit": false,
      "prom_ql": "",
      "queries": [
        {
          "prom_ql": "increase(prometheus_target_scrape_pool_exceeded_label_limits_total{job=\"prometheus-k8s\",namespace=\"monitoring\"}[5m]) > 0\n",
          "severity": 2
        }
      ],
      "severity": 0
    },
    "prom_eval_interval": 15,
    "enable_stime": "00:00",
    "enable_stimes": [
      "00:00"
    ],
    "enable_etime": "23:59",
    "enable_etimes": [
      "23:59"
    ],
    "enable_days_of_week": [
      "1",
      "2",
      "3",
      "4",
      "5",
      "6",
      "0"
    ],
    "enable_days_of_weeks": [
      [
        "1",
        "2",
        "3",
        "4",
        "5",
        "6",
        "0"
      ]
    ],
    "enable_in_bg": 0,
    "notify_recovered": 1,
    "notify_channels": [],
    "notify_repeat_step": 60,
    "notify_max_number": 0,
    "recover_duration": 0,
    "callbacks": [],
    "runbook_url": "",
    "append_tags": [],
    "annotations": null
  },
  {
    "cate": "prometheus",
    "datasource_ids": [
      0
    ],
    "name": "PrometheusMissingRuleEvaluations",
    "note": "Prometheus {{$labels.namespace}}/{{$labels.pod}} has missed {{ printf \"%.0f\" $value }} rule group evaluations in the last 5m.",
    "prod": "metric",
    "algorithm": "",
    "algo_params": null,
    "delay": 0,
    "severity": 2,
    "severities": [
      2
    ],
    "disabled": 1,
    "prom_for_duration": 900,
    "prom_ql": "increase(prometheus_rule_group_iterations_missed_total{job=\"prometheus-k8s\",namespace=\"monitoring\"}[5m]) > 0\n",
    "rule_config": {
      "algo_params": null,
      "inhibit": false,
      "prom_ql": "",
      "queries": [
        {
          "prom_ql": "increase(prometheus_rule_group_iterations_missed_total{job=\"prometheus-k8s\",namespace=\"monitoring\"}[5m]) > 0\n",
          "severity": 2
        }
      ],
      "severity": 0
    },
    "prom_eval_interval": 15,
    "enable_stime": "00:00",
    "enable_stimes": [
      "00:00"
    ],
    "enable_etime": "23:59",
    "enable_etimes": [
      "23:59"
    ],
    "enable_days_of_week": [
      "1",
      "2",
      "3",
      "4",
      "5",
      "6",
      "0"
    ],
    "enable_days_of_weeks": [
      [
        "1",
        "2",
        "3",
        "4",
        "5",
        "6",
        "0"
      ]
    ],
    "enable_in_bg": 0,
    "notify_recovered": 1,
    "notify_channels": [],
    "notify_repeat_step": 60,
    "notify_max_number": 0,
    "recover_duration": 0,
    "callbacks": [],
    "runbook_url": "",
    "append_tags": [],
    "annotations": null
  },
  {
    "cate": "prometheus",
    "datasource_ids": [
      0
    ],
    "name": "PrometheusNotConnectedToAlertmanagers",
    "note": "Prometheus {{$labels.namespace}}/{{$labels.pod}} is not connected to any Alertmanagers.",
    "prod": "metric",
    "algorithm": "",
    "algo_params": null,
    "delay": 0,
    "severity": 2,
    "severities": [
      2
    ],
    "disabled": 1,
    "prom_for_duration": 600,
    "prom_ql": "# Without max_over_time, failed scrapes could create false negatives, see\n# https://www.robustperception.io/alerting-on-gauges-in-prometheus-2-0 for details.\nmax_over_time(prometheus_notifications_alertmanagers_discovered{job=\"prometheus-k8s\",namespace=\"monitoring\"}[5m]) < 1\n",
    "rule_config": {
      "algo_params": null,
      "inhibit": false,
      "prom_ql": "",
      "queries": [
        {
          "prom_ql": "# Without max_over_time, failed scrapes could create false negatives, see\n# https://www.robustperception.io/alerting-on-gauges-in-prometheus-2-0 for details.\nmax_over_time(prometheus_notifications_alertmanagers_discovered{job=\"prometheus-k8s\",namespace=\"monitoring\"}[5m]) < 1\n",
          "severity": 2
        }
      ],
      "severity": 0
    },
    "prom_eval_interval": 15,
    "enable_stime": "00:00",
    "enable_stimes": [
      "00:00"
    ],
    "enable_etime": "23:59",
    "enable_etimes": [
      "23:59"
    ],
    "enable_days_of_week": [
      "1",
      "2",
      "3",
      "4",
      "5",
      "6",
      "0"
    ],
    "enable_days_of_weeks": [
      [
        "1",
        "2",
        "3",
        "4",
        "5",
        "6",
        "0"
      ]
    ],
    "enable_in_bg": 0,
    "notify_recovered": 1,
    "notify_channels": [],
    "notify_repeat_step": 60,
    "notify_max_number": 0,
    "recover_duration": 0,
    "callbacks": [],
    "runbook_url": "",
    "append_tags": [],
    "annotations": null
  },
  {
    "cate": "prometheus",
    "datasource_ids": [
      0
    ],
    "name": "PrometheusNotificationQueueRunningFull",
    "note": "Alert notification queue of Prometheus {{$labels.namespace}}/{{$labels.pod}} is running full.",
    "prod": "metric",
    "algorithm": "",
    "algo_params": null,
    "delay": 0,
    "severity": 2,
    "severities": [
      2
    ],
    "disabled": 1,
    "prom_for_duration": 900,
    "prom_ql": "# Without min_over_time, failed scrapes could create false negatives, see\n# https://www.robustperception.io/alerting-on-gauges-in-prometheus-2-0 for details.\n(\n  predict_linear(prometheus_notifications_queue_length{job=\"prometheus-k8s\",namespace=\"monitoring\"}[5m], 60 * 30)\n>\n  min_over_time(prometheus_notifications_queue_capacity{job=\"prometheus-k8s\",namespace=\"monitoring\"}[5m])\n)\n",
    "rule_config": {
      "algo_params": null,
      "inhibit": false,
      "prom_ql": "",
      "queries": [
        {
          "prom_ql": "# Without min_over_time, failed scrapes could create false negatives, see\n# https://www.robustperception.io/alerting-on-gauges-in-prometheus-2-0 for details.\n(\n  predict_linear(prometheus_notifications_queue_length{job=\"prometheus-k8s\",namespace=\"monitoring\"}[5m], 60 * 30)\n>\n  min_over_time(prometheus_notifications_queue_capacity{job=\"prometheus-k8s\",namespace=\"monitoring\"}[5m])\n)\n",
          "severity": 2
        }
      ],
      "severity": 0
    },
    "prom_eval_interval": 15,
    "enable_stime": "00:00",
    "enable_stimes": [
      "00:00"
    ],
    "enable_etime": "23:59",
    "enable_etimes": [
      "23:59"
    ],
    "enable_days_of_week": [
      "1",
      "2",
      "3",
      "4",
      "5",
      "6",
      "0"
    ],
    "enable_days_of_weeks": [
      [
        "1",
        "2",
        "3",
        "4",
        "5",
        "6",
        "0"
      ]
    ],
    "enable_in_bg": 0,
    "notify_recovered": 1,
    "notify_channels": [],
    "notify_repeat_step": 60,
    "notify_max_number": 0,
    "recover_duration": 0,
    "callbacks": [],
    "runbook_url": "",
    "append_tags": [],
    "annotations": null
  },
  {
    "cate": "prometheus",
    "datasource_ids": [
      0
    ],
    "name": "PrometheusNotIngestingSamples",
    "note": "Prometheus {{$labels.namespace}}/{{$labels.pod}} is not ingesting samples.",
    "prod": "metric",
    "algorithm": "",
    "algo_params": null,
    "delay": 0,
    "severity": 2,
    "severities": [
      2
    ],
    "disabled": 1,
    "prom_for_duration": 600,
    "prom_ql": "(\n  rate(prometheus_tsdb_head_samples_appended_total{job=\"prometheus-k8s\",namespace=\"monitoring\"}[5m]) <= 0\nand\n  (\n    sum without(scrape_job) (prometheus_target_metadata_cache_entries{job=\"prometheus-k8s\",namespace=\"monitoring\"}) > 0\n  or\n    sum without(rule_group) (prometheus_rule_group_rules{job=\"prometheus-k8s\",namespace=\"monitoring\"}) > 0\n  )\n)\n",
    "rule_config": {
      "algo_params": null,
      "inhibit": false,
      "prom_ql": "",
      "queries": [
        {
          "prom_ql": "(\n  rate(prometheus_tsdb_head_samples_appended_total{job=\"prometheus-k8s\",namespace=\"monitoring\"}[5m]) <= 0\nand\n  (\n    sum without(scrape_job) (prometheus_target_metadata_cache_entries{job=\"prometheus-k8s\",namespace=\"monitoring\"}) > 0\n  or\n    sum without(rule_group) (prometheus_rule_group_rules{job=\"prometheus-k8s\",namespace=\"monitoring\"}) > 0\n  )\n)\n",
          "severity": 2
        }
      ],
      "severity": 0
    },
    "prom_eval_interval": 15,
    "enable_stime": "00:00",
    "enable_stimes": [
      "00:00"
    ],
    "enable_etime": "23:59",
    "enable_etimes": [
      "23:59"
    ],
    "enable_days_of_week": [
      "1",
      "2",
      "3",
      "4",
      "5",
      "6",
      "0"
    ],
    "enable_days_of_weeks": [
      [
        "1",
        "2",
        "3",
        "4",
        "5",
        "6",
        "0"
      ]
    ],
    "enable_in_bg": 0,
    "notify_recovered": 1,
    "notify_channels": [],
    "notify_repeat_step": 60,
    "notify_max_number": 0,
    "recover_duration": 0,
    "callbacks": [],
    "runbook_url": "",
    "append_tags": [],
    "annotations": null
  },
  {
    "cate": "prometheus",
    "datasource_ids": [
      0
    ],
    "name": "PrometheusOutOfOrderTimestamps",
    "note": "Prometheus {{$labels.namespace}}/{{$labels.pod}} is dropping {{ printf \"%.4g\" $value  }} samples/s with timestamps arriving out of order.",
    "prod": "metric",
    "algorithm": "",
    "algo_params": null,
    "delay": 0,
    "severity": 2,
    "severities": [
      2
    ],
    "disabled": 1,
    "prom_for_duration": 600,
    "prom_ql": "rate(prometheus_target_scrapes_sample_out_of_order_total{job=\"prometheus-k8s\",namespace=\"monitoring\"}[5m]) > 0\n",
    "rule_config": {
      "algo_params": null,
      "inhibit": false,
      "prom_ql": "",
      "queries": [
        {
          "prom_ql": "rate(prometheus_target_scrapes_sample_out_of_order_total{job=\"prometheus-k8s\",namespace=\"monitoring\"}[5m]) > 0\n",
          "severity": 2
        }
      ],
      "severity": 0
    },
    "prom_eval_interval": 15,
    "enable_stime": "00:00",
    "enable_stimes": [
      "00:00"
    ],
    "enable_etime": "23:59",
    "enable_etimes": [
      "23:59"
    ],
    "enable_days_of_week": [
      "1",
      "2",
      "3",
      "4",
      "5",
      "6",
      "0"
    ],
    "enable_days_of_weeks": [
      [
        "1",
        "2",
        "3",
        "4",
        "5",
        "6",
        "0"
      ]
    ],
    "enable_in_bg": 0,
    "notify_recovered": 1,
    "notify_channels": [],
    "notify_repeat_step": 60,
    "notify_max_number": 0,
    "recover_duration": 0,
    "callbacks": [],
    "runbook_url": "",
    "append_tags": [],
    "annotations": null
  },
  {
    "cate": "prometheus",
    "datasource_ids": [
      0
    ],
    "name": "PrometheusRemoteStorageFailures",
    "note": "Prometheus {{$labels.namespace}}/{{$labels.pod}} failed to send {{ printf \"%.1f\" $value }}% of the samples to {{ $labels.remote_name}}:{{ $labels.url }}",
    "prod": "metric",
    "algorithm": "",
    "algo_params": null,
    "delay": 0,
    "severity": 1,
    "severities": [
      1
    ],
    "disabled": 1,
    "prom_for_duration": 900,
    "prom_ql": "(\n  (rate(prometheus_remote_storage_failed_samples_total{job=\"prometheus-k8s\",namespace=\"monitoring\"}[5m]) or rate(prometheus_remote_storage_samples_failed_total{job=\"prometheus-k8s\",namespace=\"monitoring\"}[5m]))\n/\n  (\n    (rate(prometheus_remote_storage_failed_samples_total{job=\"prometheus-k8s\",namespace=\"monitoring\"}[5m]) or rate(prometheus_remote_storage_samples_failed_total{job=\"prometheus-k8s\",namespace=\"monitoring\"}[5m]))\n  +\n    (rate(prometheus_remote_storage_succeeded_samples_total{job=\"prometheus-k8s\",namespace=\"monitoring\"}[5m]) or rate(prometheus_remote_storage_samples_total{job=\"prometheus-k8s\",namespace=\"monitoring\"}[5m]))\n  )\n)\n* 100\n> 1\n",
    "rule_config": {
      "algo_params": null,
      "inhibit": false,
      "prom_ql": "",
      "queries": [
        {
          "prom_ql": "(\n  (rate(prometheus_remote_storage_failed_samples_total{job=\"prometheus-k8s\",namespace=\"monitoring\"}[5m]) or rate(prometheus_remote_storage_samples_failed_total{job=\"prometheus-k8s\",namespace=\"monitoring\"}[5m]))\n/\n  (\n    (rate(prometheus_remote_storage_failed_samples_total{job=\"prometheus-k8s\",namespace=\"monitoring\"}[5m]) or rate(prometheus_remote_storage_samples_failed_total{job=\"prometheus-k8s\",namespace=\"monitoring\"}[5m]))\n  +\n    (rate(prometheus_remote_storage_succeeded_samples_total{job=\"prometheus-k8s\",namespace=\"monitoring\"}[5m]) or rate(prometheus_remote_storage_samples_total{job=\"prometheus-k8s\",namespace=\"monitoring\"}[5m]))\n  )\n)\n* 100\n> 1\n",
          "severity": 1
        }
      ],
      "severity": 0
    },
    "prom_eval_interval": 15,
    "enable_stime": "00:00",
    "enable_stimes": [
      "00:00"
    ],
    "enable_etime": "23:59",
    "enable_etimes": [
      "23:59"
    ],
    "enable_days_of_week": [
      "1",
      "2",
      "3",
      "4",
      "5",
      "6",
      "0"
    ],
    "enable_days_of_weeks": [
      [
        "1",
        "2",
        "3",
        "4",
        "5",
        "6",
        "0"
      ]
    ],
    "enable_in_bg": 0,
    "notify_recovered": 1,
    "notify_channels": [],
    "notify_repeat_step": 60,
    "notify_max_number": 0,
    "recover_duration": 0,
    "callbacks": [],
    "runbook_url": "",
    "append_tags": [],
    "annotations": null
  },
  {
    "cate": "prometheus",
    "datasource_ids": [
      0
    ],
    "name": "PrometheusRemoteWriteBehind",
    "note": "Prometheus {{$labels.namespace}}/{{$labels.pod}} remote write is {{ printf \"%.1f\" $value }}s behind for {{ $labels.remote_name}}:{{ $labels.url }}.",
    "prod": "metric",
    "algorithm": "",
    "algo_params": null,
    "delay": 0,
    "severity": 1,
    "severities": [
      1
    ],
    "disabled": 1,
    "prom_for_duration": 900,
    "prom_ql": "# Without max_over_time, failed scrapes could create false negatives, see\n# https://www.robustperception.io/alerting-on-gauges-in-prometheus-2-0 for details.\n(\n  max_over_time(prometheus_remote_storage_highest_timestamp_in_seconds{job=\"prometheus-k8s\",namespace=\"monitoring\"}[5m])\n- ignoring(remote_name, url) group_right\n  max_over_time(prometheus_remote_storage_queue_highest_sent_timestamp_seconds{job=\"prometheus-k8s\",namespace=\"monitoring\"}[5m])\n)\n> 120\n",
    "rule_config": {
      "algo_params": null,
      "inhibit": false,
      "prom_ql": "",
      "queries": [
        {
          "prom_ql": "# Without max_over_time, failed scrapes could create false negatives, see\n# https://www.robustperception.io/alerting-on-gauges-in-prometheus-2-0 for details.\n(\n  max_over_time(prometheus_remote_storage_highest_timestamp_in_seconds{job=\"prometheus-k8s\",namespace=\"monitoring\"}[5m])\n- ignoring(remote_name, url) group_right\n  max_over_time(prometheus_remote_storage_queue_highest_sent_timestamp_seconds{job=\"prometheus-k8s\",namespace=\"monitoring\"}[5m])\n)\n> 120\n",
          "severity": 1
        }
      ],
      "severity": 0
    },
    "prom_eval_interval": 15,
    "enable_stime": "00:00",
    "enable_stimes": [
      "00:00"
    ],
    "enable_etime": "23:59",
    "enable_etimes": [
      "23:59"
    ],
    "enable_days_of_week": [
      "1",
      "2",
      "3",
      "4",
      "5",
      "6",
      "0"
    ],
    "enable_days_of_weeks": [
      [
        "1",
        "2",
        "3",
        "4",
        "5",
        "6",
        "0"
      ]
    ],
    "enable_in_bg": 0,
    "notify_recovered": 1,
    "notify_channels": [],
    "notify_repeat_step": 60,
    "notify_max_number": 0,
    "recover_duration": 0,
    "callbacks": [],
    "runbook_url": "",
    "append_tags": [],
    "annotations": null
  },
  {
    "cate": "prometheus",
    "datasource_ids": [
      0
    ],
    "name": "PrometheusRemoteWriteDesiredShards",
    "note": "Prometheus {{$labels.namespace}}/{{$labels.pod}} remote write desired shards calculation wants to run {{ $value }} shards for queue {{ $labels.remote_name}}:{{ $labels.url }}, which is more than the max of {{ printf `prometheus_remote_storage_shards_max{instance=\"%s\",job=\"prometheus-k8s\",namespace=\"monitoring\"}` $labels.instance | query | first | value }}.",
    "prod": "metric",
    "algorithm": "",
    "algo_params": null,
    "delay": 0,
    "severity": 2,
    "severities": [
      2
    ],
    "disabled": 1,
    "prom_for_duration": 900,
    "prom_ql": "# Without max_over_time, failed scrapes could create false negatives, see\n# https://www.robustperception.io/alerting-on-gauges-in-prometheus-2-0 for details.\n(\n  max_over_time(prometheus_remote_storage_shards_desired{job=\"prometheus-k8s\",namespace=\"monitoring\"}[5m])\n>\n  max_over_time(prometheus_remote_storage_shards_max{job=\"prometheus-k8s\",namespace=\"monitoring\"}[5m])\n)\n",
    "rule_config": {
      "algo_params": null,
      "inhibit": false,
      "prom_ql": "",
      "queries": [
        {
          "prom_ql": "# Without max_over_time, failed scrapes could create false negatives, see\n# https://www.robustperception.io/alerting-on-gauges-in-prometheus-2-0 for details.\n(\n  max_over_time(prometheus_remote_storage_shards_desired{job=\"prometheus-k8s\",namespace=\"monitoring\"}[5m])\n>\n  max_over_time(prometheus_remote_storage_shards_max{job=\"prometheus-k8s\",namespace=\"monitoring\"}[5m])\n)\n",
          "severity": 2
        }
      ],
      "severity": 0
    },
    "prom_eval_interval": 15,
    "enable_stime": "00:00",
    "enable_stimes": [
      "00:00"
    ],
    "enable_etime": "23:59",
    "enable_etimes": [
      "23:59"
    ],
    "enable_days_of_week": [
      "1",
      "2",
      "3",
      "4",
      "5",
      "6",
      "0"
    ],
    "enable_days_of_weeks": [
      [
        "1",
        "2",
        "3",
        "4",
        "5",
        "6",
        "0"
      ]
    ],
    "enable_in_bg": 0,
    "notify_recovered": 1,
    "notify_channels": [],
    "notify_repeat_step": 60,
    "notify_max_number": 0,
    "recover_duration": 0,
    "callbacks": [],
    "runbook_url": "",
    "append_tags": [],
    "annotations": null
  },
  {
    "cate": "prometheus",
    "datasource_ids": [
      0
    ],
    "name": "PrometheusRuleFailures",
    "note": "Prometheus {{$labels.namespace}}/{{$labels.pod}} has failed to evaluate {{ printf \"%.0f\" $value }} rules in the last 5m.",
    "prod": "metric",
    "algorithm": "",
    "algo_params": null,
    "delay": 0,
    "severity": 1,
    "severities": [
      1
    ],
    "disabled": 1,
    "prom_for_duration": 900,
    "prom_ql": "increase(prometheus_rule_evaluation_failures_total{job=\"prometheus-k8s\",namespace=\"monitoring\"}[5m]) > 0\n",
    "rule_config": {
      "algo_params": null,
      "inhibit": false,
      "prom_ql": "",
      "queries": [
        {
          "prom_ql": "increase(prometheus_rule_evaluation_failures_total{job=\"prometheus-k8s\",namespace=\"monitoring\"}[5m]) > 0\n",
          "severity": 1
        }
      ],
      "severity": 0
    },
    "prom_eval_interval": 15,
    "enable_stime": "00:00",
    "enable_stimes": [
      "00:00"
    ],
    "enable_etime": "23:59",
    "enable_etimes": [
      "23:59"
    ],
    "enable_days_of_week": [
      "1",
      "2",
      "3",
      "4",
      "5",
      "6",
      "0"
    ],
    "enable_days_of_weeks": [
      [
        "1",
        "2",
        "3",
        "4",
        "5",
        "6",
        "0"
      ]
    ],
    "enable_in_bg": 0,
    "notify_recovered": 1,
    "notify_channels": [],
    "notify_repeat_step": 60,
    "notify_max_number": 0,
    "recover_duration": 0,
    "callbacks": [],
    "runbook_url": "",
    "append_tags": [],
    "annotations": null
  },
  {
    "cate": "prometheus",
    "datasource_ids": [
      0
    ],
    "name": "PrometheusScrapeBodySizeLimitHit",
    "note": "Prometheus {{$labels.namespace}}/{{$labels.pod}} has failed {{ printf \"%.0f\" $value }} scrapes in the last 5m because some targets exceeded the configured body_size_limit.",
    "prod": "metric",
    "algorithm": "",
    "algo_params": null,
    "delay": 0,
    "severity": 2,
    "severities": [
      2
    ],
    "disabled": 1,
    "prom_for_duration": 900,
    "prom_ql": "increase(prometheus_target_scrapes_exceeded_body_size_limit_total{job=\"prometheus-k8s\",namespace=\"monitoring\"}[5m]) > 0\n",
    "rule_config": {
      "algo_params": null,
      "inhibit": false,
      "prom_ql": "",
      "queries": [
        {
          "prom_ql": "increase(prometheus_target_scrapes_exceeded_body_size_limit_total{job=\"prometheus-k8s\",namespace=\"monitoring\"}[5m]) > 0\n",
          "severity": 2
        }
      ],
      "severity": 0
    },
    "prom_eval_interval": 15,
    "enable_stime": "00:00",
    "enable_stimes": [
      "00:00"
    ],
    "enable_etime": "23:59",
    "enable_etimes": [
      "23:59"
    ],
    "enable_days_of_week": [
      "1",
      "2",
      "3",
      "4",
      "5",
      "6",
      "0"
    ],
    "enable_days_of_weeks": [
      [
        "1",
        "2",
        "3",
        "4",
        "5",
        "6",
        "0"
      ]
    ],
    "enable_in_bg": 0,
    "notify_recovered": 1,
    "notify_channels": [],
    "notify_repeat_step": 60,
    "notify_max_number": 0,
    "recover_duration": 0,
    "callbacks": [],
    "runbook_url": "",
    "append_tags": [],
    "annotations": null
  },
  {
    "cate": "prometheus",
    "datasource_ids": [
      0
    ],
    "name": "PrometheusScrapeSampleLimitHit",
    "note": "Prometheus {{$labels.namespace}}/{{$labels.pod}} has failed {{ printf \"%.0f\" $value }} scrapes in the last 5m because some targets exceeded the configured sample_limit.",
    "prod": "metric",
    "algorithm": "",
    "algo_params": null,
    "delay": 0,
    "severity": 2,
    "severities": [
      2
    ],
    "disabled": 1,
    "prom_for_duration": 900,
    "prom_ql": "increase(prometheus_target_scrapes_exceeded_sample_limit_total{job=\"prometheus-k8s\",namespace=\"monitoring\"}[5m]) > 0\n",
    "rule_config": {
      "algo_params": null,
      "inhibit": false,
      "prom_ql": "",
      "queries": [
        {
          "prom_ql": "increase(prometheus_target_scrapes_exceeded_sample_limit_total{job=\"prometheus-k8s\",namespace=\"monitoring\"}[5m]) > 0\n",
          "severity": 2
        }
      ],
      "severity": 0
    },
    "prom_eval_interval": 15,
    "enable_stime": "00:00",
    "enable_stimes": [
      "00:00"
    ],
    "enable_etime": "23:59",
    "enable_etimes": [
      "23:59"
    ],
    "enable_days_of_week": [
      "1",
      "2",
      "3",
      "4",
      "5",
      "6",
      "0"
    ],
    "enable_days_of_weeks": [
      [
        "1",
        "2",
        "3",
        "4",
        "5",
        "6",
        "0"
      ]
    ],
    "enable_in_bg": 0,
    "notify_recovered": 1,
    "notify_channels": [],
    "notify_repeat_step": 60,
    "notify_max_number": 0,
    "recover_duration": 0,
    "callbacks": [],
    "runbook_url": "",
    "append_tags": [],
    "annotations": null
  },
  {
    "cate": "prometheus",
    "datasource_ids": [
      0
    ],
    "name": "PrometheusSDRefreshFailure",
    "note": "Prometheus {{$labels.namespace}}/{{$labels.pod}} has failed to refresh SD with mechanism {{$labels.mechanism}}.",
    "prod": "metric",
    "algorithm": "",
    "algo_params": null,
    "delay": 0,
    "severity": 2,
    "severities": [
      2
    ],
    "disabled": 1,
    "prom_for_duration": 1200,
    "prom_ql": "increase(prometheus_sd_refresh_failures_total{job=\"prometheus-k8s\",namespace=\"monitoring\"}[10m]) > 0\n",
    "rule_config": {
      "algo_params": null,
      "inhibit": false,
      "prom_ql": "",
      "queries": [
        {
          "prom_ql": "increase(prometheus_sd_refresh_failures_total{job=\"prometheus-k8s\",namespace=\"monitoring\"}[10m]) > 0\n",
          "severity": 2
        }
      ],
      "severity": 0
    },
    "prom_eval_interval": 15,
    "enable_stime": "00:00",
    "enable_stimes": [
      "00:00"
    ],
    "enable_etime": "23:59",
    "enable_etimes": [
      "23:59"
    ],
    "enable_days_of_week": [
      "1",
      "2",
      "3",
      "4",
      "5",
      "6",
      "0"
    ],
    "enable_days_of_weeks": [
      [
        "1",
        "2",
        "3",
        "4",
        "5",
        "6",
        "0"
      ]
    ],
    "enable_in_bg": 0,
    "notify_recovered": 1,
    "notify_channels": [],
    "notify_repeat_step": 60,
    "notify_max_number": 0,
    "recover_duration": 0,
    "callbacks": [],
    "runbook_url": "",
    "append_tags": [],
    "annotations": null
  },
  {
    "cate": "prometheus",
    "datasource_ids": [
      0
    ],
    "name": "PrometheusTargetLimitHit",
    "note": "Prometheus {{$labels.namespace}}/{{$labels.pod}} has dropped {{ printf \"%.0f\" $value }} targets because the number of targets exceeded the configured target_limit.",
    "prod": "metric",
    "algorithm": "",
    "algo_params": null,
    "delay": 0,
    "severity": 2,
    "severities": [
      2
    ],
    "disabled": 1,
    "prom_for_duration": 900,
    "prom_ql": "increase(prometheus_target_scrape_pool_exceeded_target_limit_total{job=\"prometheus-k8s\",namespace=\"monitoring\"}[5m]) > 0\n",
    "rule_config": {
      "algo_params": null,
      "inhibit": false,
      "prom_ql": "",
      "queries": [
        {
          "prom_ql": "increase(prometheus_target_scrape_pool_exceeded_target_limit_total{job=\"prometheus-k8s\",namespace=\"monitoring\"}[5m]) > 0\n",
          "severity": 2
        }
      ],
      "severity": 0
    },
    "prom_eval_interval": 15,
    "enable_stime": "00:00",
    "enable_stimes": [
      "00:00"
    ],
    "enable_etime": "23:59",
    "enable_etimes": [
      "23:59"
    ],
    "enable_days_of_week": [
      "1",
      "2",
      "3",
      "4",
      "5",
      "6",
      "0"
    ],
    "enable_days_of_weeks": [
      [
        "1",
        "2",
        "3",
        "4",
        "5",
        "6",
        "0"
      ]
    ],
    "enable_in_bg": 0,
    "notify_recovered": 1,
    "notify_channels": [],
    "notify_repeat_step": 60,
    "notify_max_number": 0,
    "recover_duration": 0,
    "callbacks": [],
    "runbook_url": "",
    "append_tags": [],
    "annotations": null
  },
  {
    "cate": "prometheus",
    "datasource_ids": [
      0
    ],
    "name": "PrometheusTargetSyncFailure",
    "note": "{{ printf \"%.0f\" $value }} targets in Prometheus {{$labels.namespace}}/{{$labels.pod}} have failed to sync because invalid configuration was supplied.",
    "prod": "metric",
    "algorithm": "",
    "algo_params": null,
    "delay": 0,
    "severity": 1,
    "severities": [
      1
    ],
    "disabled": 1,
    "prom_for_duration": 300,
    "prom_ql": "increase(prometheus_target_sync_failed_total{job=\"prometheus-k8s\",namespace=\"monitoring\"}[30m]) > 0\n",
    "rule_config": {
      "algo_params": null,
      "inhibit": false,
      "prom_ql": "",
      "queries": [
        {
          "prom_ql": "increase(prometheus_target_sync_failed_total{job=\"prometheus-k8s\",namespace=\"monitoring\"}[30m]) > 0\n",
          "severity": 1
        }
      ],
      "severity": 0
    },
    "prom_eval_interval": 15,
    "enable_stime": "00:00",
    "enable_stimes": [
      "00:00"
    ],
    "enable_etime": "23:59",
    "enable_etimes": [
      "23:59"
    ],
    "enable_days_of_week": [
      "1",
      "2",
      "3",
      "4",
      "5",
      "6",
      "0"
    ],
    "enable_days_of_weeks": [
      [
        "1",
        "2",
        "3",
        "4",
        "5",
        "6",
        "0"
      ]
    ],
    "enable_in_bg": 0,
    "notify_recovered": 1,
    "notify_channels": [],
    "notify_repeat_step": 60,
    "notify_max_number": 0,
    "recover_duration": 0,
    "callbacks": [],
    "runbook_url": "",
    "append_tags": [],
    "annotations": null
  },
  {
    "cate": "prometheus",
    "datasource_ids": [
      0
    ],
    "name": "PrometheusTSDBCompactionsFailing",
    "note": "Prometheus {{$labels.namespace}}/{{$labels.pod}} has detected {{$value | humanize}} compaction failures over the last 3h.",
    "prod": "metric",
    "algorithm": "",
    "algo_params": null,
    "delay": 0,
    "severity": 2,
    "severities": [
      2
    ],
    "disabled": 1,
    "prom_for_duration": 14400,
    "prom_ql": "increase(prometheus_tsdb_compactions_failed_total{job=\"prometheus-k8s\",namespace=\"monitoring\"}[3h]) > 0\n",
    "rule_config": {
      "algo_params": null,
      "inhibit": false,
      "prom_ql": "",
      "queries": [
        {
          "prom_ql": "increase(prometheus_tsdb_compactions_failed_total{job=\"prometheus-k8s\",namespace=\"monitoring\"}[3h]) > 0\n",
          "severity": 2
        }
      ],
      "severity": 0
    },
    "prom_eval_interval": 15,
    "enable_stime": "00:00",
    "enable_stimes": [
      "00:00"
    ],
    "enable_etime": "23:59",
    "enable_etimes": [
      "23:59"
    ],
    "enable_days_of_week": [
      "1",
      "2",
      "3",
      "4",
      "5",
      "6",
      "0"
    ],
    "enable_days_of_weeks": [
      [
        "1",
        "2",
        "3",
        "4",
        "5",
        "6",
        "0"
      ]
    ],
    "enable_in_bg": 0,
    "notify_recovered": 1,
    "notify_channels": [],
    "notify_repeat_step": 60,
    "notify_max_number": 0,
    "recover_duration": 0,
    "callbacks": [],
    "runbook_url": "",
    "append_tags": [],
    "annotations": null
  },
  {
    "cate": "prometheus",
    "datasource_ids": [
      0
    ],
    "name": "PrometheusTSDBReloadsFailing",
    "note": "Prometheus {{$labels.namespace}}/{{$labels.pod}} has detected {{$value | humanize}} reload failures over the last 3h.",
    "prod": "metric",
    "algorithm": "",
    "algo_params": null,
    "delay": 0,
    "severity": 2,
    "severities": [
      2
    ],
    "disabled": 1,
    "prom_for_duration": 14400,
    "prom_ql": "increase(prometheus_tsdb_reloads_failures_total{job=\"prometheus-k8s\",namespace=\"monitoring\"}[3h]) > 0\n",
    "rule_config": {
      "algo_params": null,
      "inhibit": false,
      "prom_ql": "",
      "queries": [
        {
          "prom_ql": "increase(prometheus_tsdb_reloads_failures_total{job=\"prometheus-k8s\",namespace=\"monitoring\"}[3h]) > 0\n",
          "severity": 2
        }
      ],
      "severity": 0
    },
    "prom_eval_interval": 15,
    "enable_stime": "00:00",
    "enable_stimes": [
      "00:00"
    ],
    "enable_etime": "23:59",
    "enable_etimes": [
      "23:59"
    ],
    "enable_days_of_week": [
      "1",
      "2",
      "3",
      "4",
      "5",
      "6",
      "0"
    ],
    "enable_days_of_weeks": [
      [
        "1",
        "2",
        "3",
        "4",
        "5",
        "6",
        "0"
      ]
    ],
    "enable_in_bg": 0,
    "notify_recovered": 1,
    "notify_channels": [],
    "notify_repeat_step": 60,
    "notify_max_number": 0,
    "recover_duration": 0,
    "callbacks": [],
    "runbook_url": "",
    "append_tags": [],
    "annotations": null
  }
]